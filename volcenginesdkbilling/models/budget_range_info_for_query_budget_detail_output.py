# coding: utf-8

"""
    billing

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class BudgetRangeInfoForQueryBudgetDetailOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'budget_range_billing_mode': 'list[BudgetRangeBillingModeForQueryBudgetDetailOutput]',
        'budget_range_owner': 'list[BudgetRangeOwnerForQueryBudgetDetailOutput]',
        'budget_range_payer': 'list[BudgetRangePayerForQueryBudgetDetailOutput]',
        'budget_range_product': 'list[BudgetRangeProductForQueryBudgetDetailOutput]',
        'budget_range_project': 'list[str]',
        'budget_range_region': 'list[BudgetRangeRegionForQueryBudgetDetailOutput]',
        'budget_range_subject': 'list[BudgetRangeSubjectForQueryBudgetDetailOutput]',
        'budget_range_tag': 'list[str]',
        'budget_range_zone': 'list[BudgetRangeZoneForQueryBudgetDetailOutput]'
    }

    attribute_map = {
        'budget_range_billing_mode': 'BudgetRangeBillingMode',
        'budget_range_owner': 'BudgetRangeOwner',
        'budget_range_payer': 'BudgetRangePayer',
        'budget_range_product': 'BudgetRangeProduct',
        'budget_range_project': 'BudgetRangeProject',
        'budget_range_region': 'BudgetRangeRegion',
        'budget_range_subject': 'BudgetRangeSubject',
        'budget_range_tag': 'BudgetRangeTag',
        'budget_range_zone': 'BudgetRangeZone'
    }

    def __init__(self, budget_range_billing_mode=None, budget_range_owner=None, budget_range_payer=None, budget_range_product=None, budget_range_project=None, budget_range_region=None, budget_range_subject=None, budget_range_tag=None, budget_range_zone=None, _configuration=None):  # noqa: E501
        """BudgetRangeInfoForQueryBudgetDetailOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._budget_range_billing_mode = None
        self._budget_range_owner = None
        self._budget_range_payer = None
        self._budget_range_product = None
        self._budget_range_project = None
        self._budget_range_region = None
        self._budget_range_subject = None
        self._budget_range_tag = None
        self._budget_range_zone = None
        self.discriminator = None

        if budget_range_billing_mode is not None:
            self.budget_range_billing_mode = budget_range_billing_mode
        if budget_range_owner is not None:
            self.budget_range_owner = budget_range_owner
        if budget_range_payer is not None:
            self.budget_range_payer = budget_range_payer
        if budget_range_product is not None:
            self.budget_range_product = budget_range_product
        if budget_range_project is not None:
            self.budget_range_project = budget_range_project
        if budget_range_region is not None:
            self.budget_range_region = budget_range_region
        if budget_range_subject is not None:
            self.budget_range_subject = budget_range_subject
        if budget_range_tag is not None:
            self.budget_range_tag = budget_range_tag
        if budget_range_zone is not None:
            self.budget_range_zone = budget_range_zone

    @property
    def budget_range_billing_mode(self):
        """Gets the budget_range_billing_mode of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501


        :return: The budget_range_billing_mode of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :rtype: list[BudgetRangeBillingModeForQueryBudgetDetailOutput]
        """
        return self._budget_range_billing_mode

    @budget_range_billing_mode.setter
    def budget_range_billing_mode(self, budget_range_billing_mode):
        """Sets the budget_range_billing_mode of this BudgetRangeInfoForQueryBudgetDetailOutput.


        :param budget_range_billing_mode: The budget_range_billing_mode of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :type: list[BudgetRangeBillingModeForQueryBudgetDetailOutput]
        """

        self._budget_range_billing_mode = budget_range_billing_mode

    @property
    def budget_range_owner(self):
        """Gets the budget_range_owner of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501


        :return: The budget_range_owner of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :rtype: list[BudgetRangeOwnerForQueryBudgetDetailOutput]
        """
        return self._budget_range_owner

    @budget_range_owner.setter
    def budget_range_owner(self, budget_range_owner):
        """Sets the budget_range_owner of this BudgetRangeInfoForQueryBudgetDetailOutput.


        :param budget_range_owner: The budget_range_owner of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :type: list[BudgetRangeOwnerForQueryBudgetDetailOutput]
        """

        self._budget_range_owner = budget_range_owner

    @property
    def budget_range_payer(self):
        """Gets the budget_range_payer of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501


        :return: The budget_range_payer of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :rtype: list[BudgetRangePayerForQueryBudgetDetailOutput]
        """
        return self._budget_range_payer

    @budget_range_payer.setter
    def budget_range_payer(self, budget_range_payer):
        """Sets the budget_range_payer of this BudgetRangeInfoForQueryBudgetDetailOutput.


        :param budget_range_payer: The budget_range_payer of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :type: list[BudgetRangePayerForQueryBudgetDetailOutput]
        """

        self._budget_range_payer = budget_range_payer

    @property
    def budget_range_product(self):
        """Gets the budget_range_product of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501


        :return: The budget_range_product of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :rtype: list[BudgetRangeProductForQueryBudgetDetailOutput]
        """
        return self._budget_range_product

    @budget_range_product.setter
    def budget_range_product(self, budget_range_product):
        """Sets the budget_range_product of this BudgetRangeInfoForQueryBudgetDetailOutput.


        :param budget_range_product: The budget_range_product of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :type: list[BudgetRangeProductForQueryBudgetDetailOutput]
        """

        self._budget_range_product = budget_range_product

    @property
    def budget_range_project(self):
        """Gets the budget_range_project of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501


        :return: The budget_range_project of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :rtype: list[str]
        """
        return self._budget_range_project

    @budget_range_project.setter
    def budget_range_project(self, budget_range_project):
        """Sets the budget_range_project of this BudgetRangeInfoForQueryBudgetDetailOutput.


        :param budget_range_project: The budget_range_project of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :type: list[str]
        """

        self._budget_range_project = budget_range_project

    @property
    def budget_range_region(self):
        """Gets the budget_range_region of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501


        :return: The budget_range_region of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :rtype: list[BudgetRangeRegionForQueryBudgetDetailOutput]
        """
        return self._budget_range_region

    @budget_range_region.setter
    def budget_range_region(self, budget_range_region):
        """Sets the budget_range_region of this BudgetRangeInfoForQueryBudgetDetailOutput.


        :param budget_range_region: The budget_range_region of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :type: list[BudgetRangeRegionForQueryBudgetDetailOutput]
        """

        self._budget_range_region = budget_range_region

    @property
    def budget_range_subject(self):
        """Gets the budget_range_subject of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501


        :return: The budget_range_subject of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :rtype: list[BudgetRangeSubjectForQueryBudgetDetailOutput]
        """
        return self._budget_range_subject

    @budget_range_subject.setter
    def budget_range_subject(self, budget_range_subject):
        """Sets the budget_range_subject of this BudgetRangeInfoForQueryBudgetDetailOutput.


        :param budget_range_subject: The budget_range_subject of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :type: list[BudgetRangeSubjectForQueryBudgetDetailOutput]
        """

        self._budget_range_subject = budget_range_subject

    @property
    def budget_range_tag(self):
        """Gets the budget_range_tag of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501


        :return: The budget_range_tag of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :rtype: list[str]
        """
        return self._budget_range_tag

    @budget_range_tag.setter
    def budget_range_tag(self, budget_range_tag):
        """Sets the budget_range_tag of this BudgetRangeInfoForQueryBudgetDetailOutput.


        :param budget_range_tag: The budget_range_tag of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :type: list[str]
        """

        self._budget_range_tag = budget_range_tag

    @property
    def budget_range_zone(self):
        """Gets the budget_range_zone of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501


        :return: The budget_range_zone of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :rtype: list[BudgetRangeZoneForQueryBudgetDetailOutput]
        """
        return self._budget_range_zone

    @budget_range_zone.setter
    def budget_range_zone(self, budget_range_zone):
        """Sets the budget_range_zone of this BudgetRangeInfoForQueryBudgetDetailOutput.


        :param budget_range_zone: The budget_range_zone of this BudgetRangeInfoForQueryBudgetDetailOutput.  # noqa: E501
        :type: list[BudgetRangeZoneForQueryBudgetDetailOutput]
        """

        self._budget_range_zone = budget_range_zone

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BudgetRangeInfoForQueryBudgetDetailOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BudgetRangeInfoForQueryBudgetDetailOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, BudgetRangeInfoForQueryBudgetDetailOutput):
            return True

        return self.to_dict() != other.to_dict()
