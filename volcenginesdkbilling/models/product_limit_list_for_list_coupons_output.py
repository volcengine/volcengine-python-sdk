# coding: utf-8

"""
    billing

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class ProductLimitListForListCouponsOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'billing_method': 'str',
        'charge_item_code': 'str',
        'charge_item_type': 'int',
        'configuration_code': 'str',
        'configuration_name': 'str',
        'configuration_type': 'int',
        'product_code': 'str',
        'product_name': 'str',
        'time_limit_lower': 'int',
        'time_limit_upper': 'int'
    }

    attribute_map = {
        'billing_method': 'BillingMethod',
        'charge_item_code': 'ChargeItemCode',
        'charge_item_type': 'ChargeItemType',
        'configuration_code': 'ConfigurationCode',
        'configuration_name': 'ConfigurationName',
        'configuration_type': 'ConfigurationType',
        'product_code': 'ProductCode',
        'product_name': 'ProductName',
        'time_limit_lower': 'TimeLimitLower',
        'time_limit_upper': 'TimeLimitUpper'
    }

    def __init__(self, billing_method=None, charge_item_code=None, charge_item_type=None, configuration_code=None, configuration_name=None, configuration_type=None, product_code=None, product_name=None, time_limit_lower=None, time_limit_upper=None, _configuration=None):  # noqa: E501
        """ProductLimitListForListCouponsOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._billing_method = None
        self._charge_item_code = None
        self._charge_item_type = None
        self._configuration_code = None
        self._configuration_name = None
        self._configuration_type = None
        self._product_code = None
        self._product_name = None
        self._time_limit_lower = None
        self._time_limit_upper = None
        self.discriminator = None

        if billing_method is not None:
            self.billing_method = billing_method
        if charge_item_code is not None:
            self.charge_item_code = charge_item_code
        if charge_item_type is not None:
            self.charge_item_type = charge_item_type
        if configuration_code is not None:
            self.configuration_code = configuration_code
        if configuration_name is not None:
            self.configuration_name = configuration_name
        if configuration_type is not None:
            self.configuration_type = configuration_type
        if product_code is not None:
            self.product_code = product_code
        if product_name is not None:
            self.product_name = product_name
        if time_limit_lower is not None:
            self.time_limit_lower = time_limit_lower
        if time_limit_upper is not None:
            self.time_limit_upper = time_limit_upper

    @property
    def billing_method(self):
        """Gets the billing_method of this ProductLimitListForListCouponsOutput.  # noqa: E501


        :return: The billing_method of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :rtype: str
        """
        return self._billing_method

    @billing_method.setter
    def billing_method(self, billing_method):
        """Sets the billing_method of this ProductLimitListForListCouponsOutput.


        :param billing_method: The billing_method of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :type: str
        """

        self._billing_method = billing_method

    @property
    def charge_item_code(self):
        """Gets the charge_item_code of this ProductLimitListForListCouponsOutput.  # noqa: E501


        :return: The charge_item_code of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :rtype: str
        """
        return self._charge_item_code

    @charge_item_code.setter
    def charge_item_code(self, charge_item_code):
        """Sets the charge_item_code of this ProductLimitListForListCouponsOutput.


        :param charge_item_code: The charge_item_code of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :type: str
        """

        self._charge_item_code = charge_item_code

    @property
    def charge_item_type(self):
        """Gets the charge_item_type of this ProductLimitListForListCouponsOutput.  # noqa: E501


        :return: The charge_item_type of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :rtype: int
        """
        return self._charge_item_type

    @charge_item_type.setter
    def charge_item_type(self, charge_item_type):
        """Sets the charge_item_type of this ProductLimitListForListCouponsOutput.


        :param charge_item_type: The charge_item_type of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :type: int
        """

        self._charge_item_type = charge_item_type

    @property
    def configuration_code(self):
        """Gets the configuration_code of this ProductLimitListForListCouponsOutput.  # noqa: E501


        :return: The configuration_code of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :rtype: str
        """
        return self._configuration_code

    @configuration_code.setter
    def configuration_code(self, configuration_code):
        """Sets the configuration_code of this ProductLimitListForListCouponsOutput.


        :param configuration_code: The configuration_code of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :type: str
        """

        self._configuration_code = configuration_code

    @property
    def configuration_name(self):
        """Gets the configuration_name of this ProductLimitListForListCouponsOutput.  # noqa: E501


        :return: The configuration_name of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :rtype: str
        """
        return self._configuration_name

    @configuration_name.setter
    def configuration_name(self, configuration_name):
        """Sets the configuration_name of this ProductLimitListForListCouponsOutput.


        :param configuration_name: The configuration_name of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :type: str
        """

        self._configuration_name = configuration_name

    @property
    def configuration_type(self):
        """Gets the configuration_type of this ProductLimitListForListCouponsOutput.  # noqa: E501


        :return: The configuration_type of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :rtype: int
        """
        return self._configuration_type

    @configuration_type.setter
    def configuration_type(self, configuration_type):
        """Sets the configuration_type of this ProductLimitListForListCouponsOutput.


        :param configuration_type: The configuration_type of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :type: int
        """

        self._configuration_type = configuration_type

    @property
    def product_code(self):
        """Gets the product_code of this ProductLimitListForListCouponsOutput.  # noqa: E501


        :return: The product_code of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this ProductLimitListForListCouponsOutput.


        :param product_code: The product_code of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :type: str
        """

        self._product_code = product_code

    @property
    def product_name(self):
        """Gets the product_name of this ProductLimitListForListCouponsOutput.  # noqa: E501


        :return: The product_name of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this ProductLimitListForListCouponsOutput.


        :param product_name: The product_name of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :type: str
        """

        self._product_name = product_name

    @property
    def time_limit_lower(self):
        """Gets the time_limit_lower of this ProductLimitListForListCouponsOutput.  # noqa: E501


        :return: The time_limit_lower of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :rtype: int
        """
        return self._time_limit_lower

    @time_limit_lower.setter
    def time_limit_lower(self, time_limit_lower):
        """Sets the time_limit_lower of this ProductLimitListForListCouponsOutput.


        :param time_limit_lower: The time_limit_lower of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :type: int
        """

        self._time_limit_lower = time_limit_lower

    @property
    def time_limit_upper(self):
        """Gets the time_limit_upper of this ProductLimitListForListCouponsOutput.  # noqa: E501


        :return: The time_limit_upper of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :rtype: int
        """
        return self._time_limit_upper

    @time_limit_upper.setter
    def time_limit_upper(self, time_limit_upper):
        """Sets the time_limit_upper of this ProductLimitListForListCouponsOutput.


        :param time_limit_upper: The time_limit_upper of this ProductLimitListForListCouponsOutput.  # noqa: E501
        :type: int
        """

        self._time_limit_upper = time_limit_upper

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ProductLimitListForListCouponsOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProductLimitListForListCouponsOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ProductLimitListForListCouponsOutput):
            return True

        return self.to_dict() != other.to_dict()
