# coding: utf-8

"""
    rds_mysql_v2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class DescribeResourceUsageResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'backup_audit_log_size': 'int',
        'backup_bin_log_size': 'int',
        'backup_data_size': 'int',
        'backup_error_log_size': 'int',
        'backup_free_quota_size': 'int',
        'backup_log_size': 'int',
        'backup_slow_log_size': 'int',
        'backup_use': 'float',
        'basic_backup_binlog_size': 'int',
        'basic_backup_data_size': 'int',
        'storage_audit_log_size': 'int',
        'storage_bin_log_size': 'int',
        'storage_data_size': 'int',
        'storage_error_log_size': 'int',
        'storage_log_size': 'int',
        'storage_slow_log_size': 'int',
        'storage_space': 'int',
        'storage_use': 'float'
    }

    attribute_map = {
        'backup_audit_log_size': 'BackupAuditLogSize',
        'backup_bin_log_size': 'BackupBinLogSize',
        'backup_data_size': 'BackupDataSize',
        'backup_error_log_size': 'BackupErrorLogSize',
        'backup_free_quota_size': 'BackupFreeQuotaSize',
        'backup_log_size': 'BackupLogSize',
        'backup_slow_log_size': 'BackupSlowLogSize',
        'backup_use': 'BackupUse',
        'basic_backup_binlog_size': 'BasicBackupBinlogSize',
        'basic_backup_data_size': 'BasicBackupDataSize',
        'storage_audit_log_size': 'StorageAuditLogSize',
        'storage_bin_log_size': 'StorageBinLogSize',
        'storage_data_size': 'StorageDataSize',
        'storage_error_log_size': 'StorageErrorLogSize',
        'storage_log_size': 'StorageLogSize',
        'storage_slow_log_size': 'StorageSlowLogSize',
        'storage_space': 'StorageSpace',
        'storage_use': 'StorageUse'
    }

    def __init__(self, backup_audit_log_size=None, backup_bin_log_size=None, backup_data_size=None, backup_error_log_size=None, backup_free_quota_size=None, backup_log_size=None, backup_slow_log_size=None, backup_use=None, basic_backup_binlog_size=None, basic_backup_data_size=None, storage_audit_log_size=None, storage_bin_log_size=None, storage_data_size=None, storage_error_log_size=None, storage_log_size=None, storage_slow_log_size=None, storage_space=None, storage_use=None, _configuration=None):  # noqa: E501
        """DescribeResourceUsageResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._backup_audit_log_size = None
        self._backup_bin_log_size = None
        self._backup_data_size = None
        self._backup_error_log_size = None
        self._backup_free_quota_size = None
        self._backup_log_size = None
        self._backup_slow_log_size = None
        self._backup_use = None
        self._basic_backup_binlog_size = None
        self._basic_backup_data_size = None
        self._storage_audit_log_size = None
        self._storage_bin_log_size = None
        self._storage_data_size = None
        self._storage_error_log_size = None
        self._storage_log_size = None
        self._storage_slow_log_size = None
        self._storage_space = None
        self._storage_use = None
        self.discriminator = None

        if backup_audit_log_size is not None:
            self.backup_audit_log_size = backup_audit_log_size
        if backup_bin_log_size is not None:
            self.backup_bin_log_size = backup_bin_log_size
        if backup_data_size is not None:
            self.backup_data_size = backup_data_size
        if backup_error_log_size is not None:
            self.backup_error_log_size = backup_error_log_size
        if backup_free_quota_size is not None:
            self.backup_free_quota_size = backup_free_quota_size
        if backup_log_size is not None:
            self.backup_log_size = backup_log_size
        if backup_slow_log_size is not None:
            self.backup_slow_log_size = backup_slow_log_size
        if backup_use is not None:
            self.backup_use = backup_use
        if basic_backup_binlog_size is not None:
            self.basic_backup_binlog_size = basic_backup_binlog_size
        if basic_backup_data_size is not None:
            self.basic_backup_data_size = basic_backup_data_size
        if storage_audit_log_size is not None:
            self.storage_audit_log_size = storage_audit_log_size
        if storage_bin_log_size is not None:
            self.storage_bin_log_size = storage_bin_log_size
        if storage_data_size is not None:
            self.storage_data_size = storage_data_size
        if storage_error_log_size is not None:
            self.storage_error_log_size = storage_error_log_size
        if storage_log_size is not None:
            self.storage_log_size = storage_log_size
        if storage_slow_log_size is not None:
            self.storage_slow_log_size = storage_slow_log_size
        if storage_space is not None:
            self.storage_space = storage_space
        if storage_use is not None:
            self.storage_use = storage_use

    @property
    def backup_audit_log_size(self):
        """Gets the backup_audit_log_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The backup_audit_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._backup_audit_log_size

    @backup_audit_log_size.setter
    def backup_audit_log_size(self, backup_audit_log_size):
        """Sets the backup_audit_log_size of this DescribeResourceUsageResponse.


        :param backup_audit_log_size: The backup_audit_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._backup_audit_log_size = backup_audit_log_size

    @property
    def backup_bin_log_size(self):
        """Gets the backup_bin_log_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The backup_bin_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._backup_bin_log_size

    @backup_bin_log_size.setter
    def backup_bin_log_size(self, backup_bin_log_size):
        """Sets the backup_bin_log_size of this DescribeResourceUsageResponse.


        :param backup_bin_log_size: The backup_bin_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._backup_bin_log_size = backup_bin_log_size

    @property
    def backup_data_size(self):
        """Gets the backup_data_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The backup_data_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._backup_data_size

    @backup_data_size.setter
    def backup_data_size(self, backup_data_size):
        """Sets the backup_data_size of this DescribeResourceUsageResponse.


        :param backup_data_size: The backup_data_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._backup_data_size = backup_data_size

    @property
    def backup_error_log_size(self):
        """Gets the backup_error_log_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The backup_error_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._backup_error_log_size

    @backup_error_log_size.setter
    def backup_error_log_size(self, backup_error_log_size):
        """Sets the backup_error_log_size of this DescribeResourceUsageResponse.


        :param backup_error_log_size: The backup_error_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._backup_error_log_size = backup_error_log_size

    @property
    def backup_free_quota_size(self):
        """Gets the backup_free_quota_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The backup_free_quota_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._backup_free_quota_size

    @backup_free_quota_size.setter
    def backup_free_quota_size(self, backup_free_quota_size):
        """Sets the backup_free_quota_size of this DescribeResourceUsageResponse.


        :param backup_free_quota_size: The backup_free_quota_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._backup_free_quota_size = backup_free_quota_size

    @property
    def backup_log_size(self):
        """Gets the backup_log_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The backup_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._backup_log_size

    @backup_log_size.setter
    def backup_log_size(self, backup_log_size):
        """Sets the backup_log_size of this DescribeResourceUsageResponse.


        :param backup_log_size: The backup_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._backup_log_size = backup_log_size

    @property
    def backup_slow_log_size(self):
        """Gets the backup_slow_log_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The backup_slow_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._backup_slow_log_size

    @backup_slow_log_size.setter
    def backup_slow_log_size(self, backup_slow_log_size):
        """Sets the backup_slow_log_size of this DescribeResourceUsageResponse.


        :param backup_slow_log_size: The backup_slow_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._backup_slow_log_size = backup_slow_log_size

    @property
    def backup_use(self):
        """Gets the backup_use of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The backup_use of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: float
        """
        return self._backup_use

    @backup_use.setter
    def backup_use(self, backup_use):
        """Sets the backup_use of this DescribeResourceUsageResponse.


        :param backup_use: The backup_use of this DescribeResourceUsageResponse.  # noqa: E501
        :type: float
        """

        self._backup_use = backup_use

    @property
    def basic_backup_binlog_size(self):
        """Gets the basic_backup_binlog_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The basic_backup_binlog_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._basic_backup_binlog_size

    @basic_backup_binlog_size.setter
    def basic_backup_binlog_size(self, basic_backup_binlog_size):
        """Sets the basic_backup_binlog_size of this DescribeResourceUsageResponse.


        :param basic_backup_binlog_size: The basic_backup_binlog_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._basic_backup_binlog_size = basic_backup_binlog_size

    @property
    def basic_backup_data_size(self):
        """Gets the basic_backup_data_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The basic_backup_data_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._basic_backup_data_size

    @basic_backup_data_size.setter
    def basic_backup_data_size(self, basic_backup_data_size):
        """Sets the basic_backup_data_size of this DescribeResourceUsageResponse.


        :param basic_backup_data_size: The basic_backup_data_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._basic_backup_data_size = basic_backup_data_size

    @property
    def storage_audit_log_size(self):
        """Gets the storage_audit_log_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The storage_audit_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._storage_audit_log_size

    @storage_audit_log_size.setter
    def storage_audit_log_size(self, storage_audit_log_size):
        """Sets the storage_audit_log_size of this DescribeResourceUsageResponse.


        :param storage_audit_log_size: The storage_audit_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._storage_audit_log_size = storage_audit_log_size

    @property
    def storage_bin_log_size(self):
        """Gets the storage_bin_log_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The storage_bin_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._storage_bin_log_size

    @storage_bin_log_size.setter
    def storage_bin_log_size(self, storage_bin_log_size):
        """Sets the storage_bin_log_size of this DescribeResourceUsageResponse.


        :param storage_bin_log_size: The storage_bin_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._storage_bin_log_size = storage_bin_log_size

    @property
    def storage_data_size(self):
        """Gets the storage_data_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The storage_data_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._storage_data_size

    @storage_data_size.setter
    def storage_data_size(self, storage_data_size):
        """Sets the storage_data_size of this DescribeResourceUsageResponse.


        :param storage_data_size: The storage_data_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._storage_data_size = storage_data_size

    @property
    def storage_error_log_size(self):
        """Gets the storage_error_log_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The storage_error_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._storage_error_log_size

    @storage_error_log_size.setter
    def storage_error_log_size(self, storage_error_log_size):
        """Sets the storage_error_log_size of this DescribeResourceUsageResponse.


        :param storage_error_log_size: The storage_error_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._storage_error_log_size = storage_error_log_size

    @property
    def storage_log_size(self):
        """Gets the storage_log_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The storage_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._storage_log_size

    @storage_log_size.setter
    def storage_log_size(self, storage_log_size):
        """Sets the storage_log_size of this DescribeResourceUsageResponse.


        :param storage_log_size: The storage_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._storage_log_size = storage_log_size

    @property
    def storage_slow_log_size(self):
        """Gets the storage_slow_log_size of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The storage_slow_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._storage_slow_log_size

    @storage_slow_log_size.setter
    def storage_slow_log_size(self, storage_slow_log_size):
        """Sets the storage_slow_log_size of this DescribeResourceUsageResponse.


        :param storage_slow_log_size: The storage_slow_log_size of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._storage_slow_log_size = storage_slow_log_size

    @property
    def storage_space(self):
        """Gets the storage_space of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The storage_space of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: int
        """
        return self._storage_space

    @storage_space.setter
    def storage_space(self, storage_space):
        """Sets the storage_space of this DescribeResourceUsageResponse.


        :param storage_space: The storage_space of this DescribeResourceUsageResponse.  # noqa: E501
        :type: int
        """

        self._storage_space = storage_space

    @property
    def storage_use(self):
        """Gets the storage_use of this DescribeResourceUsageResponse.  # noqa: E501


        :return: The storage_use of this DescribeResourceUsageResponse.  # noqa: E501
        :rtype: float
        """
        return self._storage_use

    @storage_use.setter
    def storage_use(self, storage_use):
        """Sets the storage_use of this DescribeResourceUsageResponse.


        :param storage_use: The storage_use of this DescribeResourceUsageResponse.  # noqa: E501
        :type: float
        """

        self._storage_use = storage_use

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DescribeResourceUsageResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DescribeResourceUsageResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DescribeResourceUsageResponse):
            return True

        return self.to_dict() != other.to_dict()
