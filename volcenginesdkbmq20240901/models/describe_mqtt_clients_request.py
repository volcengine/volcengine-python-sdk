# coding: utf-8

"""
    bmq20240901

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class DescribeMQTTClientsRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'client_id_like': 'str',
        'client_id_specify_list': 'list[str]',
        'connection_state': 'str',
        'instance_id': 'str',
        'page_number': 'int',
        'page_size': 'int',
        'user_name_like': 'str',
        'user_name_specify_list': 'list[str]'
    }

    attribute_map = {
        'client_id_like': 'ClientIdLike',
        'client_id_specify_list': 'ClientIdSpecifyList',
        'connection_state': 'ConnectionState',
        'instance_id': 'InstanceId',
        'page_number': 'PageNumber',
        'page_size': 'PageSize',
        'user_name_like': 'UserNameLike',
        'user_name_specify_list': 'UserNameSpecifyList'
    }

    def __init__(self, client_id_like=None, client_id_specify_list=None, connection_state=None, instance_id=None, page_number=None, page_size=None, user_name_like=None, user_name_specify_list=None, _configuration=None):  # noqa: E501
        """DescribeMQTTClientsRequest - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._client_id_like = None
        self._client_id_specify_list = None
        self._connection_state = None
        self._instance_id = None
        self._page_number = None
        self._page_size = None
        self._user_name_like = None
        self._user_name_specify_list = None
        self.discriminator = None

        if client_id_like is not None:
            self.client_id_like = client_id_like
        if client_id_specify_list is not None:
            self.client_id_specify_list = client_id_specify_list
        if connection_state is not None:
            self.connection_state = connection_state
        self.instance_id = instance_id
        if page_number is not None:
            self.page_number = page_number
        if page_size is not None:
            self.page_size = page_size
        if user_name_like is not None:
            self.user_name_like = user_name_like
        if user_name_specify_list is not None:
            self.user_name_specify_list = user_name_specify_list

    @property
    def client_id_like(self):
        """Gets the client_id_like of this DescribeMQTTClientsRequest.  # noqa: E501


        :return: The client_id_like of this DescribeMQTTClientsRequest.  # noqa: E501
        :rtype: str
        """
        return self._client_id_like

    @client_id_like.setter
    def client_id_like(self, client_id_like):
        """Sets the client_id_like of this DescribeMQTTClientsRequest.


        :param client_id_like: The client_id_like of this DescribeMQTTClientsRequest.  # noqa: E501
        :type: str
        """

        self._client_id_like = client_id_like

    @property
    def client_id_specify_list(self):
        """Gets the client_id_specify_list of this DescribeMQTTClientsRequest.  # noqa: E501


        :return: The client_id_specify_list of this DescribeMQTTClientsRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._client_id_specify_list

    @client_id_specify_list.setter
    def client_id_specify_list(self, client_id_specify_list):
        """Sets the client_id_specify_list of this DescribeMQTTClientsRequest.


        :param client_id_specify_list: The client_id_specify_list of this DescribeMQTTClientsRequest.  # noqa: E501
        :type: list[str]
        """

        self._client_id_specify_list = client_id_specify_list

    @property
    def connection_state(self):
        """Gets the connection_state of this DescribeMQTTClientsRequest.  # noqa: E501


        :return: The connection_state of this DescribeMQTTClientsRequest.  # noqa: E501
        :rtype: str
        """
        return self._connection_state

    @connection_state.setter
    def connection_state(self, connection_state):
        """Sets the connection_state of this DescribeMQTTClientsRequest.


        :param connection_state: The connection_state of this DescribeMQTTClientsRequest.  # noqa: E501
        :type: str
        """
        allowed_values = ["Online", "Offline"]  # noqa: E501
        if (self._configuration.client_side_validation and
                connection_state not in allowed_values):
            raise ValueError(
                "Invalid value for `connection_state` ({0}), must be one of {1}"  # noqa: E501
                .format(connection_state, allowed_values)
            )

        self._connection_state = connection_state

    @property
    def instance_id(self):
        """Gets the instance_id of this DescribeMQTTClientsRequest.  # noqa: E501


        :return: The instance_id of this DescribeMQTTClientsRequest.  # noqa: E501
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this DescribeMQTTClientsRequest.


        :param instance_id: The instance_id of this DescribeMQTTClientsRequest.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and instance_id is None:
            raise ValueError("Invalid value for `instance_id`, must not be `None`")  # noqa: E501

        self._instance_id = instance_id

    @property
    def page_number(self):
        """Gets the page_number of this DescribeMQTTClientsRequest.  # noqa: E501


        :return: The page_number of this DescribeMQTTClientsRequest.  # noqa: E501
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this DescribeMQTTClientsRequest.


        :param page_number: The page_number of this DescribeMQTTClientsRequest.  # noqa: E501
        :type: int
        """

        self._page_number = page_number

    @property
    def page_size(self):
        """Gets the page_size of this DescribeMQTTClientsRequest.  # noqa: E501


        :return: The page_size of this DescribeMQTTClientsRequest.  # noqa: E501
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this DescribeMQTTClientsRequest.


        :param page_size: The page_size of this DescribeMQTTClientsRequest.  # noqa: E501
        :type: int
        """

        self._page_size = page_size

    @property
    def user_name_like(self):
        """Gets the user_name_like of this DescribeMQTTClientsRequest.  # noqa: E501


        :return: The user_name_like of this DescribeMQTTClientsRequest.  # noqa: E501
        :rtype: str
        """
        return self._user_name_like

    @user_name_like.setter
    def user_name_like(self, user_name_like):
        """Sets the user_name_like of this DescribeMQTTClientsRequest.


        :param user_name_like: The user_name_like of this DescribeMQTTClientsRequest.  # noqa: E501
        :type: str
        """

        self._user_name_like = user_name_like

    @property
    def user_name_specify_list(self):
        """Gets the user_name_specify_list of this DescribeMQTTClientsRequest.  # noqa: E501


        :return: The user_name_specify_list of this DescribeMQTTClientsRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._user_name_specify_list

    @user_name_specify_list.setter
    def user_name_specify_list(self, user_name_specify_list):
        """Sets the user_name_specify_list of this DescribeMQTTClientsRequest.


        :param user_name_specify_list: The user_name_specify_list of this DescribeMQTTClientsRequest.  # noqa: E501
        :type: list[str]
        """

        self._user_name_specify_list = user_name_specify_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DescribeMQTTClientsRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DescribeMQTTClientsRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DescribeMQTTClientsRequest):
            return True

        return self.to_dict() != other.to_dict()
