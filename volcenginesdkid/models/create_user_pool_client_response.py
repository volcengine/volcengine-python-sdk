# coding: utf-8

"""
    id

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class CreateUserPoolClientResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'allowed_callback_urls': 'list[str]',
        'allowed_cors': 'list[str]',
        'allowed_logout_urls': 'list[str]',
        'allowed_web_origins': 'list[str]',
        'client_secret': 'str',
        'client_type': 'str',
        'create_time': 'str',
        'description': 'str',
        'id_token': 'IdTokenForCreateUserPoolClientOutput',
        'login_page_url': 'str',
        'name': 'str',
        'refresh_token': 'RefreshTokenForCreateUserPoolClientOutput',
        'uid': 'str',
        'update_time': 'str'
    }

    attribute_map = {
        'allowed_callback_urls': 'AllowedCallbackUrls',
        'allowed_cors': 'AllowedCors',
        'allowed_logout_urls': 'AllowedLogoutUrls',
        'allowed_web_origins': 'AllowedWebOrigins',
        'client_secret': 'ClientSecret',
        'client_type': 'ClientType',
        'create_time': 'CreateTime',
        'description': 'Description',
        'id_token': 'IdToken',
        'login_page_url': 'LoginPageUrl',
        'name': 'Name',
        'refresh_token': 'RefreshToken',
        'uid': 'Uid',
        'update_time': 'UpdateTime'
    }

    def __init__(self, allowed_callback_urls=None, allowed_cors=None, allowed_logout_urls=None, allowed_web_origins=None, client_secret=None, client_type=None, create_time=None, description=None, id_token=None, login_page_url=None, name=None, refresh_token=None, uid=None, update_time=None, _configuration=None):  # noqa: E501
        """CreateUserPoolClientResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._allowed_callback_urls = None
        self._allowed_cors = None
        self._allowed_logout_urls = None
        self._allowed_web_origins = None
        self._client_secret = None
        self._client_type = None
        self._create_time = None
        self._description = None
        self._id_token = None
        self._login_page_url = None
        self._name = None
        self._refresh_token = None
        self._uid = None
        self._update_time = None
        self.discriminator = None

        if allowed_callback_urls is not None:
            self.allowed_callback_urls = allowed_callback_urls
        if allowed_cors is not None:
            self.allowed_cors = allowed_cors
        if allowed_logout_urls is not None:
            self.allowed_logout_urls = allowed_logout_urls
        if allowed_web_origins is not None:
            self.allowed_web_origins = allowed_web_origins
        if client_secret is not None:
            self.client_secret = client_secret
        if client_type is not None:
            self.client_type = client_type
        if create_time is not None:
            self.create_time = create_time
        if description is not None:
            self.description = description
        if id_token is not None:
            self.id_token = id_token
        if login_page_url is not None:
            self.login_page_url = login_page_url
        if name is not None:
            self.name = name
        if refresh_token is not None:
            self.refresh_token = refresh_token
        if uid is not None:
            self.uid = uid
        if update_time is not None:
            self.update_time = update_time

    @property
    def allowed_callback_urls(self):
        """Gets the allowed_callback_urls of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The allowed_callback_urls of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._allowed_callback_urls

    @allowed_callback_urls.setter
    def allowed_callback_urls(self, allowed_callback_urls):
        """Sets the allowed_callback_urls of this CreateUserPoolClientResponse.


        :param allowed_callback_urls: The allowed_callback_urls of this CreateUserPoolClientResponse.  # noqa: E501
        :type: list[str]
        """

        self._allowed_callback_urls = allowed_callback_urls

    @property
    def allowed_cors(self):
        """Gets the allowed_cors of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The allowed_cors of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._allowed_cors

    @allowed_cors.setter
    def allowed_cors(self, allowed_cors):
        """Sets the allowed_cors of this CreateUserPoolClientResponse.


        :param allowed_cors: The allowed_cors of this CreateUserPoolClientResponse.  # noqa: E501
        :type: list[str]
        """

        self._allowed_cors = allowed_cors

    @property
    def allowed_logout_urls(self):
        """Gets the allowed_logout_urls of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The allowed_logout_urls of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._allowed_logout_urls

    @allowed_logout_urls.setter
    def allowed_logout_urls(self, allowed_logout_urls):
        """Sets the allowed_logout_urls of this CreateUserPoolClientResponse.


        :param allowed_logout_urls: The allowed_logout_urls of this CreateUserPoolClientResponse.  # noqa: E501
        :type: list[str]
        """

        self._allowed_logout_urls = allowed_logout_urls

    @property
    def allowed_web_origins(self):
        """Gets the allowed_web_origins of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The allowed_web_origins of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._allowed_web_origins

    @allowed_web_origins.setter
    def allowed_web_origins(self, allowed_web_origins):
        """Sets the allowed_web_origins of this CreateUserPoolClientResponse.


        :param allowed_web_origins: The allowed_web_origins of this CreateUserPoolClientResponse.  # noqa: E501
        :type: list[str]
        """

        self._allowed_web_origins = allowed_web_origins

    @property
    def client_secret(self):
        """Gets the client_secret of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The client_secret of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: str
        """
        return self._client_secret

    @client_secret.setter
    def client_secret(self, client_secret):
        """Sets the client_secret of this CreateUserPoolClientResponse.


        :param client_secret: The client_secret of this CreateUserPoolClientResponse.  # noqa: E501
        :type: str
        """

        self._client_secret = client_secret

    @property
    def client_type(self):
        """Gets the client_type of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The client_type of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: str
        """
        return self._client_type

    @client_type.setter
    def client_type(self, client_type):
        """Sets the client_type of this CreateUserPoolClientResponse.


        :param client_type: The client_type of this CreateUserPoolClientResponse.  # noqa: E501
        :type: str
        """

        self._client_type = client_type

    @property
    def create_time(self):
        """Gets the create_time of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The create_time of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this CreateUserPoolClientResponse.


        :param create_time: The create_time of this CreateUserPoolClientResponse.  # noqa: E501
        :type: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The description of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateUserPoolClientResponse.


        :param description: The description of this CreateUserPoolClientResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def id_token(self):
        """Gets the id_token of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The id_token of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: IdTokenForCreateUserPoolClientOutput
        """
        return self._id_token

    @id_token.setter
    def id_token(self, id_token):
        """Sets the id_token of this CreateUserPoolClientResponse.


        :param id_token: The id_token of this CreateUserPoolClientResponse.  # noqa: E501
        :type: IdTokenForCreateUserPoolClientOutput
        """

        self._id_token = id_token

    @property
    def login_page_url(self):
        """Gets the login_page_url of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The login_page_url of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: str
        """
        return self._login_page_url

    @login_page_url.setter
    def login_page_url(self, login_page_url):
        """Sets the login_page_url of this CreateUserPoolClientResponse.


        :param login_page_url: The login_page_url of this CreateUserPoolClientResponse.  # noqa: E501
        :type: str
        """

        self._login_page_url = login_page_url

    @property
    def name(self):
        """Gets the name of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The name of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateUserPoolClientResponse.


        :param name: The name of this CreateUserPoolClientResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def refresh_token(self):
        """Gets the refresh_token of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The refresh_token of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: RefreshTokenForCreateUserPoolClientOutput
        """
        return self._refresh_token

    @refresh_token.setter
    def refresh_token(self, refresh_token):
        """Sets the refresh_token of this CreateUserPoolClientResponse.


        :param refresh_token: The refresh_token of this CreateUserPoolClientResponse.  # noqa: E501
        :type: RefreshTokenForCreateUserPoolClientOutput
        """

        self._refresh_token = refresh_token

    @property
    def uid(self):
        """Gets the uid of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The uid of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this CreateUserPoolClientResponse.


        :param uid: The uid of this CreateUserPoolClientResponse.  # noqa: E501
        :type: str
        """

        self._uid = uid

    @property
    def update_time(self):
        """Gets the update_time of this CreateUserPoolClientResponse.  # noqa: E501


        :return: The update_time of this CreateUserPoolClientResponse.  # noqa: E501
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this CreateUserPoolClientResponse.


        :param update_time: The update_time of this CreateUserPoolClientResponse.  # noqa: E501
        :type: str
        """

        self._update_time = update_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateUserPoolClientResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateUserPoolClientResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CreateUserPoolClientResponse):
            return True

        return self.to_dict() != other.to_dict()
