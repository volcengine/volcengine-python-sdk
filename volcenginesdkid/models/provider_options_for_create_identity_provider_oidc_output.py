# coding: utf-8

"""
    id

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class ProviderOptionsForCreateIdentityProviderOIDCOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'auto_linking': 'str',
        'is_auto_creation': 'bool',
        'is_auto_update': 'bool',
        'is_creation_allowed': 'bool',
        'is_linking_allowed': 'bool'
    }

    attribute_map = {
        'auto_linking': 'AutoLinking',
        'is_auto_creation': 'IsAutoCreation',
        'is_auto_update': 'IsAutoUpdate',
        'is_creation_allowed': 'IsCreationAllowed',
        'is_linking_allowed': 'IsLinkingAllowed'
    }

    def __init__(self, auto_linking=None, is_auto_creation=None, is_auto_update=None, is_creation_allowed=None, is_linking_allowed=None, _configuration=None):  # noqa: E501
        """ProviderOptionsForCreateIdentityProviderOIDCOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._auto_linking = None
        self._is_auto_creation = None
        self._is_auto_update = None
        self._is_creation_allowed = None
        self._is_linking_allowed = None
        self.discriminator = None

        if auto_linking is not None:
            self.auto_linking = auto_linking
        if is_auto_creation is not None:
            self.is_auto_creation = is_auto_creation
        if is_auto_update is not None:
            self.is_auto_update = is_auto_update
        if is_creation_allowed is not None:
            self.is_creation_allowed = is_creation_allowed
        if is_linking_allowed is not None:
            self.is_linking_allowed = is_linking_allowed

    @property
    def auto_linking(self):
        """Gets the auto_linking of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501


        :return: The auto_linking of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501
        :rtype: str
        """
        return self._auto_linking

    @auto_linking.setter
    def auto_linking(self, auto_linking):
        """Sets the auto_linking of this ProviderOptionsForCreateIdentityProviderOIDCOutput.


        :param auto_linking: The auto_linking of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501
        :type: str
        """

        self._auto_linking = auto_linking

    @property
    def is_auto_creation(self):
        """Gets the is_auto_creation of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501


        :return: The is_auto_creation of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501
        :rtype: bool
        """
        return self._is_auto_creation

    @is_auto_creation.setter
    def is_auto_creation(self, is_auto_creation):
        """Sets the is_auto_creation of this ProviderOptionsForCreateIdentityProviderOIDCOutput.


        :param is_auto_creation: The is_auto_creation of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501
        :type: bool
        """

        self._is_auto_creation = is_auto_creation

    @property
    def is_auto_update(self):
        """Gets the is_auto_update of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501


        :return: The is_auto_update of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501
        :rtype: bool
        """
        return self._is_auto_update

    @is_auto_update.setter
    def is_auto_update(self, is_auto_update):
        """Sets the is_auto_update of this ProviderOptionsForCreateIdentityProviderOIDCOutput.


        :param is_auto_update: The is_auto_update of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501
        :type: bool
        """

        self._is_auto_update = is_auto_update

    @property
    def is_creation_allowed(self):
        """Gets the is_creation_allowed of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501


        :return: The is_creation_allowed of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501
        :rtype: bool
        """
        return self._is_creation_allowed

    @is_creation_allowed.setter
    def is_creation_allowed(self, is_creation_allowed):
        """Sets the is_creation_allowed of this ProviderOptionsForCreateIdentityProviderOIDCOutput.


        :param is_creation_allowed: The is_creation_allowed of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501
        :type: bool
        """

        self._is_creation_allowed = is_creation_allowed

    @property
    def is_linking_allowed(self):
        """Gets the is_linking_allowed of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501


        :return: The is_linking_allowed of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501
        :rtype: bool
        """
        return self._is_linking_allowed

    @is_linking_allowed.setter
    def is_linking_allowed(self, is_linking_allowed):
        """Sets the is_linking_allowed of this ProviderOptionsForCreateIdentityProviderOIDCOutput.


        :param is_linking_allowed: The is_linking_allowed of this ProviderOptionsForCreateIdentityProviderOIDCOutput.  # noqa: E501
        :type: bool
        """

        self._is_linking_allowed = is_linking_allowed

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ProviderOptionsForCreateIdentityProviderOIDCOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProviderOptionsForCreateIdentityProviderOIDCOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ProviderOptionsForCreateIdentityProviderOIDCOutput):
            return True

        return self.to_dict() != other.to_dict()
