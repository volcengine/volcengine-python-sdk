# coding: utf-8

"""
    directconnect

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class DescribeDirectConnectTrafficQosRulesRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'destination_cidr_block': 'str',
        'direct_connect_traffic_qos_queue_id': 'str',
        'direct_connect_traffic_qos_rule_ids': 'list[str]',
        'direct_connect_traffic_qos_rule_name': 'str',
        'match_dscp': 'str',
        'priority': 'int',
        'protocol': 'str',
        'remarking_dscp': 'str',
        'source_cidr_block': 'str'
    }

    attribute_map = {
        'destination_cidr_block': 'DestinationCidrBlock',
        'direct_connect_traffic_qos_queue_id': 'DirectConnectTrafficQosQueueId',
        'direct_connect_traffic_qos_rule_ids': 'DirectConnectTrafficQosRuleIds',
        'direct_connect_traffic_qos_rule_name': 'DirectConnectTrafficQosRuleName',
        'match_dscp': 'MatchDscp',
        'priority': 'Priority',
        'protocol': 'Protocol',
        'remarking_dscp': 'RemarkingDscp',
        'source_cidr_block': 'SourceCidrBlock'
    }

    def __init__(self, destination_cidr_block=None, direct_connect_traffic_qos_queue_id=None, direct_connect_traffic_qos_rule_ids=None, direct_connect_traffic_qos_rule_name=None, match_dscp=None, priority=None, protocol=None, remarking_dscp=None, source_cidr_block=None, _configuration=None):  # noqa: E501
        """DescribeDirectConnectTrafficQosRulesRequest - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._destination_cidr_block = None
        self._direct_connect_traffic_qos_queue_id = None
        self._direct_connect_traffic_qos_rule_ids = None
        self._direct_connect_traffic_qos_rule_name = None
        self._match_dscp = None
        self._priority = None
        self._protocol = None
        self._remarking_dscp = None
        self._source_cidr_block = None
        self.discriminator = None

        if destination_cidr_block is not None:
            self.destination_cidr_block = destination_cidr_block
        if direct_connect_traffic_qos_queue_id is not None:
            self.direct_connect_traffic_qos_queue_id = direct_connect_traffic_qos_queue_id
        if direct_connect_traffic_qos_rule_ids is not None:
            self.direct_connect_traffic_qos_rule_ids = direct_connect_traffic_qos_rule_ids
        if direct_connect_traffic_qos_rule_name is not None:
            self.direct_connect_traffic_qos_rule_name = direct_connect_traffic_qos_rule_name
        if match_dscp is not None:
            self.match_dscp = match_dscp
        if priority is not None:
            self.priority = priority
        if protocol is not None:
            self.protocol = protocol
        if remarking_dscp is not None:
            self.remarking_dscp = remarking_dscp
        if source_cidr_block is not None:
            self.source_cidr_block = source_cidr_block

    @property
    def destination_cidr_block(self):
        """Gets the destination_cidr_block of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501


        :return: The destination_cidr_block of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :rtype: str
        """
        return self._destination_cidr_block

    @destination_cidr_block.setter
    def destination_cidr_block(self, destination_cidr_block):
        """Sets the destination_cidr_block of this DescribeDirectConnectTrafficQosRulesRequest.


        :param destination_cidr_block: The destination_cidr_block of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :type: str
        """

        self._destination_cidr_block = destination_cidr_block

    @property
    def direct_connect_traffic_qos_queue_id(self):
        """Gets the direct_connect_traffic_qos_queue_id of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501


        :return: The direct_connect_traffic_qos_queue_id of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :rtype: str
        """
        return self._direct_connect_traffic_qos_queue_id

    @direct_connect_traffic_qos_queue_id.setter
    def direct_connect_traffic_qos_queue_id(self, direct_connect_traffic_qos_queue_id):
        """Sets the direct_connect_traffic_qos_queue_id of this DescribeDirectConnectTrafficQosRulesRequest.


        :param direct_connect_traffic_qos_queue_id: The direct_connect_traffic_qos_queue_id of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :type: str
        """

        self._direct_connect_traffic_qos_queue_id = direct_connect_traffic_qos_queue_id

    @property
    def direct_connect_traffic_qos_rule_ids(self):
        """Gets the direct_connect_traffic_qos_rule_ids of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501


        :return: The direct_connect_traffic_qos_rule_ids of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._direct_connect_traffic_qos_rule_ids

    @direct_connect_traffic_qos_rule_ids.setter
    def direct_connect_traffic_qos_rule_ids(self, direct_connect_traffic_qos_rule_ids):
        """Sets the direct_connect_traffic_qos_rule_ids of this DescribeDirectConnectTrafficQosRulesRequest.


        :param direct_connect_traffic_qos_rule_ids: The direct_connect_traffic_qos_rule_ids of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :type: list[str]
        """

        self._direct_connect_traffic_qos_rule_ids = direct_connect_traffic_qos_rule_ids

    @property
    def direct_connect_traffic_qos_rule_name(self):
        """Gets the direct_connect_traffic_qos_rule_name of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501


        :return: The direct_connect_traffic_qos_rule_name of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :rtype: str
        """
        return self._direct_connect_traffic_qos_rule_name

    @direct_connect_traffic_qos_rule_name.setter
    def direct_connect_traffic_qos_rule_name(self, direct_connect_traffic_qos_rule_name):
        """Sets the direct_connect_traffic_qos_rule_name of this DescribeDirectConnectTrafficQosRulesRequest.


        :param direct_connect_traffic_qos_rule_name: The direct_connect_traffic_qos_rule_name of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :type: str
        """

        self._direct_connect_traffic_qos_rule_name = direct_connect_traffic_qos_rule_name

    @property
    def match_dscp(self):
        """Gets the match_dscp of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501


        :return: The match_dscp of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :rtype: str
        """
        return self._match_dscp

    @match_dscp.setter
    def match_dscp(self, match_dscp):
        """Sets the match_dscp of this DescribeDirectConnectTrafficQosRulesRequest.


        :param match_dscp: The match_dscp of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :type: str
        """

        self._match_dscp = match_dscp

    @property
    def priority(self):
        """Gets the priority of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501


        :return: The priority of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this DescribeDirectConnectTrafficQosRulesRequest.


        :param priority: The priority of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :type: int
        """

        self._priority = priority

    @property
    def protocol(self):
        """Gets the protocol of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501


        :return: The protocol of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this DescribeDirectConnectTrafficQosRulesRequest.


        :param protocol: The protocol of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :type: str
        """

        self._protocol = protocol

    @property
    def remarking_dscp(self):
        """Gets the remarking_dscp of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501


        :return: The remarking_dscp of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :rtype: str
        """
        return self._remarking_dscp

    @remarking_dscp.setter
    def remarking_dscp(self, remarking_dscp):
        """Sets the remarking_dscp of this DescribeDirectConnectTrafficQosRulesRequest.


        :param remarking_dscp: The remarking_dscp of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :type: str
        """

        self._remarking_dscp = remarking_dscp

    @property
    def source_cidr_block(self):
        """Gets the source_cidr_block of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501


        :return: The source_cidr_block of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :rtype: str
        """
        return self._source_cidr_block

    @source_cidr_block.setter
    def source_cidr_block(self, source_cidr_block):
        """Sets the source_cidr_block of this DescribeDirectConnectTrafficQosRulesRequest.


        :param source_cidr_block: The source_cidr_block of this DescribeDirectConnectTrafficQosRulesRequest.  # noqa: E501
        :type: str
        """

        self._source_cidr_block = source_cidr_block

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DescribeDirectConnectTrafficQosRulesRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DescribeDirectConnectTrafficQosRulesRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DescribeDirectConnectTrafficQosRulesRequest):
            return True

        return self.to_dict() != other.to_dict()
