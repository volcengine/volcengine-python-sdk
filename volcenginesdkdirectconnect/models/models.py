
# coding: utf-8


"""
    directconnect

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re
import six
from volcenginesdkcore.configuration import Configuration

class DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput(object, ):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """

    swagger_types = {'bandwidth_percent': 'int', 'creation_time': 'str', 'description': 'str', 'direct_connect_traffic_qos_policy_id': 'str', 'direct_connect_traffic_qos_queue_id': 'str', 'direct_connect_traffic_qos_queue_name': 'str', 'direct_connect_traffic_qos_rule_ids': 'list[str]', 'queue_type': 'str', 'status': 'str', 'update_time': 'str'}
    attribute_map = {'bandwidth_percent': 'BandwidthPercent', 'creation_time': 'CreationTime', 'description': 'Description', 'direct_connect_traffic_qos_policy_id': 'DirectConnectTrafficQosPolicyId', 'direct_connect_traffic_qos_queue_id': 'DirectConnectTrafficQosQueueId', 'direct_connect_traffic_qos_queue_name': 'DirectConnectTrafficQosQueueName', 'direct_connect_traffic_qos_rule_ids': 'DirectConnectTrafficQosRuleIds', 'queue_type': 'QueueType', 'status': 'Status', 'update_time': 'UpdateTime'}

    def __init__(self, bandwidth_percent=None, creation_time=None, description=None, direct_connect_traffic_qos_policy_id=None, direct_connect_traffic_qos_queue_id=None, direct_connect_traffic_qos_queue_name=None, direct_connect_traffic_qos_rule_ids=None, queue_type=None, status=None, update_time=None, _configuration=None):
        'DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput - a model defined in Swagger'
        if (_configuration is None):
            _configuration = Configuration()
        self._configuration = _configuration
        self._bandwidth_percent = None
        self._creation_time = None
        self._description = None
        self._direct_connect_traffic_qos_policy_id = None
        self._direct_connect_traffic_qos_queue_id = None
        self._direct_connect_traffic_qos_queue_name = None
        self._direct_connect_traffic_qos_rule_ids = None
        self._queue_type = None
        self._status = None
        self._update_time = None
        self.discriminator = None
        if (bandwidth_percent is not None):
            self.bandwidth_percent = bandwidth_percent
        if (creation_time is not None):
            self.creation_time = creation_time
        if (description is not None):
            self.description = description
        if (direct_connect_traffic_qos_policy_id is not None):
            self.direct_connect_traffic_qos_policy_id = direct_connect_traffic_qos_policy_id
        if (direct_connect_traffic_qos_queue_id is not None):
            self.direct_connect_traffic_qos_queue_id = direct_connect_traffic_qos_queue_id
        if (direct_connect_traffic_qos_queue_name is not None):
            self.direct_connect_traffic_qos_queue_name = direct_connect_traffic_qos_queue_name
        if (direct_connect_traffic_qos_rule_ids is not None):
            self.direct_connect_traffic_qos_rule_ids = direct_connect_traffic_qos_rule_ids
        if (queue_type is not None):
            self.queue_type = queue_type
        if (status is not None):
            self.status = status
        if (update_time is not None):
            self.update_time = update_time

    @property
    def bandwidth_percent(self):
        """Gets the bandwidth_percent of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501


        :return: The bandwidth_percent of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :rtype: int
        """

        return self._bandwidth_percent

    @bandwidth_percent.setter
    def bandwidth_percent(self, bandwidth_percent):
        """Sets the bandwidth_percent of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.


        :param bandwidth_percent: The bandwidth_percent of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :type: int
        """

        self._bandwidth_percent = bandwidth_percent

    @property
    def creation_time(self):
        """Gets the creation_time of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501


        :return: The creation_time of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :rtype: str
        """

        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.


        :param creation_time: The creation_time of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :type: str
        """

        self._creation_time = creation_time

    @property
    def description(self):
        """Gets the description of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501


        :return: The description of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :rtype: str
        """

        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.


        :param description: The description of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def direct_connect_traffic_qos_policy_id(self):
        """Gets the direct_connect_traffic_qos_policy_id of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501


        :return: The direct_connect_traffic_qos_policy_id of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :rtype: str
        """

        return self._direct_connect_traffic_qos_policy_id

    @direct_connect_traffic_qos_policy_id.setter
    def direct_connect_traffic_qos_policy_id(self, direct_connect_traffic_qos_policy_id):
        """Sets the direct_connect_traffic_qos_policy_id of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.


        :param direct_connect_traffic_qos_policy_id: The direct_connect_traffic_qos_policy_id of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :type: str
        """

        self._direct_connect_traffic_qos_policy_id = direct_connect_traffic_qos_policy_id

    @property
    def direct_connect_traffic_qos_queue_id(self):
        """Gets the direct_connect_traffic_qos_queue_id of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501


        :return: The direct_connect_traffic_qos_queue_id of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :rtype: str
        """

        return self._direct_connect_traffic_qos_queue_id

    @direct_connect_traffic_qos_queue_id.setter
    def direct_connect_traffic_qos_queue_id(self, direct_connect_traffic_qos_queue_id):
        """Sets the direct_connect_traffic_qos_queue_id of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.


        :param direct_connect_traffic_qos_queue_id: The direct_connect_traffic_qos_queue_id of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :type: str
        """

        self._direct_connect_traffic_qos_queue_id = direct_connect_traffic_qos_queue_id

    @property
    def direct_connect_traffic_qos_queue_name(self):
        """Gets the direct_connect_traffic_qos_queue_name of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501


        :return: The direct_connect_traffic_qos_queue_name of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :rtype: str
        """

        return self._direct_connect_traffic_qos_queue_name

    @direct_connect_traffic_qos_queue_name.setter
    def direct_connect_traffic_qos_queue_name(self, direct_connect_traffic_qos_queue_name):
        """Sets the direct_connect_traffic_qos_queue_name of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.


        :param direct_connect_traffic_qos_queue_name: The direct_connect_traffic_qos_queue_name of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :type: str
        """

        self._direct_connect_traffic_qos_queue_name = direct_connect_traffic_qos_queue_name

    @property
    def direct_connect_traffic_qos_rule_ids(self):
        """Gets the direct_connect_traffic_qos_rule_ids of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501


        :return: The direct_connect_traffic_qos_rule_ids of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :rtype: list[str]
        """

        return self._direct_connect_traffic_qos_rule_ids

    @direct_connect_traffic_qos_rule_ids.setter
    def direct_connect_traffic_qos_rule_ids(self, direct_connect_traffic_qos_rule_ids):
        """Sets the direct_connect_traffic_qos_rule_ids of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.


        :param direct_connect_traffic_qos_rule_ids: The direct_connect_traffic_qos_rule_ids of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :type: list[str]
        """

        self._direct_connect_traffic_qos_rule_ids = direct_connect_traffic_qos_rule_ids

    @property
    def queue_type(self):
        """Gets the queue_type of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501


        :return: The queue_type of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :rtype: str
        """

        return self._queue_type

    @queue_type.setter
    def queue_type(self, queue_type):
        """Sets the queue_type of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.


        :param queue_type: The queue_type of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :type: str
        """

        self._queue_type = queue_type

    @property
    def status(self):
        """Gets the status of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501


        :return: The status of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :rtype: str
        """

        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.


        :param status: The status of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def update_time(self):
        """Gets the update_time of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501


        :return: The update_time of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :rtype: str
        """

        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.


        :param update_time: The update_time of this DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput.  # noqa: E501
        :type: str
        """

        self._update_time = update_time

    def to_dict(self):
        'Returns the model properties as a dict'
        result = {}
        for (attr, _) in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map((lambda x: (x.to_dict() if hasattr(x, 'to_dict') else x)), value))
            elif hasattr(value, 'to_dict'):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map((lambda item: ((item[0], item[1].to_dict()) if hasattr(item[1], 'to_dict') else item)), value.items()))
            else:
                result[attr] = value
        if issubclass(DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput, dict):
            for (key, value) in self.items():
                result[key] = value
        return result

    def to_str(self):
        'Returns the string representation of the model'
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        'For `print` and `pprint`'
        return self.to_str()

    def __eq__(self, other):
        'Returns true if both objects are equal'
        if (not isinstance(other, DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput)):
            return False
        return (self.to_dict() == other.to_dict())

    def __ne__(self, other):
        'Returns true if both objects are not equal'
        if (not isinstance(other, DirectConnectTrafficQosQueueForDescribeDirectConnectTrafficQosQueuesOutput)):
            return True
        return (self.to_dict() != other.to_dict())

class DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput(object, ):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """

    swagger_types = {'creation_time': 'str', 'description': 'str', 'direct_connect_connection_ids': 'list[str]', 'direct_connect_traffic_qos_policy_id': 'str', 'direct_connect_traffic_qos_policy_name': 'str', 'direct_connect_traffic_qos_queue_ids': 'list[str]', 'status': 'str', 'update_time': 'str'}
    attribute_map = {'creation_time': 'CreationTime', 'description': 'Description', 'direct_connect_connection_ids': 'DirectConnectConnectionIds', 'direct_connect_traffic_qos_policy_id': 'DirectConnectTrafficQosPolicyId', 'direct_connect_traffic_qos_policy_name': 'DirectConnectTrafficQosPolicyName', 'direct_connect_traffic_qos_queue_ids': 'DirectConnectTrafficQosQueueIds', 'status': 'Status', 'update_time': 'UpdateTime'}

    def __init__(self, creation_time=None, description=None, direct_connect_connection_ids=None, direct_connect_traffic_qos_policy_id=None, direct_connect_traffic_qos_policy_name=None, direct_connect_traffic_qos_queue_ids=None, status=None, update_time=None, _configuration=None):
        'DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput - a model defined in Swagger'
        if (_configuration is None):
            _configuration = Configuration()
        self._configuration = _configuration
        self._creation_time = None
        self._description = None
        self._direct_connect_connection_ids = None
        self._direct_connect_traffic_qos_policy_id = None
        self._direct_connect_traffic_qos_policy_name = None
        self._direct_connect_traffic_qos_queue_ids = None
        self._status = None
        self._update_time = None
        self.discriminator = None
        if (creation_time is not None):
            self.creation_time = creation_time
        if (description is not None):
            self.description = description
        if (direct_connect_connection_ids is not None):
            self.direct_connect_connection_ids = direct_connect_connection_ids
        if (direct_connect_traffic_qos_policy_id is not None):
            self.direct_connect_traffic_qos_policy_id = direct_connect_traffic_qos_policy_id
        if (direct_connect_traffic_qos_policy_name is not None):
            self.direct_connect_traffic_qos_policy_name = direct_connect_traffic_qos_policy_name
        if (direct_connect_traffic_qos_queue_ids is not None):
            self.direct_connect_traffic_qos_queue_ids = direct_connect_traffic_qos_queue_ids
        if (status is not None):
            self.status = status
        if (update_time is not None):
            self.update_time = update_time

    @property
    def creation_time(self):
        """Gets the creation_time of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501


        :return: The creation_time of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :rtype: str
        """

        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.


        :param creation_time: The creation_time of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :type: str
        """

        self._creation_time = creation_time

    @property
    def description(self):
        """Gets the description of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501


        :return: The description of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :rtype: str
        """

        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.


        :param description: The description of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def direct_connect_connection_ids(self):
        """Gets the direct_connect_connection_ids of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501


        :return: The direct_connect_connection_ids of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :rtype: list[str]
        """

        return self._direct_connect_connection_ids

    @direct_connect_connection_ids.setter
    def direct_connect_connection_ids(self, direct_connect_connection_ids):
        """Sets the direct_connect_connection_ids of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.


        :param direct_connect_connection_ids: The direct_connect_connection_ids of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :type: list[str]
        """

        self._direct_connect_connection_ids = direct_connect_connection_ids

    @property
    def direct_connect_traffic_qos_policy_id(self):
        """Gets the direct_connect_traffic_qos_policy_id of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501


        :return: The direct_connect_traffic_qos_policy_id of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :rtype: str
        """

        return self._direct_connect_traffic_qos_policy_id

    @direct_connect_traffic_qos_policy_id.setter
    def direct_connect_traffic_qos_policy_id(self, direct_connect_traffic_qos_policy_id):
        """Sets the direct_connect_traffic_qos_policy_id of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.


        :param direct_connect_traffic_qos_policy_id: The direct_connect_traffic_qos_policy_id of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :type: str
        """

        self._direct_connect_traffic_qos_policy_id = direct_connect_traffic_qos_policy_id

    @property
    def direct_connect_traffic_qos_policy_name(self):
        """Gets the direct_connect_traffic_qos_policy_name of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501


        :return: The direct_connect_traffic_qos_policy_name of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :rtype: str
        """

        return self._direct_connect_traffic_qos_policy_name

    @direct_connect_traffic_qos_policy_name.setter
    def direct_connect_traffic_qos_policy_name(self, direct_connect_traffic_qos_policy_name):
        """Sets the direct_connect_traffic_qos_policy_name of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.


        :param direct_connect_traffic_qos_policy_name: The direct_connect_traffic_qos_policy_name of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :type: str
        """

        self._direct_connect_traffic_qos_policy_name = direct_connect_traffic_qos_policy_name

    @property
    def direct_connect_traffic_qos_queue_ids(self):
        """Gets the direct_connect_traffic_qos_queue_ids of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501


        :return: The direct_connect_traffic_qos_queue_ids of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :rtype: list[str]
        """

        return self._direct_connect_traffic_qos_queue_ids

    @direct_connect_traffic_qos_queue_ids.setter
    def direct_connect_traffic_qos_queue_ids(self, direct_connect_traffic_qos_queue_ids):
        """Sets the direct_connect_traffic_qos_queue_ids of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.


        :param direct_connect_traffic_qos_queue_ids: The direct_connect_traffic_qos_queue_ids of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :type: list[str]
        """

        self._direct_connect_traffic_qos_queue_ids = direct_connect_traffic_qos_queue_ids

    @property
    def status(self):
        """Gets the status of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501


        :return: The status of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :rtype: str
        """

        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.


        :param status: The status of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def update_time(self):
        """Gets the update_time of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501


        :return: The update_time of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :rtype: str
        """

        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.


        :param update_time: The update_time of this DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput.  # noqa: E501
        :type: str
        """

        self._update_time = update_time

    def to_dict(self):
        'Returns the model properties as a dict'
        result = {}
        for (attr, _) in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map((lambda x: (x.to_dict() if hasattr(x, 'to_dict') else x)), value))
            elif hasattr(value, 'to_dict'):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map((lambda item: ((item[0], item[1].to_dict()) if hasattr(item[1], 'to_dict') else item)), value.items()))
            else:
                result[attr] = value
        if issubclass(DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput, dict):
            for (key, value) in self.items():
                result[key] = value
        return result

    def to_str(self):
        'Returns the string representation of the model'
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        'For `print` and `pprint`'
        return self.to_str()

    def __eq__(self, other):
        'Returns true if both objects are equal'
        if (not isinstance(other, DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput)):
            return False
        return (self.to_dict() == other.to_dict())

    def __ne__(self, other):
        'Returns true if both objects are not equal'
        if (not isinstance(other, DirectConnectTrafficQosPolicyForDescribeDirectConnectTrafficQosPoliciesOutput)):
            return True
        return (self.to_dict() != other.to_dict())