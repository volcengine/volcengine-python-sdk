# coding: utf-8

"""
    cbr

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class RecoveryPointForDescribeRecoveryPointsOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_id': 'str',
        'backup_completed_time': 'str',
        'capacity_in_bytes': 'int',
        'created_at': 'str',
        'error_detail': 'str',
        'extra_metadata': 'str',
        'instance_id': 'str',
        'instance_name': 'str',
        'name': 'str',
        'plan_id': 'str',
        'plan_name': 'str',
        'recovery_point_id': 'str',
        'resource_type': 'str',
        'retention_day': 'int',
        'status': 'str',
        'updated_at': 'str'
    }

    attribute_map = {
        'account_id': 'AccountId',
        'backup_completed_time': 'BackupCompletedTime',
        'capacity_in_bytes': 'CapacityInBytes',
        'created_at': 'CreatedAt',
        'error_detail': 'ErrorDetail',
        'extra_metadata': 'ExtraMetadata',
        'instance_id': 'InstanceId',
        'instance_name': 'InstanceName',
        'name': 'Name',
        'plan_id': 'PlanId',
        'plan_name': 'PlanName',
        'recovery_point_id': 'RecoveryPointId',
        'resource_type': 'ResourceType',
        'retention_day': 'RetentionDay',
        'status': 'Status',
        'updated_at': 'UpdatedAt'
    }

    def __init__(self, account_id=None, backup_completed_time=None, capacity_in_bytes=None, created_at=None, error_detail=None, extra_metadata=None, instance_id=None, instance_name=None, name=None, plan_id=None, plan_name=None, recovery_point_id=None, resource_type=None, retention_day=None, status=None, updated_at=None, _configuration=None):  # noqa: E501
        """RecoveryPointForDescribeRecoveryPointsOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._account_id = None
        self._backup_completed_time = None
        self._capacity_in_bytes = None
        self._created_at = None
        self._error_detail = None
        self._extra_metadata = None
        self._instance_id = None
        self._instance_name = None
        self._name = None
        self._plan_id = None
        self._plan_name = None
        self._recovery_point_id = None
        self._resource_type = None
        self._retention_day = None
        self._status = None
        self._updated_at = None
        self.discriminator = None

        if account_id is not None:
            self.account_id = account_id
        if backup_completed_time is not None:
            self.backup_completed_time = backup_completed_time
        if capacity_in_bytes is not None:
            self.capacity_in_bytes = capacity_in_bytes
        if created_at is not None:
            self.created_at = created_at
        if error_detail is not None:
            self.error_detail = error_detail
        if extra_metadata is not None:
            self.extra_metadata = extra_metadata
        if instance_id is not None:
            self.instance_id = instance_id
        if instance_name is not None:
            self.instance_name = instance_name
        if name is not None:
            self.name = name
        if plan_id is not None:
            self.plan_id = plan_id
        if plan_name is not None:
            self.plan_name = plan_name
        if recovery_point_id is not None:
            self.recovery_point_id = recovery_point_id
        if resource_type is not None:
            self.resource_type = resource_type
        if retention_day is not None:
            self.retention_day = retention_day
        if status is not None:
            self.status = status
        if updated_at is not None:
            self.updated_at = updated_at

    @property
    def account_id(self):
        """Gets the account_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The account_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param account_id: The account_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def backup_completed_time(self):
        """Gets the backup_completed_time of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The backup_completed_time of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._backup_completed_time

    @backup_completed_time.setter
    def backup_completed_time(self, backup_completed_time):
        """Sets the backup_completed_time of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param backup_completed_time: The backup_completed_time of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._backup_completed_time = backup_completed_time

    @property
    def capacity_in_bytes(self):
        """Gets the capacity_in_bytes of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The capacity_in_bytes of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: int
        """
        return self._capacity_in_bytes

    @capacity_in_bytes.setter
    def capacity_in_bytes(self, capacity_in_bytes):
        """Sets the capacity_in_bytes of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param capacity_in_bytes: The capacity_in_bytes of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: int
        """

        self._capacity_in_bytes = capacity_in_bytes

    @property
    def created_at(self):
        """Gets the created_at of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The created_at of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param created_at: The created_at of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def error_detail(self):
        """Gets the error_detail of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The error_detail of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._error_detail

    @error_detail.setter
    def error_detail(self, error_detail):
        """Sets the error_detail of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param error_detail: The error_detail of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._error_detail = error_detail

    @property
    def extra_metadata(self):
        """Gets the extra_metadata of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The extra_metadata of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._extra_metadata

    @extra_metadata.setter
    def extra_metadata(self, extra_metadata):
        """Sets the extra_metadata of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param extra_metadata: The extra_metadata of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._extra_metadata = extra_metadata

    @property
    def instance_id(self):
        """Gets the instance_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The instance_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param instance_id: The instance_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._instance_id = instance_id

    @property
    def instance_name(self):
        """Gets the instance_name of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The instance_name of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._instance_name

    @instance_name.setter
    def instance_name(self, instance_name):
        """Sets the instance_name of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param instance_name: The instance_name of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._instance_name = instance_name

    @property
    def name(self):
        """Gets the name of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The name of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param name: The name of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def plan_id(self):
        """Gets the plan_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The plan_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._plan_id

    @plan_id.setter
    def plan_id(self, plan_id):
        """Sets the plan_id of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param plan_id: The plan_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._plan_id = plan_id

    @property
    def plan_name(self):
        """Gets the plan_name of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The plan_name of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._plan_name

    @plan_name.setter
    def plan_name(self, plan_name):
        """Sets the plan_name of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param plan_name: The plan_name of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._plan_name = plan_name

    @property
    def recovery_point_id(self):
        """Gets the recovery_point_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The recovery_point_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._recovery_point_id

    @recovery_point_id.setter
    def recovery_point_id(self, recovery_point_id):
        """Sets the recovery_point_id of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param recovery_point_id: The recovery_point_id of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._recovery_point_id = recovery_point_id

    @property
    def resource_type(self):
        """Gets the resource_type of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The resource_type of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param resource_type: The resource_type of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._resource_type = resource_type

    @property
    def retention_day(self):
        """Gets the retention_day of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The retention_day of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: int
        """
        return self._retention_day

    @retention_day.setter
    def retention_day(self, retention_day):
        """Sets the retention_day of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param retention_day: The retention_day of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: int
        """

        self._retention_day = retention_day

    @property
    def status(self):
        """Gets the status of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The status of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param status: The status of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def updated_at(self):
        """Gets the updated_at of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501


        :return: The updated_at of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this RecoveryPointForDescribeRecoveryPointsOutput.


        :param updated_at: The updated_at of this RecoveryPointForDescribeRecoveryPointsOutput.  # noqa: E501
        :type: str
        """

        self._updated_at = updated_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RecoveryPointForDescribeRecoveryPointsOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RecoveryPointForDescribeRecoveryPointsOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, RecoveryPointForDescribeRecoveryPointsOutput):
            return True

        return self.to_dict() != other.to_dict()
