# coding: utf-8

"""
    seccenter20240508

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class GetMlpUpdateSoftwareTaskDetailResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_id': 'str',
        'last_check_time': 'int',
        'progress': 'int',
        'task_id': 'str'
    }

    attribute_map = {
        'account_id': 'AccountId',
        'last_check_time': 'LastCheckTime',
        'progress': 'Progress',
        'task_id': 'TaskId'
    }

    def __init__(self, account_id=None, last_check_time=None, progress=None, task_id=None, _configuration=None):  # noqa: E501
        """GetMlpUpdateSoftwareTaskDetailResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._account_id = None
        self._last_check_time = None
        self._progress = None
        self._task_id = None
        self.discriminator = None

        if account_id is not None:
            self.account_id = account_id
        if last_check_time is not None:
            self.last_check_time = last_check_time
        if progress is not None:
            self.progress = progress
        if task_id is not None:
            self.task_id = task_id

    @property
    def account_id(self):
        """Gets the account_id of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501


        :return: The account_id of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GetMlpUpdateSoftwareTaskDetailResponse.


        :param account_id: The account_id of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def last_check_time(self):
        """Gets the last_check_time of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501


        :return: The last_check_time of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501
        :rtype: int
        """
        return self._last_check_time

    @last_check_time.setter
    def last_check_time(self, last_check_time):
        """Sets the last_check_time of this GetMlpUpdateSoftwareTaskDetailResponse.


        :param last_check_time: The last_check_time of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501
        :type: int
        """

        self._last_check_time = last_check_time

    @property
    def progress(self):
        """Gets the progress of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501


        :return: The progress of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501
        :rtype: int
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this GetMlpUpdateSoftwareTaskDetailResponse.


        :param progress: The progress of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501
        :type: int
        """

        self._progress = progress

    @property
    def task_id(self):
        """Gets the task_id of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501


        :return: The task_id of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this GetMlpUpdateSoftwareTaskDetailResponse.


        :param task_id: The task_id of this GetMlpUpdateSoftwareTaskDetailResponse.  # noqa: E501
        :type: str
        """

        self._task_id = task_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetMlpUpdateSoftwareTaskDetailResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetMlpUpdateSoftwareTaskDetailResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GetMlpUpdateSoftwareTaskDetailResponse):
            return True

        return self.to_dict() != other.to_dict()
