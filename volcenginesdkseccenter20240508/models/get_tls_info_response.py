# coding: utf-8

"""
    seccenter20240508

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class GetTLSInfoResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'alarm_topic_config': 'AlarmTopicConfigForGetTLSInfoOutput',
        'authorized': 'bool',
        'login_topic_config': 'LoginTopicConfigForGetTLSInfoOutput',
        'open': 'bool',
        'port_change_topic_config': 'PortChangeTopicConfigForGetTLSInfoOutput',
        'process_start_topic_config': 'ProcessStartTopicConfigForGetTLSInfoOutput',
        'project_id': 'str',
        'quota_total': 'int',
        'quota_used': 'int',
        'threshold': 'int',
        'vuln_topic_config': 'VulnTopicConfigForGetTLSInfoOutput'
    }

    attribute_map = {
        'alarm_topic_config': 'AlarmTopicConfig',
        'authorized': 'Authorized',
        'login_topic_config': 'LoginTopicConfig',
        'open': 'Open',
        'port_change_topic_config': 'PortChangeTopicConfig',
        'process_start_topic_config': 'ProcessStartTopicConfig',
        'project_id': 'ProjectID',
        'quota_total': 'QuotaTotal',
        'quota_used': 'QuotaUsed',
        'threshold': 'Threshold',
        'vuln_topic_config': 'VulnTopicConfig'
    }

    def __init__(self, alarm_topic_config=None, authorized=None, login_topic_config=None, open=None, port_change_topic_config=None, process_start_topic_config=None, project_id=None, quota_total=None, quota_used=None, threshold=None, vuln_topic_config=None, _configuration=None):  # noqa: E501
        """GetTLSInfoResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._alarm_topic_config = None
        self._authorized = None
        self._login_topic_config = None
        self._open = None
        self._port_change_topic_config = None
        self._process_start_topic_config = None
        self._project_id = None
        self._quota_total = None
        self._quota_used = None
        self._threshold = None
        self._vuln_topic_config = None
        self.discriminator = None

        if alarm_topic_config is not None:
            self.alarm_topic_config = alarm_topic_config
        if authorized is not None:
            self.authorized = authorized
        if login_topic_config is not None:
            self.login_topic_config = login_topic_config
        if open is not None:
            self.open = open
        if port_change_topic_config is not None:
            self.port_change_topic_config = port_change_topic_config
        if process_start_topic_config is not None:
            self.process_start_topic_config = process_start_topic_config
        if project_id is not None:
            self.project_id = project_id
        if quota_total is not None:
            self.quota_total = quota_total
        if quota_used is not None:
            self.quota_used = quota_used
        if threshold is not None:
            self.threshold = threshold
        if vuln_topic_config is not None:
            self.vuln_topic_config = vuln_topic_config

    @property
    def alarm_topic_config(self):
        """Gets the alarm_topic_config of this GetTLSInfoResponse.  # noqa: E501


        :return: The alarm_topic_config of this GetTLSInfoResponse.  # noqa: E501
        :rtype: AlarmTopicConfigForGetTLSInfoOutput
        """
        return self._alarm_topic_config

    @alarm_topic_config.setter
    def alarm_topic_config(self, alarm_topic_config):
        """Sets the alarm_topic_config of this GetTLSInfoResponse.


        :param alarm_topic_config: The alarm_topic_config of this GetTLSInfoResponse.  # noqa: E501
        :type: AlarmTopicConfigForGetTLSInfoOutput
        """

        self._alarm_topic_config = alarm_topic_config

    @property
    def authorized(self):
        """Gets the authorized of this GetTLSInfoResponse.  # noqa: E501


        :return: The authorized of this GetTLSInfoResponse.  # noqa: E501
        :rtype: bool
        """
        return self._authorized

    @authorized.setter
    def authorized(self, authorized):
        """Sets the authorized of this GetTLSInfoResponse.


        :param authorized: The authorized of this GetTLSInfoResponse.  # noqa: E501
        :type: bool
        """

        self._authorized = authorized

    @property
    def login_topic_config(self):
        """Gets the login_topic_config of this GetTLSInfoResponse.  # noqa: E501


        :return: The login_topic_config of this GetTLSInfoResponse.  # noqa: E501
        :rtype: LoginTopicConfigForGetTLSInfoOutput
        """
        return self._login_topic_config

    @login_topic_config.setter
    def login_topic_config(self, login_topic_config):
        """Sets the login_topic_config of this GetTLSInfoResponse.


        :param login_topic_config: The login_topic_config of this GetTLSInfoResponse.  # noqa: E501
        :type: LoginTopicConfigForGetTLSInfoOutput
        """

        self._login_topic_config = login_topic_config

    @property
    def open(self):
        """Gets the open of this GetTLSInfoResponse.  # noqa: E501


        :return: The open of this GetTLSInfoResponse.  # noqa: E501
        :rtype: bool
        """
        return self._open

    @open.setter
    def open(self, open):
        """Sets the open of this GetTLSInfoResponse.


        :param open: The open of this GetTLSInfoResponse.  # noqa: E501
        :type: bool
        """

        self._open = open

    @property
    def port_change_topic_config(self):
        """Gets the port_change_topic_config of this GetTLSInfoResponse.  # noqa: E501


        :return: The port_change_topic_config of this GetTLSInfoResponse.  # noqa: E501
        :rtype: PortChangeTopicConfigForGetTLSInfoOutput
        """
        return self._port_change_topic_config

    @port_change_topic_config.setter
    def port_change_topic_config(self, port_change_topic_config):
        """Sets the port_change_topic_config of this GetTLSInfoResponse.


        :param port_change_topic_config: The port_change_topic_config of this GetTLSInfoResponse.  # noqa: E501
        :type: PortChangeTopicConfigForGetTLSInfoOutput
        """

        self._port_change_topic_config = port_change_topic_config

    @property
    def process_start_topic_config(self):
        """Gets the process_start_topic_config of this GetTLSInfoResponse.  # noqa: E501


        :return: The process_start_topic_config of this GetTLSInfoResponse.  # noqa: E501
        :rtype: ProcessStartTopicConfigForGetTLSInfoOutput
        """
        return self._process_start_topic_config

    @process_start_topic_config.setter
    def process_start_topic_config(self, process_start_topic_config):
        """Sets the process_start_topic_config of this GetTLSInfoResponse.


        :param process_start_topic_config: The process_start_topic_config of this GetTLSInfoResponse.  # noqa: E501
        :type: ProcessStartTopicConfigForGetTLSInfoOutput
        """

        self._process_start_topic_config = process_start_topic_config

    @property
    def project_id(self):
        """Gets the project_id of this GetTLSInfoResponse.  # noqa: E501


        :return: The project_id of this GetTLSInfoResponse.  # noqa: E501
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this GetTLSInfoResponse.


        :param project_id: The project_id of this GetTLSInfoResponse.  # noqa: E501
        :type: str
        """

        self._project_id = project_id

    @property
    def quota_total(self):
        """Gets the quota_total of this GetTLSInfoResponse.  # noqa: E501


        :return: The quota_total of this GetTLSInfoResponse.  # noqa: E501
        :rtype: int
        """
        return self._quota_total

    @quota_total.setter
    def quota_total(self, quota_total):
        """Sets the quota_total of this GetTLSInfoResponse.


        :param quota_total: The quota_total of this GetTLSInfoResponse.  # noqa: E501
        :type: int
        """

        self._quota_total = quota_total

    @property
    def quota_used(self):
        """Gets the quota_used of this GetTLSInfoResponse.  # noqa: E501


        :return: The quota_used of this GetTLSInfoResponse.  # noqa: E501
        :rtype: int
        """
        return self._quota_used

    @quota_used.setter
    def quota_used(self, quota_used):
        """Sets the quota_used of this GetTLSInfoResponse.


        :param quota_used: The quota_used of this GetTLSInfoResponse.  # noqa: E501
        :type: int
        """

        self._quota_used = quota_used

    @property
    def threshold(self):
        """Gets the threshold of this GetTLSInfoResponse.  # noqa: E501


        :return: The threshold of this GetTLSInfoResponse.  # noqa: E501
        :rtype: int
        """
        return self._threshold

    @threshold.setter
    def threshold(self, threshold):
        """Sets the threshold of this GetTLSInfoResponse.


        :param threshold: The threshold of this GetTLSInfoResponse.  # noqa: E501
        :type: int
        """

        self._threshold = threshold

    @property
    def vuln_topic_config(self):
        """Gets the vuln_topic_config of this GetTLSInfoResponse.  # noqa: E501


        :return: The vuln_topic_config of this GetTLSInfoResponse.  # noqa: E501
        :rtype: VulnTopicConfigForGetTLSInfoOutput
        """
        return self._vuln_topic_config

    @vuln_topic_config.setter
    def vuln_topic_config(self, vuln_topic_config):
        """Sets the vuln_topic_config of this GetTLSInfoResponse.


        :param vuln_topic_config: The vuln_topic_config of this GetTLSInfoResponse.  # noqa: E501
        :type: VulnTopicConfigForGetTLSInfoOutput
        """

        self._vuln_topic_config = vuln_topic_config

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetTLSInfoResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetTLSInfoResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GetTLSInfoResponse):
            return True

        return self.to_dict() != other.to_dict()
