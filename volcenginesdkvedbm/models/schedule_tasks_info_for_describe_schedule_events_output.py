# coding: utf-8

"""
    vedbm

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class ScheduleTasksInfoForDescribeScheduleEventsOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_id': 'int',
        'begin_time': 'str',
        'end_time': 'str',
        'event_id': 'str',
        'event_kind': 'str',
        'instance_id': 'str',
        'instance_name': 'str',
        'message': 'str',
        'planned_start_time': 'str',
        'project_name': 'str',
        'request_id': 'str',
        'schedule_type': 'str',
        'status': 'str'
    }

    attribute_map = {
        'account_id': 'AccountID',
        'begin_time': 'BeginTime',
        'end_time': 'EndTime',
        'event_id': 'EventId',
        'event_kind': 'EventKind',
        'instance_id': 'InstanceID',
        'instance_name': 'InstanceName',
        'message': 'Message',
        'planned_start_time': 'PlannedStartTime',
        'project_name': 'ProjectName',
        'request_id': 'RequestId',
        'schedule_type': 'ScheduleType',
        'status': 'Status'
    }

    def __init__(self, account_id=None, begin_time=None, end_time=None, event_id=None, event_kind=None, instance_id=None, instance_name=None, message=None, planned_start_time=None, project_name=None, request_id=None, schedule_type=None, status=None, _configuration=None):  # noqa: E501
        """ScheduleTasksInfoForDescribeScheduleEventsOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._account_id = None
        self._begin_time = None
        self._end_time = None
        self._event_id = None
        self._event_kind = None
        self._instance_id = None
        self._instance_name = None
        self._message = None
        self._planned_start_time = None
        self._project_name = None
        self._request_id = None
        self._schedule_type = None
        self._status = None
        self.discriminator = None

        if account_id is not None:
            self.account_id = account_id
        if begin_time is not None:
            self.begin_time = begin_time
        if end_time is not None:
            self.end_time = end_time
        if event_id is not None:
            self.event_id = event_id
        if event_kind is not None:
            self.event_kind = event_kind
        if instance_id is not None:
            self.instance_id = instance_id
        if instance_name is not None:
            self.instance_name = instance_name
        if message is not None:
            self.message = message
        if planned_start_time is not None:
            self.planned_start_time = planned_start_time
        if project_name is not None:
            self.project_name = project_name
        if request_id is not None:
            self.request_id = request_id
        if schedule_type is not None:
            self.schedule_type = schedule_type
        if status is not None:
            self.status = status

    @property
    def account_id(self):
        """Gets the account_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The account_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param account_id: The account_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def begin_time(self):
        """Gets the begin_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The begin_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._begin_time

    @begin_time.setter
    def begin_time(self, begin_time):
        """Sets the begin_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param begin_time: The begin_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._begin_time = begin_time

    @property
    def end_time(self):
        """Gets the end_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The end_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param end_time: The end_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._end_time = end_time

    @property
    def event_id(self):
        """Gets the event_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The event_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param event_id: The event_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._event_id = event_id

    @property
    def event_kind(self):
        """Gets the event_kind of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The event_kind of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._event_kind

    @event_kind.setter
    def event_kind(self, event_kind):
        """Sets the event_kind of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param event_kind: The event_kind of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._event_kind = event_kind

    @property
    def instance_id(self):
        """Gets the instance_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The instance_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param instance_id: The instance_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._instance_id = instance_id

    @property
    def instance_name(self):
        """Gets the instance_name of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The instance_name of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._instance_name

    @instance_name.setter
    def instance_name(self, instance_name):
        """Sets the instance_name of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param instance_name: The instance_name of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._instance_name = instance_name

    @property
    def message(self):
        """Gets the message of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The message of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param message: The message of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def planned_start_time(self):
        """Gets the planned_start_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The planned_start_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._planned_start_time

    @planned_start_time.setter
    def planned_start_time(self, planned_start_time):
        """Sets the planned_start_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param planned_start_time: The planned_start_time of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._planned_start_time = planned_start_time

    @property
    def project_name(self):
        """Gets the project_name of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The project_name of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param project_name: The project_name of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._project_name = project_name

    @property
    def request_id(self):
        """Gets the request_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The request_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param request_id: The request_id of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._request_id = request_id

    @property
    def schedule_type(self):
        """Gets the schedule_type of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The schedule_type of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._schedule_type

    @schedule_type.setter
    def schedule_type(self, schedule_type):
        """Sets the schedule_type of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param schedule_type: The schedule_type of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._schedule_type = schedule_type

    @property
    def status(self):
        """Gets the status of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501


        :return: The status of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ScheduleTasksInfoForDescribeScheduleEventsOutput.


        :param status: The status of this ScheduleTasksInfoForDescribeScheduleEventsOutput.  # noqa: E501
        :type: str
        """

        self._status = status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ScheduleTasksInfoForDescribeScheduleEventsOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ScheduleTasksInfoForDescribeScheduleEventsOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ScheduleTasksInfoForDescribeScheduleEventsOutput):
            return True

        return self.to_dict() != other.to_dict()
