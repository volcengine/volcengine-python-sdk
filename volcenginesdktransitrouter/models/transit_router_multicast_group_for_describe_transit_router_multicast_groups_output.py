# coding: utf-8

"""
    transitrouter

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'creation_time': 'str',
        'group_ip_address': 'str',
        'group_member': 'str',
        'group_source': 'str',
        'member_type': 'str',
        'network_interface_id': 'str',
        'resource_id': 'str',
        'resource_type': 'str',
        'source_type': 'str',
        'status': 'str',
        'subnet_id': 'str',
        'transit_router_attachment_id': 'str',
        'transit_router_id': 'str',
        'transit_router_multicast_domain_id': 'str',
        'update_time': 'str'
    }

    attribute_map = {
        'creation_time': 'CreationTime',
        'group_ip_address': 'GroupIpAddress',
        'group_member': 'GroupMember',
        'group_source': 'GroupSource',
        'member_type': 'MemberType',
        'network_interface_id': 'NetworkInterfaceId',
        'resource_id': 'ResourceId',
        'resource_type': 'ResourceType',
        'source_type': 'SourceType',
        'status': 'Status',
        'subnet_id': 'SubnetId',
        'transit_router_attachment_id': 'TransitRouterAttachmentId',
        'transit_router_id': 'TransitRouterId',
        'transit_router_multicast_domain_id': 'TransitRouterMulticastDomainId',
        'update_time': 'UpdateTime'
    }

    def __init__(self, creation_time=None, group_ip_address=None, group_member=None, group_source=None, member_type=None, network_interface_id=None, resource_id=None, resource_type=None, source_type=None, status=None, subnet_id=None, transit_router_attachment_id=None, transit_router_id=None, transit_router_multicast_domain_id=None, update_time=None, _configuration=None):  # noqa: E501
        """TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._creation_time = None
        self._group_ip_address = None
        self._group_member = None
        self._group_source = None
        self._member_type = None
        self._network_interface_id = None
        self._resource_id = None
        self._resource_type = None
        self._source_type = None
        self._status = None
        self._subnet_id = None
        self._transit_router_attachment_id = None
        self._transit_router_id = None
        self._transit_router_multicast_domain_id = None
        self._update_time = None
        self.discriminator = None

        if creation_time is not None:
            self.creation_time = creation_time
        if group_ip_address is not None:
            self.group_ip_address = group_ip_address
        if group_member is not None:
            self.group_member = group_member
        if group_source is not None:
            self.group_source = group_source
        if member_type is not None:
            self.member_type = member_type
        if network_interface_id is not None:
            self.network_interface_id = network_interface_id
        if resource_id is not None:
            self.resource_id = resource_id
        if resource_type is not None:
            self.resource_type = resource_type
        if source_type is not None:
            self.source_type = source_type
        if status is not None:
            self.status = status
        if subnet_id is not None:
            self.subnet_id = subnet_id
        if transit_router_attachment_id is not None:
            self.transit_router_attachment_id = transit_router_attachment_id
        if transit_router_id is not None:
            self.transit_router_id = transit_router_id
        if transit_router_multicast_domain_id is not None:
            self.transit_router_multicast_domain_id = transit_router_multicast_domain_id
        if update_time is not None:
            self.update_time = update_time

    @property
    def creation_time(self):
        """Gets the creation_time of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The creation_time of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param creation_time: The creation_time of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._creation_time = creation_time

    @property
    def group_ip_address(self):
        """Gets the group_ip_address of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The group_ip_address of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._group_ip_address

    @group_ip_address.setter
    def group_ip_address(self, group_ip_address):
        """Sets the group_ip_address of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param group_ip_address: The group_ip_address of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._group_ip_address = group_ip_address

    @property
    def group_member(self):
        """Gets the group_member of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The group_member of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._group_member

    @group_member.setter
    def group_member(self, group_member):
        """Sets the group_member of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param group_member: The group_member of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._group_member = group_member

    @property
    def group_source(self):
        """Gets the group_source of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The group_source of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._group_source

    @group_source.setter
    def group_source(self, group_source):
        """Sets the group_source of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param group_source: The group_source of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._group_source = group_source

    @property
    def member_type(self):
        """Gets the member_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The member_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._member_type

    @member_type.setter
    def member_type(self, member_type):
        """Sets the member_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param member_type: The member_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._member_type = member_type

    @property
    def network_interface_id(self):
        """Gets the network_interface_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The network_interface_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._network_interface_id

    @network_interface_id.setter
    def network_interface_id(self, network_interface_id):
        """Sets the network_interface_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param network_interface_id: The network_interface_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._network_interface_id = network_interface_id

    @property
    def resource_id(self):
        """Gets the resource_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The resource_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param resource_id: The resource_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._resource_id = resource_id

    @property
    def resource_type(self):
        """Gets the resource_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The resource_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param resource_type: The resource_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._resource_type = resource_type

    @property
    def source_type(self):
        """Gets the source_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The source_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param source_type: The source_type of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._source_type = source_type

    @property
    def status(self):
        """Gets the status of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The status of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param status: The status of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def subnet_id(self):
        """Gets the subnet_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The subnet_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_id

    @subnet_id.setter
    def subnet_id(self, subnet_id):
        """Sets the subnet_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param subnet_id: The subnet_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._subnet_id = subnet_id

    @property
    def transit_router_attachment_id(self):
        """Gets the transit_router_attachment_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The transit_router_attachment_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._transit_router_attachment_id

    @transit_router_attachment_id.setter
    def transit_router_attachment_id(self, transit_router_attachment_id):
        """Sets the transit_router_attachment_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param transit_router_attachment_id: The transit_router_attachment_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._transit_router_attachment_id = transit_router_attachment_id

    @property
    def transit_router_id(self):
        """Gets the transit_router_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The transit_router_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._transit_router_id

    @transit_router_id.setter
    def transit_router_id(self, transit_router_id):
        """Sets the transit_router_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param transit_router_id: The transit_router_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._transit_router_id = transit_router_id

    @property
    def transit_router_multicast_domain_id(self):
        """Gets the transit_router_multicast_domain_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The transit_router_multicast_domain_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._transit_router_multicast_domain_id

    @transit_router_multicast_domain_id.setter
    def transit_router_multicast_domain_id(self, transit_router_multicast_domain_id):
        """Sets the transit_router_multicast_domain_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param transit_router_multicast_domain_id: The transit_router_multicast_domain_id of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._transit_router_multicast_domain_id = transit_router_multicast_domain_id

    @property
    def update_time(self):
        """Gets the update_time of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501


        :return: The update_time of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.


        :param update_time: The update_time of this TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput.  # noqa: E501
        :type: str
        """

        self._update_time = update_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, TransitRouterMulticastGroupForDescribeTransitRouterMulticastGroupsOutput):
            return True

        return self.to_dict() != other.to_dict()
