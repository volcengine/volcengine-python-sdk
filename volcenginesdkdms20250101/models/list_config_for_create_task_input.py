# coding: utf-8

"""
    dms20250101

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class ListConfigForCreateTaskInput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'generate_report': 'bool',
        'list_include_begin_time': 'str',
        'list_include_bucket_keys': 'ListIncludeBucketKeysForCreateTaskInput',
        'list_include_end_time': 'str',
        'list_include_prefixes': 'list[str]'
    }

    attribute_map = {
        'generate_report': 'GenerateReport',
        'list_include_begin_time': 'ListIncludeBeginTime',
        'list_include_bucket_keys': 'ListIncludeBucketKeys',
        'list_include_end_time': 'ListIncludeEndTime',
        'list_include_prefixes': 'ListIncludePrefixes'
    }

    def __init__(self, generate_report=None, list_include_begin_time=None, list_include_bucket_keys=None, list_include_end_time=None, list_include_prefixes=None, _configuration=None):  # noqa: E501
        """ListConfigForCreateTaskInput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._generate_report = None
        self._list_include_begin_time = None
        self._list_include_bucket_keys = None
        self._list_include_end_time = None
        self._list_include_prefixes = None
        self.discriminator = None

        if generate_report is not None:
            self.generate_report = generate_report
        if list_include_begin_time is not None:
            self.list_include_begin_time = list_include_begin_time
        if list_include_bucket_keys is not None:
            self.list_include_bucket_keys = list_include_bucket_keys
        if list_include_end_time is not None:
            self.list_include_end_time = list_include_end_time
        if list_include_prefixes is not None:
            self.list_include_prefixes = list_include_prefixes

    @property
    def generate_report(self):
        """Gets the generate_report of this ListConfigForCreateTaskInput.  # noqa: E501


        :return: The generate_report of this ListConfigForCreateTaskInput.  # noqa: E501
        :rtype: bool
        """
        return self._generate_report

    @generate_report.setter
    def generate_report(self, generate_report):
        """Sets the generate_report of this ListConfigForCreateTaskInput.


        :param generate_report: The generate_report of this ListConfigForCreateTaskInput.  # noqa: E501
        :type: bool
        """

        self._generate_report = generate_report

    @property
    def list_include_begin_time(self):
        """Gets the list_include_begin_time of this ListConfigForCreateTaskInput.  # noqa: E501


        :return: The list_include_begin_time of this ListConfigForCreateTaskInput.  # noqa: E501
        :rtype: str
        """
        return self._list_include_begin_time

    @list_include_begin_time.setter
    def list_include_begin_time(self, list_include_begin_time):
        """Sets the list_include_begin_time of this ListConfigForCreateTaskInput.


        :param list_include_begin_time: The list_include_begin_time of this ListConfigForCreateTaskInput.  # noqa: E501
        :type: str
        """

        self._list_include_begin_time = list_include_begin_time

    @property
    def list_include_bucket_keys(self):
        """Gets the list_include_bucket_keys of this ListConfigForCreateTaskInput.  # noqa: E501


        :return: The list_include_bucket_keys of this ListConfigForCreateTaskInput.  # noqa: E501
        :rtype: ListIncludeBucketKeysForCreateTaskInput
        """
        return self._list_include_bucket_keys

    @list_include_bucket_keys.setter
    def list_include_bucket_keys(self, list_include_bucket_keys):
        """Sets the list_include_bucket_keys of this ListConfigForCreateTaskInput.


        :param list_include_bucket_keys: The list_include_bucket_keys of this ListConfigForCreateTaskInput.  # noqa: E501
        :type: ListIncludeBucketKeysForCreateTaskInput
        """

        self._list_include_bucket_keys = list_include_bucket_keys

    @property
    def list_include_end_time(self):
        """Gets the list_include_end_time of this ListConfigForCreateTaskInput.  # noqa: E501


        :return: The list_include_end_time of this ListConfigForCreateTaskInput.  # noqa: E501
        :rtype: str
        """
        return self._list_include_end_time

    @list_include_end_time.setter
    def list_include_end_time(self, list_include_end_time):
        """Sets the list_include_end_time of this ListConfigForCreateTaskInput.


        :param list_include_end_time: The list_include_end_time of this ListConfigForCreateTaskInput.  # noqa: E501
        :type: str
        """

        self._list_include_end_time = list_include_end_time

    @property
    def list_include_prefixes(self):
        """Gets the list_include_prefixes of this ListConfigForCreateTaskInput.  # noqa: E501


        :return: The list_include_prefixes of this ListConfigForCreateTaskInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._list_include_prefixes

    @list_include_prefixes.setter
    def list_include_prefixes(self, list_include_prefixes):
        """Sets the list_include_prefixes of this ListConfigForCreateTaskInput.


        :param list_include_prefixes: The list_include_prefixes of this ListConfigForCreateTaskInput.  # noqa: E501
        :type: list[str]
        """

        self._list_include_prefixes = list_include_prefixes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ListConfigForCreateTaskInput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ListConfigForCreateTaskInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ListConfigForCreateTaskInput):
            return True

        return self.to_dict() != other.to_dict()
