# coding: utf-8

"""
    milvus

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class DescribeInstanceDetailResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'base_instance': 'BaseInstanceForDescribeInstanceDetailOutput',
        'charge_config': 'ChargeConfigForDescribeInstanceDetailOutput',
        'create_time': 'str',
        'delete_protect_enabled': 'bool',
        'endpoint_list': 'list[EndpointListForDescribeInstanceDetailOutput]',
        'engine_version': 'str',
        'ha_enabled': 'bool',
        'network_config': 'NetworkConfigForDescribeInstanceDetailOutput',
        'spec_config': 'list[SpecConfigForDescribeInstanceDetailOutput]',
        'storage_usage': 'str',
        'tags': 'list[TagForDescribeInstanceDetailOutput]',
        'zones': 'list[str]'
    }

    attribute_map = {
        'base_instance': 'BaseInstance',
        'charge_config': 'ChargeConfig',
        'create_time': 'CreateTime',
        'delete_protect_enabled': 'DeleteProtectEnabled',
        'endpoint_list': 'EndpointList',
        'engine_version': 'EngineVersion',
        'ha_enabled': 'HaEnabled',
        'network_config': 'NetworkConfig',
        'spec_config': 'SpecConfig',
        'storage_usage': 'StorageUsage',
        'tags': 'Tags',
        'zones': 'Zones'
    }

    def __init__(self, base_instance=None, charge_config=None, create_time=None, delete_protect_enabled=None, endpoint_list=None, engine_version=None, ha_enabled=None, network_config=None, spec_config=None, storage_usage=None, tags=None, zones=None, _configuration=None):  # noqa: E501
        """DescribeInstanceDetailResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._base_instance = None
        self._charge_config = None
        self._create_time = None
        self._delete_protect_enabled = None
        self._endpoint_list = None
        self._engine_version = None
        self._ha_enabled = None
        self._network_config = None
        self._spec_config = None
        self._storage_usage = None
        self._tags = None
        self._zones = None
        self.discriminator = None

        if base_instance is not None:
            self.base_instance = base_instance
        if charge_config is not None:
            self.charge_config = charge_config
        if create_time is not None:
            self.create_time = create_time
        if delete_protect_enabled is not None:
            self.delete_protect_enabled = delete_protect_enabled
        if endpoint_list is not None:
            self.endpoint_list = endpoint_list
        if engine_version is not None:
            self.engine_version = engine_version
        if ha_enabled is not None:
            self.ha_enabled = ha_enabled
        if network_config is not None:
            self.network_config = network_config
        if spec_config is not None:
            self.spec_config = spec_config
        if storage_usage is not None:
            self.storage_usage = storage_usage
        if tags is not None:
            self.tags = tags
        if zones is not None:
            self.zones = zones

    @property
    def base_instance(self):
        """Gets the base_instance of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The base_instance of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: BaseInstanceForDescribeInstanceDetailOutput
        """
        return self._base_instance

    @base_instance.setter
    def base_instance(self, base_instance):
        """Sets the base_instance of this DescribeInstanceDetailResponse.


        :param base_instance: The base_instance of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: BaseInstanceForDescribeInstanceDetailOutput
        """

        self._base_instance = base_instance

    @property
    def charge_config(self):
        """Gets the charge_config of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The charge_config of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: ChargeConfigForDescribeInstanceDetailOutput
        """
        return self._charge_config

    @charge_config.setter
    def charge_config(self, charge_config):
        """Sets the charge_config of this DescribeInstanceDetailResponse.


        :param charge_config: The charge_config of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: ChargeConfigForDescribeInstanceDetailOutput
        """

        self._charge_config = charge_config

    @property
    def create_time(self):
        """Gets the create_time of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The create_time of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this DescribeInstanceDetailResponse.


        :param create_time: The create_time of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: str
        """

        self._create_time = create_time

    @property
    def delete_protect_enabled(self):
        """Gets the delete_protect_enabled of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The delete_protect_enabled of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: bool
        """
        return self._delete_protect_enabled

    @delete_protect_enabled.setter
    def delete_protect_enabled(self, delete_protect_enabled):
        """Sets the delete_protect_enabled of this DescribeInstanceDetailResponse.


        :param delete_protect_enabled: The delete_protect_enabled of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: bool
        """

        self._delete_protect_enabled = delete_protect_enabled

    @property
    def endpoint_list(self):
        """Gets the endpoint_list of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The endpoint_list of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: list[EndpointListForDescribeInstanceDetailOutput]
        """
        return self._endpoint_list

    @endpoint_list.setter
    def endpoint_list(self, endpoint_list):
        """Sets the endpoint_list of this DescribeInstanceDetailResponse.


        :param endpoint_list: The endpoint_list of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: list[EndpointListForDescribeInstanceDetailOutput]
        """

        self._endpoint_list = endpoint_list

    @property
    def engine_version(self):
        """Gets the engine_version of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The engine_version of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this DescribeInstanceDetailResponse.


        :param engine_version: The engine_version of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: str
        """

        self._engine_version = engine_version

    @property
    def ha_enabled(self):
        """Gets the ha_enabled of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The ha_enabled of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: bool
        """
        return self._ha_enabled

    @ha_enabled.setter
    def ha_enabled(self, ha_enabled):
        """Sets the ha_enabled of this DescribeInstanceDetailResponse.


        :param ha_enabled: The ha_enabled of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: bool
        """

        self._ha_enabled = ha_enabled

    @property
    def network_config(self):
        """Gets the network_config of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The network_config of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: NetworkConfigForDescribeInstanceDetailOutput
        """
        return self._network_config

    @network_config.setter
    def network_config(self, network_config):
        """Sets the network_config of this DescribeInstanceDetailResponse.


        :param network_config: The network_config of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: NetworkConfigForDescribeInstanceDetailOutput
        """

        self._network_config = network_config

    @property
    def spec_config(self):
        """Gets the spec_config of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The spec_config of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: list[SpecConfigForDescribeInstanceDetailOutput]
        """
        return self._spec_config

    @spec_config.setter
    def spec_config(self, spec_config):
        """Sets the spec_config of this DescribeInstanceDetailResponse.


        :param spec_config: The spec_config of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: list[SpecConfigForDescribeInstanceDetailOutput]
        """

        self._spec_config = spec_config

    @property
    def storage_usage(self):
        """Gets the storage_usage of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The storage_usage of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: str
        """
        return self._storage_usage

    @storage_usage.setter
    def storage_usage(self, storage_usage):
        """Sets the storage_usage of this DescribeInstanceDetailResponse.


        :param storage_usage: The storage_usage of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: str
        """

        self._storage_usage = storage_usage

    @property
    def tags(self):
        """Gets the tags of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The tags of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: list[TagForDescribeInstanceDetailOutput]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribeInstanceDetailResponse.


        :param tags: The tags of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: list[TagForDescribeInstanceDetailOutput]
        """

        self._tags = tags

    @property
    def zones(self):
        """Gets the zones of this DescribeInstanceDetailResponse.  # noqa: E501


        :return: The zones of this DescribeInstanceDetailResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._zones

    @zones.setter
    def zones(self, zones):
        """Sets the zones of this DescribeInstanceDetailResponse.


        :param zones: The zones of this DescribeInstanceDetailResponse.  # noqa: E501
        :type: list[str]
        """

        self._zones = zones

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DescribeInstanceDetailResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DescribeInstanceDetailResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DescribeInstanceDetailResponse):
            return True

        return self.to_dict() != other.to_dict()
