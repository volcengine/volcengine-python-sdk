# coding: utf-8

"""
    graph

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class ConfCheckerForValidateConfCheckerInput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bpm_id': 'str',
        'conf_checker_python_script': 'str',
        'description': 'str',
        'id': 'int',
        'modify_time': 'str',
        'name': 'str',
        'operator': 'str',
        'psm': 'str',
        'region': 'str',
        'test_case': 'str',
        'type': 'str',
        'validator_version': 'int'
    }

    attribute_map = {
        'bpm_id': 'BpmID',
        'conf_checker_python_script': 'ConfCheckerPythonScript',
        'description': 'Description',
        'id': 'Id',
        'modify_time': 'ModifyTime',
        'name': 'Name',
        'operator': 'Operator',
        'psm': 'Psm',
        'region': 'Region',
        'test_case': 'TestCase',
        'type': 'Type',
        'validator_version': 'ValidatorVersion'
    }

    def __init__(self, bpm_id=None, conf_checker_python_script=None, description=None, id=None, modify_time=None, name=None, operator=None, psm=None, region=None, test_case=None, type=None, validator_version=None, _configuration=None):  # noqa: E501
        """ConfCheckerForValidateConfCheckerInput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._bpm_id = None
        self._conf_checker_python_script = None
        self._description = None
        self._id = None
        self._modify_time = None
        self._name = None
        self._operator = None
        self._psm = None
        self._region = None
        self._test_case = None
        self._type = None
        self._validator_version = None
        self.discriminator = None

        if bpm_id is not None:
            self.bpm_id = bpm_id
        if conf_checker_python_script is not None:
            self.conf_checker_python_script = conf_checker_python_script
        if description is not None:
            self.description = description
        if id is not None:
            self.id = id
        if modify_time is not None:
            self.modify_time = modify_time
        if name is not None:
            self.name = name
        if operator is not None:
            self.operator = operator
        if psm is not None:
            self.psm = psm
        if region is not None:
            self.region = region
        if test_case is not None:
            self.test_case = test_case
        if type is not None:
            self.type = type
        if validator_version is not None:
            self.validator_version = validator_version

    @property
    def bpm_id(self):
        """Gets the bpm_id of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The bpm_id of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: str
        """
        return self._bpm_id

    @bpm_id.setter
    def bpm_id(self, bpm_id):
        """Sets the bpm_id of this ConfCheckerForValidateConfCheckerInput.


        :param bpm_id: The bpm_id of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: str
        """

        self._bpm_id = bpm_id

    @property
    def conf_checker_python_script(self):
        """Gets the conf_checker_python_script of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The conf_checker_python_script of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: str
        """
        return self._conf_checker_python_script

    @conf_checker_python_script.setter
    def conf_checker_python_script(self, conf_checker_python_script):
        """Sets the conf_checker_python_script of this ConfCheckerForValidateConfCheckerInput.


        :param conf_checker_python_script: The conf_checker_python_script of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: str
        """

        self._conf_checker_python_script = conf_checker_python_script

    @property
    def description(self):
        """Gets the description of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The description of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ConfCheckerForValidateConfCheckerInput.


        :param description: The description of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The id of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ConfCheckerForValidateConfCheckerInput.


        :param id: The id of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def modify_time(self):
        """Gets the modify_time of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The modify_time of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: str
        """
        return self._modify_time

    @modify_time.setter
    def modify_time(self, modify_time):
        """Sets the modify_time of this ConfCheckerForValidateConfCheckerInput.


        :param modify_time: The modify_time of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: str
        """

        self._modify_time = modify_time

    @property
    def name(self):
        """Gets the name of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The name of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ConfCheckerForValidateConfCheckerInput.


        :param name: The name of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def operator(self):
        """Gets the operator of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The operator of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this ConfCheckerForValidateConfCheckerInput.


        :param operator: The operator of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: str
        """

        self._operator = operator

    @property
    def psm(self):
        """Gets the psm of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The psm of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: str
        """
        return self._psm

    @psm.setter
    def psm(self, psm):
        """Sets the psm of this ConfCheckerForValidateConfCheckerInput.


        :param psm: The psm of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: str
        """

        self._psm = psm

    @property
    def region(self):
        """Gets the region of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The region of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this ConfCheckerForValidateConfCheckerInput.


        :param region: The region of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: str
        """

        self._region = region

    @property
    def test_case(self):
        """Gets the test_case of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The test_case of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: str
        """
        return self._test_case

    @test_case.setter
    def test_case(self, test_case):
        """Sets the test_case of this ConfCheckerForValidateConfCheckerInput.


        :param test_case: The test_case of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: str
        """

        self._test_case = test_case

    @property
    def type(self):
        """Gets the type of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The type of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ConfCheckerForValidateConfCheckerInput.


        :param type: The type of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def validator_version(self):
        """Gets the validator_version of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501


        :return: The validator_version of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :rtype: int
        """
        return self._validator_version

    @validator_version.setter
    def validator_version(self, validator_version):
        """Sets the validator_version of this ConfCheckerForValidateConfCheckerInput.


        :param validator_version: The validator_version of this ConfCheckerForValidateConfCheckerInput.  # noqa: E501
        :type: int
        """

        self._validator_version = validator_version

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConfCheckerForValidateConfCheckerInput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConfCheckerForValidateConfCheckerInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ConfCheckerForValidateConfCheckerInput):
            return True

        return self.to_dict() != other.to_dict()
