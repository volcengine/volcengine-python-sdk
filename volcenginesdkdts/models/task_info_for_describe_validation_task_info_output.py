# coding: utf-8

"""
    dts

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class TaskInfoForDescribeValidationTaskInfoOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'add_sync_object_allowed': 'bool',
        'charge_config': 'ChargeConfigForDescribeValidationTaskInfoOutput',
        'charge_detail': 'ChargeDetailForDescribeValidationTaskInfoOutput',
        'create_time': 'int',
        'dest_config': 'DestConfigForDescribeValidationTaskInfoOutput',
        'enable_cloud_monitor': 'bool',
        'enable_data_validation': 'bool',
        'end_time': 'int',
        'error_info': 'str',
        'parent_task_id': 'str',
        'progress_summary': 'ProgressSummaryForDescribeValidationTaskInfoOutput',
        'project_name': 'str',
        'snapshot_gtid': 'str',
        'solution_settings': 'str',
        'src_config': 'SrcConfigForDescribeValidationTaskInfoOutput',
        'start_time': 'int',
        'task_id': 'str',
        'task_name': 'str',
        'task_status': 'str',
        'task_sub_type': 'str',
        'task_type': 'str',
        'traffic_spec': 'str',
        'update_time': 'int'
    }

    attribute_map = {
        'add_sync_object_allowed': 'AddSyncObjectAllowed',
        'charge_config': 'ChargeConfig',
        'charge_detail': 'ChargeDetail',
        'create_time': 'CreateTime',
        'dest_config': 'DestConfig',
        'enable_cloud_monitor': 'EnableCloudMonitor',
        'enable_data_validation': 'EnableDataValidation',
        'end_time': 'EndTime',
        'error_info': 'ErrorInfo',
        'parent_task_id': 'ParentTaskID',
        'progress_summary': 'ProgressSummary',
        'project_name': 'ProjectName',
        'snapshot_gtid': 'SnapshotGtid',
        'solution_settings': 'SolutionSettings',
        'src_config': 'SrcConfig',
        'start_time': 'StartTime',
        'task_id': 'TaskId',
        'task_name': 'TaskName',
        'task_status': 'TaskStatus',
        'task_sub_type': 'TaskSubType',
        'task_type': 'TaskType',
        'traffic_spec': 'TrafficSpec',
        'update_time': 'UpdateTime'
    }

    def __init__(self, add_sync_object_allowed=None, charge_config=None, charge_detail=None, create_time=None, dest_config=None, enable_cloud_monitor=None, enable_data_validation=None, end_time=None, error_info=None, parent_task_id=None, progress_summary=None, project_name=None, snapshot_gtid=None, solution_settings=None, src_config=None, start_time=None, task_id=None, task_name=None, task_status=None, task_sub_type=None, task_type=None, traffic_spec=None, update_time=None, _configuration=None):  # noqa: E501
        """TaskInfoForDescribeValidationTaskInfoOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._add_sync_object_allowed = None
        self._charge_config = None
        self._charge_detail = None
        self._create_time = None
        self._dest_config = None
        self._enable_cloud_monitor = None
        self._enable_data_validation = None
        self._end_time = None
        self._error_info = None
        self._parent_task_id = None
        self._progress_summary = None
        self._project_name = None
        self._snapshot_gtid = None
        self._solution_settings = None
        self._src_config = None
        self._start_time = None
        self._task_id = None
        self._task_name = None
        self._task_status = None
        self._task_sub_type = None
        self._task_type = None
        self._traffic_spec = None
        self._update_time = None
        self.discriminator = None

        if add_sync_object_allowed is not None:
            self.add_sync_object_allowed = add_sync_object_allowed
        if charge_config is not None:
            self.charge_config = charge_config
        if charge_detail is not None:
            self.charge_detail = charge_detail
        if create_time is not None:
            self.create_time = create_time
        if dest_config is not None:
            self.dest_config = dest_config
        if enable_cloud_monitor is not None:
            self.enable_cloud_monitor = enable_cloud_monitor
        if enable_data_validation is not None:
            self.enable_data_validation = enable_data_validation
        if end_time is not None:
            self.end_time = end_time
        if error_info is not None:
            self.error_info = error_info
        if parent_task_id is not None:
            self.parent_task_id = parent_task_id
        if progress_summary is not None:
            self.progress_summary = progress_summary
        if project_name is not None:
            self.project_name = project_name
        if snapshot_gtid is not None:
            self.snapshot_gtid = snapshot_gtid
        if solution_settings is not None:
            self.solution_settings = solution_settings
        if src_config is not None:
            self.src_config = src_config
        if start_time is not None:
            self.start_time = start_time
        if task_id is not None:
            self.task_id = task_id
        if task_name is not None:
            self.task_name = task_name
        if task_status is not None:
            self.task_status = task_status
        if task_sub_type is not None:
            self.task_sub_type = task_sub_type
        if task_type is not None:
            self.task_type = task_type
        if traffic_spec is not None:
            self.traffic_spec = traffic_spec
        if update_time is not None:
            self.update_time = update_time

    @property
    def add_sync_object_allowed(self):
        """Gets the add_sync_object_allowed of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The add_sync_object_allowed of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: bool
        """
        return self._add_sync_object_allowed

    @add_sync_object_allowed.setter
    def add_sync_object_allowed(self, add_sync_object_allowed):
        """Sets the add_sync_object_allowed of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param add_sync_object_allowed: The add_sync_object_allowed of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: bool
        """

        self._add_sync_object_allowed = add_sync_object_allowed

    @property
    def charge_config(self):
        """Gets the charge_config of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The charge_config of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: ChargeConfigForDescribeValidationTaskInfoOutput
        """
        return self._charge_config

    @charge_config.setter
    def charge_config(self, charge_config):
        """Sets the charge_config of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param charge_config: The charge_config of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: ChargeConfigForDescribeValidationTaskInfoOutput
        """

        self._charge_config = charge_config

    @property
    def charge_detail(self):
        """Gets the charge_detail of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The charge_detail of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: ChargeDetailForDescribeValidationTaskInfoOutput
        """
        return self._charge_detail

    @charge_detail.setter
    def charge_detail(self, charge_detail):
        """Sets the charge_detail of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param charge_detail: The charge_detail of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: ChargeDetailForDescribeValidationTaskInfoOutput
        """

        self._charge_detail = charge_detail

    @property
    def create_time(self):
        """Gets the create_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The create_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: int
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param create_time: The create_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: int
        """

        self._create_time = create_time

    @property
    def dest_config(self):
        """Gets the dest_config of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The dest_config of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: DestConfigForDescribeValidationTaskInfoOutput
        """
        return self._dest_config

    @dest_config.setter
    def dest_config(self, dest_config):
        """Sets the dest_config of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param dest_config: The dest_config of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: DestConfigForDescribeValidationTaskInfoOutput
        """

        self._dest_config = dest_config

    @property
    def enable_cloud_monitor(self):
        """Gets the enable_cloud_monitor of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The enable_cloud_monitor of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: bool
        """
        return self._enable_cloud_monitor

    @enable_cloud_monitor.setter
    def enable_cloud_monitor(self, enable_cloud_monitor):
        """Sets the enable_cloud_monitor of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param enable_cloud_monitor: The enable_cloud_monitor of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: bool
        """

        self._enable_cloud_monitor = enable_cloud_monitor

    @property
    def enable_data_validation(self):
        """Gets the enable_data_validation of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The enable_data_validation of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: bool
        """
        return self._enable_data_validation

    @enable_data_validation.setter
    def enable_data_validation(self, enable_data_validation):
        """Sets the enable_data_validation of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param enable_data_validation: The enable_data_validation of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: bool
        """

        self._enable_data_validation = enable_data_validation

    @property
    def end_time(self):
        """Gets the end_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The end_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: int
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param end_time: The end_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: int
        """

        self._end_time = end_time

    @property
    def error_info(self):
        """Gets the error_info of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The error_info of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: str
        """
        return self._error_info

    @error_info.setter
    def error_info(self, error_info):
        """Sets the error_info of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param error_info: The error_info of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: str
        """

        self._error_info = error_info

    @property
    def parent_task_id(self):
        """Gets the parent_task_id of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The parent_task_id of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: str
        """
        return self._parent_task_id

    @parent_task_id.setter
    def parent_task_id(self, parent_task_id):
        """Sets the parent_task_id of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param parent_task_id: The parent_task_id of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: str
        """

        self._parent_task_id = parent_task_id

    @property
    def progress_summary(self):
        """Gets the progress_summary of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The progress_summary of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: ProgressSummaryForDescribeValidationTaskInfoOutput
        """
        return self._progress_summary

    @progress_summary.setter
    def progress_summary(self, progress_summary):
        """Sets the progress_summary of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param progress_summary: The progress_summary of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: ProgressSummaryForDescribeValidationTaskInfoOutput
        """

        self._progress_summary = progress_summary

    @property
    def project_name(self):
        """Gets the project_name of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The project_name of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param project_name: The project_name of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: str
        """

        self._project_name = project_name

    @property
    def snapshot_gtid(self):
        """Gets the snapshot_gtid of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The snapshot_gtid of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: str
        """
        return self._snapshot_gtid

    @snapshot_gtid.setter
    def snapshot_gtid(self, snapshot_gtid):
        """Sets the snapshot_gtid of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param snapshot_gtid: The snapshot_gtid of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: str
        """

        self._snapshot_gtid = snapshot_gtid

    @property
    def solution_settings(self):
        """Gets the solution_settings of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The solution_settings of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: str
        """
        return self._solution_settings

    @solution_settings.setter
    def solution_settings(self, solution_settings):
        """Sets the solution_settings of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param solution_settings: The solution_settings of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: str
        """

        self._solution_settings = solution_settings

    @property
    def src_config(self):
        """Gets the src_config of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The src_config of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: SrcConfigForDescribeValidationTaskInfoOutput
        """
        return self._src_config

    @src_config.setter
    def src_config(self, src_config):
        """Sets the src_config of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param src_config: The src_config of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: SrcConfigForDescribeValidationTaskInfoOutput
        """

        self._src_config = src_config

    @property
    def start_time(self):
        """Gets the start_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The start_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: int
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param start_time: The start_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: int
        """

        self._start_time = start_time

    @property
    def task_id(self):
        """Gets the task_id of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The task_id of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param task_id: The task_id of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: str
        """

        self._task_id = task_id

    @property
    def task_name(self):
        """Gets the task_name of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The task_name of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: str
        """
        return self._task_name

    @task_name.setter
    def task_name(self, task_name):
        """Sets the task_name of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param task_name: The task_name of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: str
        """

        self._task_name = task_name

    @property
    def task_status(self):
        """Gets the task_status of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The task_status of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: str
        """
        return self._task_status

    @task_status.setter
    def task_status(self, task_status):
        """Sets the task_status of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param task_status: The task_status of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: str
        """

        self._task_status = task_status

    @property
    def task_sub_type(self):
        """Gets the task_sub_type of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The task_sub_type of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: str
        """
        return self._task_sub_type

    @task_sub_type.setter
    def task_sub_type(self, task_sub_type):
        """Sets the task_sub_type of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param task_sub_type: The task_sub_type of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: str
        """

        self._task_sub_type = task_sub_type

    @property
    def task_type(self):
        """Gets the task_type of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The task_type of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: str
        """
        return self._task_type

    @task_type.setter
    def task_type(self, task_type):
        """Sets the task_type of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param task_type: The task_type of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: str
        """

        self._task_type = task_type

    @property
    def traffic_spec(self):
        """Gets the traffic_spec of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The traffic_spec of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: str
        """
        return self._traffic_spec

    @traffic_spec.setter
    def traffic_spec(self, traffic_spec):
        """Sets the traffic_spec of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param traffic_spec: The traffic_spec of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: str
        """

        self._traffic_spec = traffic_spec

    @property
    def update_time(self):
        """Gets the update_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501


        :return: The update_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :rtype: int
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this TaskInfoForDescribeValidationTaskInfoOutput.


        :param update_time: The update_time of this TaskInfoForDescribeValidationTaskInfoOutput.  # noqa: E501
        :type: int
        """

        self._update_time = update_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TaskInfoForDescribeValidationTaskInfoOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TaskInfoForDescribeValidationTaskInfoOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, TaskInfoForDescribeValidationTaskInfoOutput):
            return True

        return self.to_dict() != other.to_dict()
