# coding: utf-8

"""
    dts

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class InfoForModifyValidationTaskOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'error_info': 'str',
        'name_cn': 'str',
        'progress_type': 'str',
        'status': 'str'
    }

    attribute_map = {
        'error_info': 'ErrorInfo',
        'name_cn': 'NameCN',
        'progress_type': 'ProgressType',
        'status': 'Status'
    }

    def __init__(self, error_info=None, name_cn=None, progress_type=None, status=None, _configuration=None):  # noqa: E501
        """InfoForModifyValidationTaskOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._error_info = None
        self._name_cn = None
        self._progress_type = None
        self._status = None
        self.discriminator = None

        if error_info is not None:
            self.error_info = error_info
        if name_cn is not None:
            self.name_cn = name_cn
        if progress_type is not None:
            self.progress_type = progress_type
        if status is not None:
            self.status = status

    @property
    def error_info(self):
        """Gets the error_info of this InfoForModifyValidationTaskOutput.  # noqa: E501


        :return: The error_info of this InfoForModifyValidationTaskOutput.  # noqa: E501
        :rtype: str
        """
        return self._error_info

    @error_info.setter
    def error_info(self, error_info):
        """Sets the error_info of this InfoForModifyValidationTaskOutput.


        :param error_info: The error_info of this InfoForModifyValidationTaskOutput.  # noqa: E501
        :type: str
        """

        self._error_info = error_info

    @property
    def name_cn(self):
        """Gets the name_cn of this InfoForModifyValidationTaskOutput.  # noqa: E501


        :return: The name_cn of this InfoForModifyValidationTaskOutput.  # noqa: E501
        :rtype: str
        """
        return self._name_cn

    @name_cn.setter
    def name_cn(self, name_cn):
        """Sets the name_cn of this InfoForModifyValidationTaskOutput.


        :param name_cn: The name_cn of this InfoForModifyValidationTaskOutput.  # noqa: E501
        :type: str
        """

        self._name_cn = name_cn

    @property
    def progress_type(self):
        """Gets the progress_type of this InfoForModifyValidationTaskOutput.  # noqa: E501


        :return: The progress_type of this InfoForModifyValidationTaskOutput.  # noqa: E501
        :rtype: str
        """
        return self._progress_type

    @progress_type.setter
    def progress_type(self, progress_type):
        """Sets the progress_type of this InfoForModifyValidationTaskOutput.


        :param progress_type: The progress_type of this InfoForModifyValidationTaskOutput.  # noqa: E501
        :type: str
        """

        self._progress_type = progress_type

    @property
    def status(self):
        """Gets the status of this InfoForModifyValidationTaskOutput.  # noqa: E501


        :return: The status of this InfoForModifyValidationTaskOutput.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InfoForModifyValidationTaskOutput.


        :param status: The status of this InfoForModifyValidationTaskOutput.  # noqa: E501
        :type: str
        """

        self._status = status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InfoForModifyValidationTaskOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InfoForModifyValidationTaskOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InfoForModifyValidationTaskOutput):
            return True

        return self.to_dict() != other.to_dict()
