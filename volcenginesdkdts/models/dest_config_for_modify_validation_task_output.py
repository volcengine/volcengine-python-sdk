# coding: utf-8

"""
    dts

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class DestConfigForModifyValidationTaskOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'builtin_kafka_settings': 'BuiltinKafkaSettingsForModifyValidationTaskOutput',
        'data_source_id': 'str',
        'ecs_elastic_search_settings': 'ECSElasticSearchSettingsForModifyValidationTaskOutput',
        'ecs_kafka_settings': 'ECSKafkaSettingsForModifyValidationTaskOutput',
        'ecs_mongo_settings': 'ECSMongoSettingsForModifyValidationTaskOutput',
        'ecsmy_sql_settings': 'ECSMySQLSettingsForModifyValidationTaskOutput',
        'ecs_postgre_sql_settings': 'ECSPostgreSQLSettingsForModifyValidationTaskOutput',
        'ecs_redis_settings': 'ECSRedisSettingsForModifyValidationTaskOutput',
        'endpoint_type': 'str',
        'express_elastic_search_settings': 'ExpressElasticSearchSettingsForModifyValidationTaskOutput',
        'express_kafka_settings': 'ExpressKafkaSettingsForModifyValidationTaskOutput',
        'express_mssql_settings': 'ExpressMSSQLSettingsForModifyValidationTaskOutput',
        'express_mongo_settings': 'ExpressMongoSettingsForModifyValidationTaskOutput',
        'express_my_sql_settings': 'ExpressMySQLSettingsForModifyValidationTaskOutput',
        'express_postgre_sql_settings': 'ExpressPostgreSQLSettingsForModifyValidationTaskOutput',
        'express_redis_settings': 'ExpressRedisSettingsForModifyValidationTaskOutput',
        'public_elastic_search_settings': 'PublicElasticSearchSettingsForModifyValidationTaskOutput',
        'public_mssql_settings': 'str',
        'public_mongo_settings': 'PublicMongoSettingsForModifyValidationTaskOutput',
        'public_my_sql_settings': 'PublicMySQLSettingsForModifyValidationTaskOutput',
        'public_postgre_sql_settings': 'PublicPostgreSQLSettingsForModifyValidationTaskOutput',
        'public_redis_settings': 'PublicRedisSettingsForModifyValidationTaskOutput',
        'volc_elastic_search_settings': 'VolcElasticSearchSettingsForModifyValidationTaskOutput',
        'volc_kafka_settings': 'VolcKafkaSettingsForModifyValidationTaskOutput',
        'volc_mssql_settings': 'VolcMSSQLSettingsForModifyValidationTaskOutput',
        'volc_mongo_settings': 'VolcMongoSettingsForModifyValidationTaskOutput',
        'volc_my_sql_settings': 'VolcMySQLSettingsForModifyValidationTaskOutput',
        'volc_postgre_sql_settings': 'VolcPostgreSQLSettingsForModifyValidationTaskOutput',
        'volc_redis_settings': 'VolcRedisSettingsForModifyValidationTaskOutput',
        'volc_rocket_mq_settings': 'VolcRocketMQSettingsForModifyValidationTaskOutput',
        'volcve_dbmy_sql_settings': 'VolcveDBMySQLSettingsForModifyValidationTaskOutput'
    }

    attribute_map = {
        'builtin_kafka_settings': 'BuiltinKafkaSettings',
        'data_source_id': 'DataSourceId',
        'ecs_elastic_search_settings': 'ECSElasticSearchSettings',
        'ecs_kafka_settings': 'ECSKafkaSettings',
        'ecs_mongo_settings': 'ECSMongoSettings',
        'ecsmy_sql_settings': 'ECSMySQLSettings',
        'ecs_postgre_sql_settings': 'ECSPostgreSQLSettings',
        'ecs_redis_settings': 'ECSRedisSettings',
        'endpoint_type': 'EndpointType',
        'express_elastic_search_settings': 'ExpressElasticSearchSettings',
        'express_kafka_settings': 'ExpressKafkaSettings',
        'express_mssql_settings': 'ExpressMSSQLSettings',
        'express_mongo_settings': 'ExpressMongoSettings',
        'express_my_sql_settings': 'ExpressMySQLSettings',
        'express_postgre_sql_settings': 'ExpressPostgreSQLSettings',
        'express_redis_settings': 'ExpressRedisSettings',
        'public_elastic_search_settings': 'PublicElasticSearchSettings',
        'public_mssql_settings': 'PublicMSSQLSettings',
        'public_mongo_settings': 'PublicMongoSettings',
        'public_my_sql_settings': 'PublicMySQLSettings',
        'public_postgre_sql_settings': 'PublicPostgreSQLSettings',
        'public_redis_settings': 'PublicRedisSettings',
        'volc_elastic_search_settings': 'VolcElasticSearchSettings',
        'volc_kafka_settings': 'VolcKafkaSettings',
        'volc_mssql_settings': 'VolcMSSQLSettings',
        'volc_mongo_settings': 'VolcMongoSettings',
        'volc_my_sql_settings': 'VolcMySQLSettings',
        'volc_postgre_sql_settings': 'VolcPostgreSQLSettings',
        'volc_redis_settings': 'VolcRedisSettings',
        'volc_rocket_mq_settings': 'VolcRocketMQSettings',
        'volcve_dbmy_sql_settings': 'VolcveDBMySQLSettings'
    }

    def __init__(self, builtin_kafka_settings=None, data_source_id=None, ecs_elastic_search_settings=None, ecs_kafka_settings=None, ecs_mongo_settings=None, ecsmy_sql_settings=None, ecs_postgre_sql_settings=None, ecs_redis_settings=None, endpoint_type=None, express_elastic_search_settings=None, express_kafka_settings=None, express_mssql_settings=None, express_mongo_settings=None, express_my_sql_settings=None, express_postgre_sql_settings=None, express_redis_settings=None, public_elastic_search_settings=None, public_mssql_settings=None, public_mongo_settings=None, public_my_sql_settings=None, public_postgre_sql_settings=None, public_redis_settings=None, volc_elastic_search_settings=None, volc_kafka_settings=None, volc_mssql_settings=None, volc_mongo_settings=None, volc_my_sql_settings=None, volc_postgre_sql_settings=None, volc_redis_settings=None, volc_rocket_mq_settings=None, volcve_dbmy_sql_settings=None, _configuration=None):  # noqa: E501
        """DestConfigForModifyValidationTaskOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._builtin_kafka_settings = None
        self._data_source_id = None
        self._ecs_elastic_search_settings = None
        self._ecs_kafka_settings = None
        self._ecs_mongo_settings = None
        self._ecsmy_sql_settings = None
        self._ecs_postgre_sql_settings = None
        self._ecs_redis_settings = None
        self._endpoint_type = None
        self._express_elastic_search_settings = None
        self._express_kafka_settings = None
        self._express_mssql_settings = None
        self._express_mongo_settings = None
        self._express_my_sql_settings = None
        self._express_postgre_sql_settings = None
        self._express_redis_settings = None
        self._public_elastic_search_settings = None
        self._public_mssql_settings = None
        self._public_mongo_settings = None
        self._public_my_sql_settings = None
        self._public_postgre_sql_settings = None
        self._public_redis_settings = None
        self._volc_elastic_search_settings = None
        self._volc_kafka_settings = None
        self._volc_mssql_settings = None
        self._volc_mongo_settings = None
        self._volc_my_sql_settings = None
        self._volc_postgre_sql_settings = None
        self._volc_redis_settings = None
        self._volc_rocket_mq_settings = None
        self._volcve_dbmy_sql_settings = None
        self.discriminator = None

        if builtin_kafka_settings is not None:
            self.builtin_kafka_settings = builtin_kafka_settings
        if data_source_id is not None:
            self.data_source_id = data_source_id
        if ecs_elastic_search_settings is not None:
            self.ecs_elastic_search_settings = ecs_elastic_search_settings
        if ecs_kafka_settings is not None:
            self.ecs_kafka_settings = ecs_kafka_settings
        if ecs_mongo_settings is not None:
            self.ecs_mongo_settings = ecs_mongo_settings
        if ecsmy_sql_settings is not None:
            self.ecsmy_sql_settings = ecsmy_sql_settings
        if ecs_postgre_sql_settings is not None:
            self.ecs_postgre_sql_settings = ecs_postgre_sql_settings
        if ecs_redis_settings is not None:
            self.ecs_redis_settings = ecs_redis_settings
        if endpoint_type is not None:
            self.endpoint_type = endpoint_type
        if express_elastic_search_settings is not None:
            self.express_elastic_search_settings = express_elastic_search_settings
        if express_kafka_settings is not None:
            self.express_kafka_settings = express_kafka_settings
        if express_mssql_settings is not None:
            self.express_mssql_settings = express_mssql_settings
        if express_mongo_settings is not None:
            self.express_mongo_settings = express_mongo_settings
        if express_my_sql_settings is not None:
            self.express_my_sql_settings = express_my_sql_settings
        if express_postgre_sql_settings is not None:
            self.express_postgre_sql_settings = express_postgre_sql_settings
        if express_redis_settings is not None:
            self.express_redis_settings = express_redis_settings
        if public_elastic_search_settings is not None:
            self.public_elastic_search_settings = public_elastic_search_settings
        if public_mssql_settings is not None:
            self.public_mssql_settings = public_mssql_settings
        if public_mongo_settings is not None:
            self.public_mongo_settings = public_mongo_settings
        if public_my_sql_settings is not None:
            self.public_my_sql_settings = public_my_sql_settings
        if public_postgre_sql_settings is not None:
            self.public_postgre_sql_settings = public_postgre_sql_settings
        if public_redis_settings is not None:
            self.public_redis_settings = public_redis_settings
        if volc_elastic_search_settings is not None:
            self.volc_elastic_search_settings = volc_elastic_search_settings
        if volc_kafka_settings is not None:
            self.volc_kafka_settings = volc_kafka_settings
        if volc_mssql_settings is not None:
            self.volc_mssql_settings = volc_mssql_settings
        if volc_mongo_settings is not None:
            self.volc_mongo_settings = volc_mongo_settings
        if volc_my_sql_settings is not None:
            self.volc_my_sql_settings = volc_my_sql_settings
        if volc_postgre_sql_settings is not None:
            self.volc_postgre_sql_settings = volc_postgre_sql_settings
        if volc_redis_settings is not None:
            self.volc_redis_settings = volc_redis_settings
        if volc_rocket_mq_settings is not None:
            self.volc_rocket_mq_settings = volc_rocket_mq_settings
        if volcve_dbmy_sql_settings is not None:
            self.volcve_dbmy_sql_settings = volcve_dbmy_sql_settings

    @property
    def builtin_kafka_settings(self):
        """Gets the builtin_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The builtin_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: BuiltinKafkaSettingsForModifyValidationTaskOutput
        """
        return self._builtin_kafka_settings

    @builtin_kafka_settings.setter
    def builtin_kafka_settings(self, builtin_kafka_settings):
        """Sets the builtin_kafka_settings of this DestConfigForModifyValidationTaskOutput.


        :param builtin_kafka_settings: The builtin_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: BuiltinKafkaSettingsForModifyValidationTaskOutput
        """

        self._builtin_kafka_settings = builtin_kafka_settings

    @property
    def data_source_id(self):
        """Gets the data_source_id of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The data_source_id of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: str
        """
        return self._data_source_id

    @data_source_id.setter
    def data_source_id(self, data_source_id):
        """Sets the data_source_id of this DestConfigForModifyValidationTaskOutput.


        :param data_source_id: The data_source_id of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: str
        """

        self._data_source_id = data_source_id

    @property
    def ecs_elastic_search_settings(self):
        """Gets the ecs_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The ecs_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ECSElasticSearchSettingsForModifyValidationTaskOutput
        """
        return self._ecs_elastic_search_settings

    @ecs_elastic_search_settings.setter
    def ecs_elastic_search_settings(self, ecs_elastic_search_settings):
        """Sets the ecs_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.


        :param ecs_elastic_search_settings: The ecs_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ECSElasticSearchSettingsForModifyValidationTaskOutput
        """

        self._ecs_elastic_search_settings = ecs_elastic_search_settings

    @property
    def ecs_kafka_settings(self):
        """Gets the ecs_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The ecs_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ECSKafkaSettingsForModifyValidationTaskOutput
        """
        return self._ecs_kafka_settings

    @ecs_kafka_settings.setter
    def ecs_kafka_settings(self, ecs_kafka_settings):
        """Sets the ecs_kafka_settings of this DestConfigForModifyValidationTaskOutput.


        :param ecs_kafka_settings: The ecs_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ECSKafkaSettingsForModifyValidationTaskOutput
        """

        self._ecs_kafka_settings = ecs_kafka_settings

    @property
    def ecs_mongo_settings(self):
        """Gets the ecs_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The ecs_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ECSMongoSettingsForModifyValidationTaskOutput
        """
        return self._ecs_mongo_settings

    @ecs_mongo_settings.setter
    def ecs_mongo_settings(self, ecs_mongo_settings):
        """Sets the ecs_mongo_settings of this DestConfigForModifyValidationTaskOutput.


        :param ecs_mongo_settings: The ecs_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ECSMongoSettingsForModifyValidationTaskOutput
        """

        self._ecs_mongo_settings = ecs_mongo_settings

    @property
    def ecsmy_sql_settings(self):
        """Gets the ecsmy_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The ecsmy_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ECSMySQLSettingsForModifyValidationTaskOutput
        """
        return self._ecsmy_sql_settings

    @ecsmy_sql_settings.setter
    def ecsmy_sql_settings(self, ecsmy_sql_settings):
        """Sets the ecsmy_sql_settings of this DestConfigForModifyValidationTaskOutput.


        :param ecsmy_sql_settings: The ecsmy_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ECSMySQLSettingsForModifyValidationTaskOutput
        """

        self._ecsmy_sql_settings = ecsmy_sql_settings

    @property
    def ecs_postgre_sql_settings(self):
        """Gets the ecs_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The ecs_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ECSPostgreSQLSettingsForModifyValidationTaskOutput
        """
        return self._ecs_postgre_sql_settings

    @ecs_postgre_sql_settings.setter
    def ecs_postgre_sql_settings(self, ecs_postgre_sql_settings):
        """Sets the ecs_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.


        :param ecs_postgre_sql_settings: The ecs_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ECSPostgreSQLSettingsForModifyValidationTaskOutput
        """

        self._ecs_postgre_sql_settings = ecs_postgre_sql_settings

    @property
    def ecs_redis_settings(self):
        """Gets the ecs_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The ecs_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ECSRedisSettingsForModifyValidationTaskOutput
        """
        return self._ecs_redis_settings

    @ecs_redis_settings.setter
    def ecs_redis_settings(self, ecs_redis_settings):
        """Sets the ecs_redis_settings of this DestConfigForModifyValidationTaskOutput.


        :param ecs_redis_settings: The ecs_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ECSRedisSettingsForModifyValidationTaskOutput
        """

        self._ecs_redis_settings = ecs_redis_settings

    @property
    def endpoint_type(self):
        """Gets the endpoint_type of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The endpoint_type of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: str
        """
        return self._endpoint_type

    @endpoint_type.setter
    def endpoint_type(self, endpoint_type):
        """Sets the endpoint_type of this DestConfigForModifyValidationTaskOutput.


        :param endpoint_type: The endpoint_type of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: str
        """

        self._endpoint_type = endpoint_type

    @property
    def express_elastic_search_settings(self):
        """Gets the express_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The express_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ExpressElasticSearchSettingsForModifyValidationTaskOutput
        """
        return self._express_elastic_search_settings

    @express_elastic_search_settings.setter
    def express_elastic_search_settings(self, express_elastic_search_settings):
        """Sets the express_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.


        :param express_elastic_search_settings: The express_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ExpressElasticSearchSettingsForModifyValidationTaskOutput
        """

        self._express_elastic_search_settings = express_elastic_search_settings

    @property
    def express_kafka_settings(self):
        """Gets the express_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The express_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ExpressKafkaSettingsForModifyValidationTaskOutput
        """
        return self._express_kafka_settings

    @express_kafka_settings.setter
    def express_kafka_settings(self, express_kafka_settings):
        """Sets the express_kafka_settings of this DestConfigForModifyValidationTaskOutput.


        :param express_kafka_settings: The express_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ExpressKafkaSettingsForModifyValidationTaskOutput
        """

        self._express_kafka_settings = express_kafka_settings

    @property
    def express_mssql_settings(self):
        """Gets the express_mssql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The express_mssql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ExpressMSSQLSettingsForModifyValidationTaskOutput
        """
        return self._express_mssql_settings

    @express_mssql_settings.setter
    def express_mssql_settings(self, express_mssql_settings):
        """Sets the express_mssql_settings of this DestConfigForModifyValidationTaskOutput.


        :param express_mssql_settings: The express_mssql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ExpressMSSQLSettingsForModifyValidationTaskOutput
        """

        self._express_mssql_settings = express_mssql_settings

    @property
    def express_mongo_settings(self):
        """Gets the express_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The express_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ExpressMongoSettingsForModifyValidationTaskOutput
        """
        return self._express_mongo_settings

    @express_mongo_settings.setter
    def express_mongo_settings(self, express_mongo_settings):
        """Sets the express_mongo_settings of this DestConfigForModifyValidationTaskOutput.


        :param express_mongo_settings: The express_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ExpressMongoSettingsForModifyValidationTaskOutput
        """

        self._express_mongo_settings = express_mongo_settings

    @property
    def express_my_sql_settings(self):
        """Gets the express_my_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The express_my_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ExpressMySQLSettingsForModifyValidationTaskOutput
        """
        return self._express_my_sql_settings

    @express_my_sql_settings.setter
    def express_my_sql_settings(self, express_my_sql_settings):
        """Sets the express_my_sql_settings of this DestConfigForModifyValidationTaskOutput.


        :param express_my_sql_settings: The express_my_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ExpressMySQLSettingsForModifyValidationTaskOutput
        """

        self._express_my_sql_settings = express_my_sql_settings

    @property
    def express_postgre_sql_settings(self):
        """Gets the express_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The express_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ExpressPostgreSQLSettingsForModifyValidationTaskOutput
        """
        return self._express_postgre_sql_settings

    @express_postgre_sql_settings.setter
    def express_postgre_sql_settings(self, express_postgre_sql_settings):
        """Sets the express_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.


        :param express_postgre_sql_settings: The express_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ExpressPostgreSQLSettingsForModifyValidationTaskOutput
        """

        self._express_postgre_sql_settings = express_postgre_sql_settings

    @property
    def express_redis_settings(self):
        """Gets the express_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The express_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: ExpressRedisSettingsForModifyValidationTaskOutput
        """
        return self._express_redis_settings

    @express_redis_settings.setter
    def express_redis_settings(self, express_redis_settings):
        """Sets the express_redis_settings of this DestConfigForModifyValidationTaskOutput.


        :param express_redis_settings: The express_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: ExpressRedisSettingsForModifyValidationTaskOutput
        """

        self._express_redis_settings = express_redis_settings

    @property
    def public_elastic_search_settings(self):
        """Gets the public_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The public_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: PublicElasticSearchSettingsForModifyValidationTaskOutput
        """
        return self._public_elastic_search_settings

    @public_elastic_search_settings.setter
    def public_elastic_search_settings(self, public_elastic_search_settings):
        """Sets the public_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.


        :param public_elastic_search_settings: The public_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: PublicElasticSearchSettingsForModifyValidationTaskOutput
        """

        self._public_elastic_search_settings = public_elastic_search_settings

    @property
    def public_mssql_settings(self):
        """Gets the public_mssql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The public_mssql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: str
        """
        return self._public_mssql_settings

    @public_mssql_settings.setter
    def public_mssql_settings(self, public_mssql_settings):
        """Sets the public_mssql_settings of this DestConfigForModifyValidationTaskOutput.


        :param public_mssql_settings: The public_mssql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: str
        """

        self._public_mssql_settings = public_mssql_settings

    @property
    def public_mongo_settings(self):
        """Gets the public_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The public_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: PublicMongoSettingsForModifyValidationTaskOutput
        """
        return self._public_mongo_settings

    @public_mongo_settings.setter
    def public_mongo_settings(self, public_mongo_settings):
        """Sets the public_mongo_settings of this DestConfigForModifyValidationTaskOutput.


        :param public_mongo_settings: The public_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: PublicMongoSettingsForModifyValidationTaskOutput
        """

        self._public_mongo_settings = public_mongo_settings

    @property
    def public_my_sql_settings(self):
        """Gets the public_my_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The public_my_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: PublicMySQLSettingsForModifyValidationTaskOutput
        """
        return self._public_my_sql_settings

    @public_my_sql_settings.setter
    def public_my_sql_settings(self, public_my_sql_settings):
        """Sets the public_my_sql_settings of this DestConfigForModifyValidationTaskOutput.


        :param public_my_sql_settings: The public_my_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: PublicMySQLSettingsForModifyValidationTaskOutput
        """

        self._public_my_sql_settings = public_my_sql_settings

    @property
    def public_postgre_sql_settings(self):
        """Gets the public_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The public_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: PublicPostgreSQLSettingsForModifyValidationTaskOutput
        """
        return self._public_postgre_sql_settings

    @public_postgre_sql_settings.setter
    def public_postgre_sql_settings(self, public_postgre_sql_settings):
        """Sets the public_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.


        :param public_postgre_sql_settings: The public_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: PublicPostgreSQLSettingsForModifyValidationTaskOutput
        """

        self._public_postgre_sql_settings = public_postgre_sql_settings

    @property
    def public_redis_settings(self):
        """Gets the public_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The public_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: PublicRedisSettingsForModifyValidationTaskOutput
        """
        return self._public_redis_settings

    @public_redis_settings.setter
    def public_redis_settings(self, public_redis_settings):
        """Sets the public_redis_settings of this DestConfigForModifyValidationTaskOutput.


        :param public_redis_settings: The public_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: PublicRedisSettingsForModifyValidationTaskOutput
        """

        self._public_redis_settings = public_redis_settings

    @property
    def volc_elastic_search_settings(self):
        """Gets the volc_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The volc_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: VolcElasticSearchSettingsForModifyValidationTaskOutput
        """
        return self._volc_elastic_search_settings

    @volc_elastic_search_settings.setter
    def volc_elastic_search_settings(self, volc_elastic_search_settings):
        """Sets the volc_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.


        :param volc_elastic_search_settings: The volc_elastic_search_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: VolcElasticSearchSettingsForModifyValidationTaskOutput
        """

        self._volc_elastic_search_settings = volc_elastic_search_settings

    @property
    def volc_kafka_settings(self):
        """Gets the volc_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The volc_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: VolcKafkaSettingsForModifyValidationTaskOutput
        """
        return self._volc_kafka_settings

    @volc_kafka_settings.setter
    def volc_kafka_settings(self, volc_kafka_settings):
        """Sets the volc_kafka_settings of this DestConfigForModifyValidationTaskOutput.


        :param volc_kafka_settings: The volc_kafka_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: VolcKafkaSettingsForModifyValidationTaskOutput
        """

        self._volc_kafka_settings = volc_kafka_settings

    @property
    def volc_mssql_settings(self):
        """Gets the volc_mssql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The volc_mssql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: VolcMSSQLSettingsForModifyValidationTaskOutput
        """
        return self._volc_mssql_settings

    @volc_mssql_settings.setter
    def volc_mssql_settings(self, volc_mssql_settings):
        """Sets the volc_mssql_settings of this DestConfigForModifyValidationTaskOutput.


        :param volc_mssql_settings: The volc_mssql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: VolcMSSQLSettingsForModifyValidationTaskOutput
        """

        self._volc_mssql_settings = volc_mssql_settings

    @property
    def volc_mongo_settings(self):
        """Gets the volc_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The volc_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: VolcMongoSettingsForModifyValidationTaskOutput
        """
        return self._volc_mongo_settings

    @volc_mongo_settings.setter
    def volc_mongo_settings(self, volc_mongo_settings):
        """Sets the volc_mongo_settings of this DestConfigForModifyValidationTaskOutput.


        :param volc_mongo_settings: The volc_mongo_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: VolcMongoSettingsForModifyValidationTaskOutput
        """

        self._volc_mongo_settings = volc_mongo_settings

    @property
    def volc_my_sql_settings(self):
        """Gets the volc_my_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The volc_my_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: VolcMySQLSettingsForModifyValidationTaskOutput
        """
        return self._volc_my_sql_settings

    @volc_my_sql_settings.setter
    def volc_my_sql_settings(self, volc_my_sql_settings):
        """Sets the volc_my_sql_settings of this DestConfigForModifyValidationTaskOutput.


        :param volc_my_sql_settings: The volc_my_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: VolcMySQLSettingsForModifyValidationTaskOutput
        """

        self._volc_my_sql_settings = volc_my_sql_settings

    @property
    def volc_postgre_sql_settings(self):
        """Gets the volc_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The volc_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: VolcPostgreSQLSettingsForModifyValidationTaskOutput
        """
        return self._volc_postgre_sql_settings

    @volc_postgre_sql_settings.setter
    def volc_postgre_sql_settings(self, volc_postgre_sql_settings):
        """Sets the volc_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.


        :param volc_postgre_sql_settings: The volc_postgre_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: VolcPostgreSQLSettingsForModifyValidationTaskOutput
        """

        self._volc_postgre_sql_settings = volc_postgre_sql_settings

    @property
    def volc_redis_settings(self):
        """Gets the volc_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The volc_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: VolcRedisSettingsForModifyValidationTaskOutput
        """
        return self._volc_redis_settings

    @volc_redis_settings.setter
    def volc_redis_settings(self, volc_redis_settings):
        """Sets the volc_redis_settings of this DestConfigForModifyValidationTaskOutput.


        :param volc_redis_settings: The volc_redis_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: VolcRedisSettingsForModifyValidationTaskOutput
        """

        self._volc_redis_settings = volc_redis_settings

    @property
    def volc_rocket_mq_settings(self):
        """Gets the volc_rocket_mq_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The volc_rocket_mq_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: VolcRocketMQSettingsForModifyValidationTaskOutput
        """
        return self._volc_rocket_mq_settings

    @volc_rocket_mq_settings.setter
    def volc_rocket_mq_settings(self, volc_rocket_mq_settings):
        """Sets the volc_rocket_mq_settings of this DestConfigForModifyValidationTaskOutput.


        :param volc_rocket_mq_settings: The volc_rocket_mq_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: VolcRocketMQSettingsForModifyValidationTaskOutput
        """

        self._volc_rocket_mq_settings = volc_rocket_mq_settings

    @property
    def volcve_dbmy_sql_settings(self):
        """Gets the volcve_dbmy_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501


        :return: The volcve_dbmy_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :rtype: VolcveDBMySQLSettingsForModifyValidationTaskOutput
        """
        return self._volcve_dbmy_sql_settings

    @volcve_dbmy_sql_settings.setter
    def volcve_dbmy_sql_settings(self, volcve_dbmy_sql_settings):
        """Sets the volcve_dbmy_sql_settings of this DestConfigForModifyValidationTaskOutput.


        :param volcve_dbmy_sql_settings: The volcve_dbmy_sql_settings of this DestConfigForModifyValidationTaskOutput.  # noqa: E501
        :type: VolcveDBMySQLSettingsForModifyValidationTaskOutput
        """

        self._volcve_dbmy_sql_settings = volcve_dbmy_sql_settings

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DestConfigForModifyValidationTaskOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestConfigForModifyValidationTaskOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DestConfigForModifyValidationTaskOutput):
            return True

        return self.to_dict() != other.to_dict()
