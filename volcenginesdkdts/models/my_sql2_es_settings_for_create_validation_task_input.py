# coding: utf-8

"""
    dts

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class MySQL2ESSettingsForCreateValidationTaskInput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'es_extra_args': 'ESExtraArgsForCreateValidationTaskInput',
        'etl_settings': 'ETLSettingsForCreateValidationTaskInput',
        'error_behavior_settings': 'ErrorBehaviorSettingsForCreateValidationTaskInput',
        'full_transmission_settings': 'FullTransmissionSettingsForCreateValidationTaskInput',
        'incr_transmission_settings': 'IncrTransmissionSettingsForCreateValidationTaskInput',
        'meta_transmission_settings': 'MetaTransmissionSettingsForCreateValidationTaskInput',
        'object_mappings': 'list[ObjectMappingForCreateValidationTaskInput]',
        'policy_for_primary_key_conflict': 'str'
    }

    attribute_map = {
        'es_extra_args': 'ESExtraArgs',
        'etl_settings': 'ETLSettings',
        'error_behavior_settings': 'ErrorBehaviorSettings',
        'full_transmission_settings': 'FullTransmissionSettings',
        'incr_transmission_settings': 'IncrTransmissionSettings',
        'meta_transmission_settings': 'MetaTransmissionSettings',
        'object_mappings': 'ObjectMappings',
        'policy_for_primary_key_conflict': 'PolicyForPrimaryKeyConflict'
    }

    def __init__(self, es_extra_args=None, etl_settings=None, error_behavior_settings=None, full_transmission_settings=None, incr_transmission_settings=None, meta_transmission_settings=None, object_mappings=None, policy_for_primary_key_conflict=None, _configuration=None):  # noqa: E501
        """MySQL2ESSettingsForCreateValidationTaskInput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._es_extra_args = None
        self._etl_settings = None
        self._error_behavior_settings = None
        self._full_transmission_settings = None
        self._incr_transmission_settings = None
        self._meta_transmission_settings = None
        self._object_mappings = None
        self._policy_for_primary_key_conflict = None
        self.discriminator = None

        if es_extra_args is not None:
            self.es_extra_args = es_extra_args
        if etl_settings is not None:
            self.etl_settings = etl_settings
        if error_behavior_settings is not None:
            self.error_behavior_settings = error_behavior_settings
        if full_transmission_settings is not None:
            self.full_transmission_settings = full_transmission_settings
        if incr_transmission_settings is not None:
            self.incr_transmission_settings = incr_transmission_settings
        if meta_transmission_settings is not None:
            self.meta_transmission_settings = meta_transmission_settings
        if object_mappings is not None:
            self.object_mappings = object_mappings
        if policy_for_primary_key_conflict is not None:
            self.policy_for_primary_key_conflict = policy_for_primary_key_conflict

    @property
    def es_extra_args(self):
        """Gets the es_extra_args of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501


        :return: The es_extra_args of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :rtype: ESExtraArgsForCreateValidationTaskInput
        """
        return self._es_extra_args

    @es_extra_args.setter
    def es_extra_args(self, es_extra_args):
        """Sets the es_extra_args of this MySQL2ESSettingsForCreateValidationTaskInput.


        :param es_extra_args: The es_extra_args of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :type: ESExtraArgsForCreateValidationTaskInput
        """

        self._es_extra_args = es_extra_args

    @property
    def etl_settings(self):
        """Gets the etl_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501


        :return: The etl_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :rtype: ETLSettingsForCreateValidationTaskInput
        """
        return self._etl_settings

    @etl_settings.setter
    def etl_settings(self, etl_settings):
        """Sets the etl_settings of this MySQL2ESSettingsForCreateValidationTaskInput.


        :param etl_settings: The etl_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :type: ETLSettingsForCreateValidationTaskInput
        """

        self._etl_settings = etl_settings

    @property
    def error_behavior_settings(self):
        """Gets the error_behavior_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501


        :return: The error_behavior_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :rtype: ErrorBehaviorSettingsForCreateValidationTaskInput
        """
        return self._error_behavior_settings

    @error_behavior_settings.setter
    def error_behavior_settings(self, error_behavior_settings):
        """Sets the error_behavior_settings of this MySQL2ESSettingsForCreateValidationTaskInput.


        :param error_behavior_settings: The error_behavior_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :type: ErrorBehaviorSettingsForCreateValidationTaskInput
        """

        self._error_behavior_settings = error_behavior_settings

    @property
    def full_transmission_settings(self):
        """Gets the full_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501


        :return: The full_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :rtype: FullTransmissionSettingsForCreateValidationTaskInput
        """
        return self._full_transmission_settings

    @full_transmission_settings.setter
    def full_transmission_settings(self, full_transmission_settings):
        """Sets the full_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.


        :param full_transmission_settings: The full_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :type: FullTransmissionSettingsForCreateValidationTaskInput
        """

        self._full_transmission_settings = full_transmission_settings

    @property
    def incr_transmission_settings(self):
        """Gets the incr_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501


        :return: The incr_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :rtype: IncrTransmissionSettingsForCreateValidationTaskInput
        """
        return self._incr_transmission_settings

    @incr_transmission_settings.setter
    def incr_transmission_settings(self, incr_transmission_settings):
        """Sets the incr_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.


        :param incr_transmission_settings: The incr_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :type: IncrTransmissionSettingsForCreateValidationTaskInput
        """

        self._incr_transmission_settings = incr_transmission_settings

    @property
    def meta_transmission_settings(self):
        """Gets the meta_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501


        :return: The meta_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :rtype: MetaTransmissionSettingsForCreateValidationTaskInput
        """
        return self._meta_transmission_settings

    @meta_transmission_settings.setter
    def meta_transmission_settings(self, meta_transmission_settings):
        """Sets the meta_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.


        :param meta_transmission_settings: The meta_transmission_settings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :type: MetaTransmissionSettingsForCreateValidationTaskInput
        """

        self._meta_transmission_settings = meta_transmission_settings

    @property
    def object_mappings(self):
        """Gets the object_mappings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501


        :return: The object_mappings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :rtype: list[ObjectMappingForCreateValidationTaskInput]
        """
        return self._object_mappings

    @object_mappings.setter
    def object_mappings(self, object_mappings):
        """Sets the object_mappings of this MySQL2ESSettingsForCreateValidationTaskInput.


        :param object_mappings: The object_mappings of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :type: list[ObjectMappingForCreateValidationTaskInput]
        """

        self._object_mappings = object_mappings

    @property
    def policy_for_primary_key_conflict(self):
        """Gets the policy_for_primary_key_conflict of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501


        :return: The policy_for_primary_key_conflict of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :rtype: str
        """
        return self._policy_for_primary_key_conflict

    @policy_for_primary_key_conflict.setter
    def policy_for_primary_key_conflict(self, policy_for_primary_key_conflict):
        """Sets the policy_for_primary_key_conflict of this MySQL2ESSettingsForCreateValidationTaskInput.


        :param policy_for_primary_key_conflict: The policy_for_primary_key_conflict of this MySQL2ESSettingsForCreateValidationTaskInput.  # noqa: E501
        :type: str
        """

        self._policy_for_primary_key_conflict = policy_for_primary_key_conflict

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MySQL2ESSettingsForCreateValidationTaskInput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MySQL2ESSettingsForCreateValidationTaskInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, MySQL2ESSettingsForCreateValidationTaskInput):
            return True

        return self.to_dict() != other.to_dict()
