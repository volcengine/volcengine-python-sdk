# coding: utf-8

"""
    bmq

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class DescribeInstanceResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'billing_type': 'str',
        'create_time': 'str',
        'description': 'str',
        'endpoints': 'EndpointsForDescribeInstanceOutput',
        'expiration_time': 'str',
        'group_limit': 'int',
        'instance_id': 'str',
        'message_retention': 'int',
        'name': 'str',
        'partition_limit': 'int',
        'project_name': 'str',
        'region_id': 'str',
        'resource_tags': 'list[ResourceTagForDescribeInstanceOutput]',
        'resources': 'ResourcesForDescribeInstanceOutput',
        'security_group_id_list': 'list[str]',
        'specification': 'str',
        'status': 'str',
        'subnet_id_list': 'list[str]',
        'tags': 'list[TagForDescribeInstanceOutput]',
        'topic_limit': 'int',
        'vpc_id': 'str',
        'zone_id_list': 'list[str]'
    }

    attribute_map = {
        'billing_type': 'BillingType',
        'create_time': 'CreateTime',
        'description': 'Description',
        'endpoints': 'Endpoints',
        'expiration_time': 'ExpirationTime',
        'group_limit': 'GroupLimit',
        'instance_id': 'InstanceId',
        'message_retention': 'MessageRetention',
        'name': 'Name',
        'partition_limit': 'PartitionLimit',
        'project_name': 'ProjectName',
        'region_id': 'RegionId',
        'resource_tags': 'ResourceTags',
        'resources': 'Resources',
        'security_group_id_list': 'SecurityGroupIdList',
        'specification': 'Specification',
        'status': 'Status',
        'subnet_id_list': 'SubnetIdList',
        'tags': 'Tags',
        'topic_limit': 'TopicLimit',
        'vpc_id': 'VpcId',
        'zone_id_list': 'ZoneIdList'
    }

    def __init__(self, billing_type=None, create_time=None, description=None, endpoints=None, expiration_time=None, group_limit=None, instance_id=None, message_retention=None, name=None, partition_limit=None, project_name=None, region_id=None, resource_tags=None, resources=None, security_group_id_list=None, specification=None, status=None, subnet_id_list=None, tags=None, topic_limit=None, vpc_id=None, zone_id_list=None, _configuration=None):  # noqa: E501
        """DescribeInstanceResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._billing_type = None
        self._create_time = None
        self._description = None
        self._endpoints = None
        self._expiration_time = None
        self._group_limit = None
        self._instance_id = None
        self._message_retention = None
        self._name = None
        self._partition_limit = None
        self._project_name = None
        self._region_id = None
        self._resource_tags = None
        self._resources = None
        self._security_group_id_list = None
        self._specification = None
        self._status = None
        self._subnet_id_list = None
        self._tags = None
        self._topic_limit = None
        self._vpc_id = None
        self._zone_id_list = None
        self.discriminator = None

        if billing_type is not None:
            self.billing_type = billing_type
        if create_time is not None:
            self.create_time = create_time
        if description is not None:
            self.description = description
        if endpoints is not None:
            self.endpoints = endpoints
        if expiration_time is not None:
            self.expiration_time = expiration_time
        if group_limit is not None:
            self.group_limit = group_limit
        if instance_id is not None:
            self.instance_id = instance_id
        if message_retention is not None:
            self.message_retention = message_retention
        if name is not None:
            self.name = name
        if partition_limit is not None:
            self.partition_limit = partition_limit
        if project_name is not None:
            self.project_name = project_name
        if region_id is not None:
            self.region_id = region_id
        if resource_tags is not None:
            self.resource_tags = resource_tags
        if resources is not None:
            self.resources = resources
        if security_group_id_list is not None:
            self.security_group_id_list = security_group_id_list
        if specification is not None:
            self.specification = specification
        if status is not None:
            self.status = status
        if subnet_id_list is not None:
            self.subnet_id_list = subnet_id_list
        if tags is not None:
            self.tags = tags
        if topic_limit is not None:
            self.topic_limit = topic_limit
        if vpc_id is not None:
            self.vpc_id = vpc_id
        if zone_id_list is not None:
            self.zone_id_list = zone_id_list

    @property
    def billing_type(self):
        """Gets the billing_type of this DescribeInstanceResponse.  # noqa: E501


        :return: The billing_type of this DescribeInstanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._billing_type

    @billing_type.setter
    def billing_type(self, billing_type):
        """Sets the billing_type of this DescribeInstanceResponse.


        :param billing_type: The billing_type of this DescribeInstanceResponse.  # noqa: E501
        :type: str
        """

        self._billing_type = billing_type

    @property
    def create_time(self):
        """Gets the create_time of this DescribeInstanceResponse.  # noqa: E501


        :return: The create_time of this DescribeInstanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this DescribeInstanceResponse.


        :param create_time: The create_time of this DescribeInstanceResponse.  # noqa: E501
        :type: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this DescribeInstanceResponse.  # noqa: E501


        :return: The description of this DescribeInstanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeInstanceResponse.


        :param description: The description of this DescribeInstanceResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def endpoints(self):
        """Gets the endpoints of this DescribeInstanceResponse.  # noqa: E501


        :return: The endpoints of this DescribeInstanceResponse.  # noqa: E501
        :rtype: EndpointsForDescribeInstanceOutput
        """
        return self._endpoints

    @endpoints.setter
    def endpoints(self, endpoints):
        """Sets the endpoints of this DescribeInstanceResponse.


        :param endpoints: The endpoints of this DescribeInstanceResponse.  # noqa: E501
        :type: EndpointsForDescribeInstanceOutput
        """

        self._endpoints = endpoints

    @property
    def expiration_time(self):
        """Gets the expiration_time of this DescribeInstanceResponse.  # noqa: E501


        :return: The expiration_time of this DescribeInstanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this DescribeInstanceResponse.


        :param expiration_time: The expiration_time of this DescribeInstanceResponse.  # noqa: E501
        :type: str
        """

        self._expiration_time = expiration_time

    @property
    def group_limit(self):
        """Gets the group_limit of this DescribeInstanceResponse.  # noqa: E501


        :return: The group_limit of this DescribeInstanceResponse.  # noqa: E501
        :rtype: int
        """
        return self._group_limit

    @group_limit.setter
    def group_limit(self, group_limit):
        """Sets the group_limit of this DescribeInstanceResponse.


        :param group_limit: The group_limit of this DescribeInstanceResponse.  # noqa: E501
        :type: int
        """

        self._group_limit = group_limit

    @property
    def instance_id(self):
        """Gets the instance_id of this DescribeInstanceResponse.  # noqa: E501


        :return: The instance_id of this DescribeInstanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this DescribeInstanceResponse.


        :param instance_id: The instance_id of this DescribeInstanceResponse.  # noqa: E501
        :type: str
        """

        self._instance_id = instance_id

    @property
    def message_retention(self):
        """Gets the message_retention of this DescribeInstanceResponse.  # noqa: E501


        :return: The message_retention of this DescribeInstanceResponse.  # noqa: E501
        :rtype: int
        """
        return self._message_retention

    @message_retention.setter
    def message_retention(self, message_retention):
        """Sets the message_retention of this DescribeInstanceResponse.


        :param message_retention: The message_retention of this DescribeInstanceResponse.  # noqa: E501
        :type: int
        """

        self._message_retention = message_retention

    @property
    def name(self):
        """Gets the name of this DescribeInstanceResponse.  # noqa: E501


        :return: The name of this DescribeInstanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeInstanceResponse.


        :param name: The name of this DescribeInstanceResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def partition_limit(self):
        """Gets the partition_limit of this DescribeInstanceResponse.  # noqa: E501


        :return: The partition_limit of this DescribeInstanceResponse.  # noqa: E501
        :rtype: int
        """
        return self._partition_limit

    @partition_limit.setter
    def partition_limit(self, partition_limit):
        """Sets the partition_limit of this DescribeInstanceResponse.


        :param partition_limit: The partition_limit of this DescribeInstanceResponse.  # noqa: E501
        :type: int
        """

        self._partition_limit = partition_limit

    @property
    def project_name(self):
        """Gets the project_name of this DescribeInstanceResponse.  # noqa: E501


        :return: The project_name of this DescribeInstanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this DescribeInstanceResponse.


        :param project_name: The project_name of this DescribeInstanceResponse.  # noqa: E501
        :type: str
        """

        self._project_name = project_name

    @property
    def region_id(self):
        """Gets the region_id of this DescribeInstanceResponse.  # noqa: E501


        :return: The region_id of this DescribeInstanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._region_id

    @region_id.setter
    def region_id(self, region_id):
        """Sets the region_id of this DescribeInstanceResponse.


        :param region_id: The region_id of this DescribeInstanceResponse.  # noqa: E501
        :type: str
        """

        self._region_id = region_id

    @property
    def resource_tags(self):
        """Gets the resource_tags of this DescribeInstanceResponse.  # noqa: E501


        :return: The resource_tags of this DescribeInstanceResponse.  # noqa: E501
        :rtype: list[ResourceTagForDescribeInstanceOutput]
        """
        return self._resource_tags

    @resource_tags.setter
    def resource_tags(self, resource_tags):
        """Sets the resource_tags of this DescribeInstanceResponse.


        :param resource_tags: The resource_tags of this DescribeInstanceResponse.  # noqa: E501
        :type: list[ResourceTagForDescribeInstanceOutput]
        """

        self._resource_tags = resource_tags

    @property
    def resources(self):
        """Gets the resources of this DescribeInstanceResponse.  # noqa: E501


        :return: The resources of this DescribeInstanceResponse.  # noqa: E501
        :rtype: ResourcesForDescribeInstanceOutput
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this DescribeInstanceResponse.


        :param resources: The resources of this DescribeInstanceResponse.  # noqa: E501
        :type: ResourcesForDescribeInstanceOutput
        """

        self._resources = resources

    @property
    def security_group_id_list(self):
        """Gets the security_group_id_list of this DescribeInstanceResponse.  # noqa: E501


        :return: The security_group_id_list of this DescribeInstanceResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._security_group_id_list

    @security_group_id_list.setter
    def security_group_id_list(self, security_group_id_list):
        """Sets the security_group_id_list of this DescribeInstanceResponse.


        :param security_group_id_list: The security_group_id_list of this DescribeInstanceResponse.  # noqa: E501
        :type: list[str]
        """

        self._security_group_id_list = security_group_id_list

    @property
    def specification(self):
        """Gets the specification of this DescribeInstanceResponse.  # noqa: E501


        :return: The specification of this DescribeInstanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._specification

    @specification.setter
    def specification(self, specification):
        """Sets the specification of this DescribeInstanceResponse.


        :param specification: The specification of this DescribeInstanceResponse.  # noqa: E501
        :type: str
        """

        self._specification = specification

    @property
    def status(self):
        """Gets the status of this DescribeInstanceResponse.  # noqa: E501


        :return: The status of this DescribeInstanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeInstanceResponse.


        :param status: The status of this DescribeInstanceResponse.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def subnet_id_list(self):
        """Gets the subnet_id_list of this DescribeInstanceResponse.  # noqa: E501


        :return: The subnet_id_list of this DescribeInstanceResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._subnet_id_list

    @subnet_id_list.setter
    def subnet_id_list(self, subnet_id_list):
        """Sets the subnet_id_list of this DescribeInstanceResponse.


        :param subnet_id_list: The subnet_id_list of this DescribeInstanceResponse.  # noqa: E501
        :type: list[str]
        """

        self._subnet_id_list = subnet_id_list

    @property
    def tags(self):
        """Gets the tags of this DescribeInstanceResponse.  # noqa: E501


        :return: The tags of this DescribeInstanceResponse.  # noqa: E501
        :rtype: list[TagForDescribeInstanceOutput]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribeInstanceResponse.


        :param tags: The tags of this DescribeInstanceResponse.  # noqa: E501
        :type: list[TagForDescribeInstanceOutput]
        """

        self._tags = tags

    @property
    def topic_limit(self):
        """Gets the topic_limit of this DescribeInstanceResponse.  # noqa: E501


        :return: The topic_limit of this DescribeInstanceResponse.  # noqa: E501
        :rtype: int
        """
        return self._topic_limit

    @topic_limit.setter
    def topic_limit(self, topic_limit):
        """Sets the topic_limit of this DescribeInstanceResponse.


        :param topic_limit: The topic_limit of this DescribeInstanceResponse.  # noqa: E501
        :type: int
        """

        self._topic_limit = topic_limit

    @property
    def vpc_id(self):
        """Gets the vpc_id of this DescribeInstanceResponse.  # noqa: E501


        :return: The vpc_id of this DescribeInstanceResponse.  # noqa: E501
        :rtype: str
        """
        return self._vpc_id

    @vpc_id.setter
    def vpc_id(self, vpc_id):
        """Sets the vpc_id of this DescribeInstanceResponse.


        :param vpc_id: The vpc_id of this DescribeInstanceResponse.  # noqa: E501
        :type: str
        """

        self._vpc_id = vpc_id

    @property
    def zone_id_list(self):
        """Gets the zone_id_list of this DescribeInstanceResponse.  # noqa: E501


        :return: The zone_id_list of this DescribeInstanceResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._zone_id_list

    @zone_id_list.setter
    def zone_id_list(self, zone_id_list):
        """Sets the zone_id_list of this DescribeInstanceResponse.


        :param zone_id_list: The zone_id_list of this DescribeInstanceResponse.  # noqa: E501
        :type: list[str]
        """

        self._zone_id_list = zone_id_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DescribeInstanceResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DescribeInstanceResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DescribeInstanceResponse):
            return True

        return self.to_dict() != other.to_dict()
