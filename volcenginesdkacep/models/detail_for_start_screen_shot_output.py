# coding: utf-8

"""
    acep

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class DetailForStartScreenShotOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'download_url': 'str',
        'error_code': 'int',
        'error_msg': 'str',
        'expire_at': 'int',
        'height': 'int',
        'pod_id': 'str',
        'width': 'int'
    }

    attribute_map = {
        'download_url': 'DownloadUrl',
        'error_code': 'ErrorCode',
        'error_msg': 'ErrorMsg',
        'expire_at': 'ExpireAt',
        'height': 'Height',
        'pod_id': 'PodId',
        'width': 'Width'
    }

    def __init__(self, download_url=None, error_code=None, error_msg=None, expire_at=None, height=None, pod_id=None, width=None, _configuration=None):  # noqa: E501
        """DetailForStartScreenShotOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._download_url = None
        self._error_code = None
        self._error_msg = None
        self._expire_at = None
        self._height = None
        self._pod_id = None
        self._width = None
        self.discriminator = None

        if download_url is not None:
            self.download_url = download_url
        if error_code is not None:
            self.error_code = error_code
        if error_msg is not None:
            self.error_msg = error_msg
        if expire_at is not None:
            self.expire_at = expire_at
        if height is not None:
            self.height = height
        if pod_id is not None:
            self.pod_id = pod_id
        if width is not None:
            self.width = width

    @property
    def download_url(self):
        """Gets the download_url of this DetailForStartScreenShotOutput.  # noqa: E501


        :return: The download_url of this DetailForStartScreenShotOutput.  # noqa: E501
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this DetailForStartScreenShotOutput.


        :param download_url: The download_url of this DetailForStartScreenShotOutput.  # noqa: E501
        :type: str
        """

        self._download_url = download_url

    @property
    def error_code(self):
        """Gets the error_code of this DetailForStartScreenShotOutput.  # noqa: E501


        :return: The error_code of this DetailForStartScreenShotOutput.  # noqa: E501
        :rtype: int
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this DetailForStartScreenShotOutput.


        :param error_code: The error_code of this DetailForStartScreenShotOutput.  # noqa: E501
        :type: int
        """

        self._error_code = error_code

    @property
    def error_msg(self):
        """Gets the error_msg of this DetailForStartScreenShotOutput.  # noqa: E501


        :return: The error_msg of this DetailForStartScreenShotOutput.  # noqa: E501
        :rtype: str
        """
        return self._error_msg

    @error_msg.setter
    def error_msg(self, error_msg):
        """Sets the error_msg of this DetailForStartScreenShotOutput.


        :param error_msg: The error_msg of this DetailForStartScreenShotOutput.  # noqa: E501
        :type: str
        """

        self._error_msg = error_msg

    @property
    def expire_at(self):
        """Gets the expire_at of this DetailForStartScreenShotOutput.  # noqa: E501


        :return: The expire_at of this DetailForStartScreenShotOutput.  # noqa: E501
        :rtype: int
        """
        return self._expire_at

    @expire_at.setter
    def expire_at(self, expire_at):
        """Sets the expire_at of this DetailForStartScreenShotOutput.


        :param expire_at: The expire_at of this DetailForStartScreenShotOutput.  # noqa: E501
        :type: int
        """

        self._expire_at = expire_at

    @property
    def height(self):
        """Gets the height of this DetailForStartScreenShotOutput.  # noqa: E501


        :return: The height of this DetailForStartScreenShotOutput.  # noqa: E501
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this DetailForStartScreenShotOutput.


        :param height: The height of this DetailForStartScreenShotOutput.  # noqa: E501
        :type: int
        """

        self._height = height

    @property
    def pod_id(self):
        """Gets the pod_id of this DetailForStartScreenShotOutput.  # noqa: E501


        :return: The pod_id of this DetailForStartScreenShotOutput.  # noqa: E501
        :rtype: str
        """
        return self._pod_id

    @pod_id.setter
    def pod_id(self, pod_id):
        """Sets the pod_id of this DetailForStartScreenShotOutput.


        :param pod_id: The pod_id of this DetailForStartScreenShotOutput.  # noqa: E501
        :type: str
        """

        self._pod_id = pod_id

    @property
    def width(self):
        """Gets the width of this DetailForStartScreenShotOutput.  # noqa: E501


        :return: The width of this DetailForStartScreenShotOutput.  # noqa: E501
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this DetailForStartScreenShotOutput.


        :param width: The width of this DetailForStartScreenShotOutput.  # noqa: E501
        :type: int
        """

        self._width = width

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DetailForStartScreenShotOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DetailForStartScreenShotOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DetailForStartScreenShotOutput):
            return True

        return self.to_dict() != other.to_dict()
