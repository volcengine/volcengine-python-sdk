# coding: utf-8

"""
    speech_saas_prod

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class AliasResourcePackResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'alias': 'str',
        'code': 'str',
        'configuration_code': 'str',
        'current_usage': 'str',
        'details': 'DetailsForAliasResourcePackOutput',
        'expires': 'str',
        'group_name': 'str',
        'harvest': 'HarvestForAliasResourcePackOutput',
        'instance_number': 'str',
        'is_shareable': 'bool',
        'pack_type': 'str',
        'purchased_amount': 'str',
        'raw_type': 'str',
        'resource_display': 'str',
        'resource_id': 'str',
        'state': 'str',
        'train_id': 'str',
        'type': 'str'
    }

    attribute_map = {
        'alias': 'Alias',
        'code': 'Code',
        'configuration_code': 'ConfigurationCode',
        'current_usage': 'CurrentUsage',
        'details': 'Details',
        'expires': 'Expires',
        'group_name': 'GroupName',
        'harvest': 'Harvest',
        'instance_number': 'InstanceNumber',
        'is_shareable': 'IsShareable',
        'pack_type': 'PackType',
        'purchased_amount': 'PurchasedAmount',
        'raw_type': 'RawType',
        'resource_display': 'ResourceDisplay',
        'resource_id': 'ResourceID',
        'state': 'State',
        'train_id': 'TrainID',
        'type': 'Type'
    }

    def __init__(self, alias=None, code=None, configuration_code=None, current_usage=None, details=None, expires=None, group_name=None, harvest=None, instance_number=None, is_shareable=None, pack_type=None, purchased_amount=None, raw_type=None, resource_display=None, resource_id=None, state=None, train_id=None, type=None, _configuration=None):  # noqa: E501
        """AliasResourcePackResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._alias = None
        self._code = None
        self._configuration_code = None
        self._current_usage = None
        self._details = None
        self._expires = None
        self._group_name = None
        self._harvest = None
        self._instance_number = None
        self._is_shareable = None
        self._pack_type = None
        self._purchased_amount = None
        self._raw_type = None
        self._resource_display = None
        self._resource_id = None
        self._state = None
        self._train_id = None
        self._type = None
        self.discriminator = None

        if alias is not None:
            self.alias = alias
        if code is not None:
            self.code = code
        if configuration_code is not None:
            self.configuration_code = configuration_code
        if current_usage is not None:
            self.current_usage = current_usage
        if details is not None:
            self.details = details
        if expires is not None:
            self.expires = expires
        if group_name is not None:
            self.group_name = group_name
        if harvest is not None:
            self.harvest = harvest
        if instance_number is not None:
            self.instance_number = instance_number
        if is_shareable is not None:
            self.is_shareable = is_shareable
        if pack_type is not None:
            self.pack_type = pack_type
        if purchased_amount is not None:
            self.purchased_amount = purchased_amount
        if raw_type is not None:
            self.raw_type = raw_type
        if resource_display is not None:
            self.resource_display = resource_display
        if resource_id is not None:
            self.resource_id = resource_id
        if state is not None:
            self.state = state
        if train_id is not None:
            self.train_id = train_id
        if type is not None:
            self.type = type

    @property
    def alias(self):
        """Gets the alias of this AliasResourcePackResponse.  # noqa: E501


        :return: The alias of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this AliasResourcePackResponse.


        :param alias: The alias of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._alias = alias

    @property
    def code(self):
        """Gets the code of this AliasResourcePackResponse.  # noqa: E501


        :return: The code of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this AliasResourcePackResponse.


        :param code: The code of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._code = code

    @property
    def configuration_code(self):
        """Gets the configuration_code of this AliasResourcePackResponse.  # noqa: E501


        :return: The configuration_code of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._configuration_code

    @configuration_code.setter
    def configuration_code(self, configuration_code):
        """Sets the configuration_code of this AliasResourcePackResponse.


        :param configuration_code: The configuration_code of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._configuration_code = configuration_code

    @property
    def current_usage(self):
        """Gets the current_usage of this AliasResourcePackResponse.  # noqa: E501


        :return: The current_usage of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._current_usage

    @current_usage.setter
    def current_usage(self, current_usage):
        """Sets the current_usage of this AliasResourcePackResponse.


        :param current_usage: The current_usage of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._current_usage = current_usage

    @property
    def details(self):
        """Gets the details of this AliasResourcePackResponse.  # noqa: E501


        :return: The details of this AliasResourcePackResponse.  # noqa: E501
        :rtype: DetailsForAliasResourcePackOutput
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this AliasResourcePackResponse.


        :param details: The details of this AliasResourcePackResponse.  # noqa: E501
        :type: DetailsForAliasResourcePackOutput
        """

        self._details = details

    @property
    def expires(self):
        """Gets the expires of this AliasResourcePackResponse.  # noqa: E501


        :return: The expires of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._expires

    @expires.setter
    def expires(self, expires):
        """Sets the expires of this AliasResourcePackResponse.


        :param expires: The expires of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._expires = expires

    @property
    def group_name(self):
        """Gets the group_name of this AliasResourcePackResponse.  # noqa: E501


        :return: The group_name of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name):
        """Sets the group_name of this AliasResourcePackResponse.


        :param group_name: The group_name of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._group_name = group_name

    @property
    def harvest(self):
        """Gets the harvest of this AliasResourcePackResponse.  # noqa: E501


        :return: The harvest of this AliasResourcePackResponse.  # noqa: E501
        :rtype: HarvestForAliasResourcePackOutput
        """
        return self._harvest

    @harvest.setter
    def harvest(self, harvest):
        """Sets the harvest of this AliasResourcePackResponse.


        :param harvest: The harvest of this AliasResourcePackResponse.  # noqa: E501
        :type: HarvestForAliasResourcePackOutput
        """

        self._harvest = harvest

    @property
    def instance_number(self):
        """Gets the instance_number of this AliasResourcePackResponse.  # noqa: E501


        :return: The instance_number of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._instance_number

    @instance_number.setter
    def instance_number(self, instance_number):
        """Sets the instance_number of this AliasResourcePackResponse.


        :param instance_number: The instance_number of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._instance_number = instance_number

    @property
    def is_shareable(self):
        """Gets the is_shareable of this AliasResourcePackResponse.  # noqa: E501


        :return: The is_shareable of this AliasResourcePackResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_shareable

    @is_shareable.setter
    def is_shareable(self, is_shareable):
        """Sets the is_shareable of this AliasResourcePackResponse.


        :param is_shareable: The is_shareable of this AliasResourcePackResponse.  # noqa: E501
        :type: bool
        """

        self._is_shareable = is_shareable

    @property
    def pack_type(self):
        """Gets the pack_type of this AliasResourcePackResponse.  # noqa: E501


        :return: The pack_type of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._pack_type

    @pack_type.setter
    def pack_type(self, pack_type):
        """Sets the pack_type of this AliasResourcePackResponse.


        :param pack_type: The pack_type of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._pack_type = pack_type

    @property
    def purchased_amount(self):
        """Gets the purchased_amount of this AliasResourcePackResponse.  # noqa: E501


        :return: The purchased_amount of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._purchased_amount

    @purchased_amount.setter
    def purchased_amount(self, purchased_amount):
        """Sets the purchased_amount of this AliasResourcePackResponse.


        :param purchased_amount: The purchased_amount of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._purchased_amount = purchased_amount

    @property
    def raw_type(self):
        """Gets the raw_type of this AliasResourcePackResponse.  # noqa: E501


        :return: The raw_type of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_type

    @raw_type.setter
    def raw_type(self, raw_type):
        """Sets the raw_type of this AliasResourcePackResponse.


        :param raw_type: The raw_type of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._raw_type = raw_type

    @property
    def resource_display(self):
        """Gets the resource_display of this AliasResourcePackResponse.  # noqa: E501


        :return: The resource_display of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._resource_display

    @resource_display.setter
    def resource_display(self, resource_display):
        """Sets the resource_display of this AliasResourcePackResponse.


        :param resource_display: The resource_display of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._resource_display = resource_display

    @property
    def resource_id(self):
        """Gets the resource_id of this AliasResourcePackResponse.  # noqa: E501


        :return: The resource_id of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this AliasResourcePackResponse.


        :param resource_id: The resource_id of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._resource_id = resource_id

    @property
    def state(self):
        """Gets the state of this AliasResourcePackResponse.  # noqa: E501


        :return: The state of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this AliasResourcePackResponse.


        :param state: The state of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def train_id(self):
        """Gets the train_id of this AliasResourcePackResponse.  # noqa: E501


        :return: The train_id of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._train_id

    @train_id.setter
    def train_id(self, train_id):
        """Sets the train_id of this AliasResourcePackResponse.


        :param train_id: The train_id of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._train_id = train_id

    @property
    def type(self):
        """Gets the type of this AliasResourcePackResponse.  # noqa: E501


        :return: The type of this AliasResourcePackResponse.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AliasResourcePackResponse.


        :param type: The type of this AliasResourcePackResponse.  # noqa: E501
        :type: str
        """

        self._type = type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AliasResourcePackResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AliasResourcePackResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AliasResourcePackResponse):
            return True

        return self.to_dict() != other.to_dict()
