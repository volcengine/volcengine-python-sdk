# coding: utf-8

"""
    speech_saas_prod

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class AttributesForResourcePacksStatusOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'code_attribute': 'CodeAttributeForResourcePacksStatusOutput',
        'formalized_from': 'str',
        'is_forced_expires_display': 'bool'
    }

    attribute_map = {
        'code_attribute': 'CodeAttribute',
        'formalized_from': 'FormalizedFrom',
        'is_forced_expires_display': 'IsForcedExpiresDisplay'
    }

    def __init__(self, code_attribute=None, formalized_from=None, is_forced_expires_display=None, _configuration=None):  # noqa: E501
        """AttributesForResourcePacksStatusOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._code_attribute = None
        self._formalized_from = None
        self._is_forced_expires_display = None
        self.discriminator = None

        if code_attribute is not None:
            self.code_attribute = code_attribute
        if formalized_from is not None:
            self.formalized_from = formalized_from
        if is_forced_expires_display is not None:
            self.is_forced_expires_display = is_forced_expires_display

    @property
    def code_attribute(self):
        """Gets the code_attribute of this AttributesForResourcePacksStatusOutput.  # noqa: E501


        :return: The code_attribute of this AttributesForResourcePacksStatusOutput.  # noqa: E501
        :rtype: CodeAttributeForResourcePacksStatusOutput
        """
        return self._code_attribute

    @code_attribute.setter
    def code_attribute(self, code_attribute):
        """Sets the code_attribute of this AttributesForResourcePacksStatusOutput.


        :param code_attribute: The code_attribute of this AttributesForResourcePacksStatusOutput.  # noqa: E501
        :type: CodeAttributeForResourcePacksStatusOutput
        """

        self._code_attribute = code_attribute

    @property
    def formalized_from(self):
        """Gets the formalized_from of this AttributesForResourcePacksStatusOutput.  # noqa: E501


        :return: The formalized_from of this AttributesForResourcePacksStatusOutput.  # noqa: E501
        :rtype: str
        """
        return self._formalized_from

    @formalized_from.setter
    def formalized_from(self, formalized_from):
        """Sets the formalized_from of this AttributesForResourcePacksStatusOutput.


        :param formalized_from: The formalized_from of this AttributesForResourcePacksStatusOutput.  # noqa: E501
        :type: str
        """

        self._formalized_from = formalized_from

    @property
    def is_forced_expires_display(self):
        """Gets the is_forced_expires_display of this AttributesForResourcePacksStatusOutput.  # noqa: E501


        :return: The is_forced_expires_display of this AttributesForResourcePacksStatusOutput.  # noqa: E501
        :rtype: bool
        """
        return self._is_forced_expires_display

    @is_forced_expires_display.setter
    def is_forced_expires_display(self, is_forced_expires_display):
        """Sets the is_forced_expires_display of this AttributesForResourcePacksStatusOutput.


        :param is_forced_expires_display: The is_forced_expires_display of this AttributesForResourcePacksStatusOutput.  # noqa: E501
        :type: bool
        """

        self._is_forced_expires_display = is_forced_expires_display

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AttributesForResourcePacksStatusOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AttributesForResourcePacksStatusOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AttributesForResourcePacksStatusOutput):
            return True

        return self.to_dict() != other.to_dict()
