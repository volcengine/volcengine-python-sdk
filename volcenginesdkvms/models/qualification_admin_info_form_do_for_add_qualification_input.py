# coding: utf-8

"""
    vms

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class QualificationAdminInfoFormDOForAddQualificationInput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'contact_number': 'str',
        'id_card_front_photo_file_code': 'str',
        'id_card_number': 'str',
        'id_card_photo_with_people_file_code': 'str',
        'name': 'str'
    }

    attribute_map = {
        'contact_number': 'ContactNumber',
        'id_card_front_photo_file_code': 'IdCardFrontPhotoFileCode',
        'id_card_number': 'IdCardNumber',
        'id_card_photo_with_people_file_code': 'IdCardPhotoWithPeopleFileCode',
        'name': 'Name'
    }

    def __init__(self, contact_number=None, id_card_front_photo_file_code=None, id_card_number=None, id_card_photo_with_people_file_code=None, name=None, _configuration=None):  # noqa: E501
        """QualificationAdminInfoFormDOForAddQualificationInput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._contact_number = None
        self._id_card_front_photo_file_code = None
        self._id_card_number = None
        self._id_card_photo_with_people_file_code = None
        self._name = None
        self.discriminator = None

        if contact_number is not None:
            self.contact_number = contact_number
        if id_card_front_photo_file_code is not None:
            self.id_card_front_photo_file_code = id_card_front_photo_file_code
        if id_card_number is not None:
            self.id_card_number = id_card_number
        if id_card_photo_with_people_file_code is not None:
            self.id_card_photo_with_people_file_code = id_card_photo_with_people_file_code
        if name is not None:
            self.name = name

    @property
    def contact_number(self):
        """Gets the contact_number of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501


        :return: The contact_number of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501
        :rtype: str
        """
        return self._contact_number

    @contact_number.setter
    def contact_number(self, contact_number):
        """Sets the contact_number of this QualificationAdminInfoFormDOForAddQualificationInput.


        :param contact_number: The contact_number of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501
        :type: str
        """

        self._contact_number = contact_number

    @property
    def id_card_front_photo_file_code(self):
        """Gets the id_card_front_photo_file_code of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501


        :return: The id_card_front_photo_file_code of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501
        :rtype: str
        """
        return self._id_card_front_photo_file_code

    @id_card_front_photo_file_code.setter
    def id_card_front_photo_file_code(self, id_card_front_photo_file_code):
        """Sets the id_card_front_photo_file_code of this QualificationAdminInfoFormDOForAddQualificationInput.


        :param id_card_front_photo_file_code: The id_card_front_photo_file_code of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501
        :type: str
        """

        self._id_card_front_photo_file_code = id_card_front_photo_file_code

    @property
    def id_card_number(self):
        """Gets the id_card_number of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501


        :return: The id_card_number of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501
        :rtype: str
        """
        return self._id_card_number

    @id_card_number.setter
    def id_card_number(self, id_card_number):
        """Sets the id_card_number of this QualificationAdminInfoFormDOForAddQualificationInput.


        :param id_card_number: The id_card_number of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501
        :type: str
        """

        self._id_card_number = id_card_number

    @property
    def id_card_photo_with_people_file_code(self):
        """Gets the id_card_photo_with_people_file_code of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501


        :return: The id_card_photo_with_people_file_code of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501
        :rtype: str
        """
        return self._id_card_photo_with_people_file_code

    @id_card_photo_with_people_file_code.setter
    def id_card_photo_with_people_file_code(self, id_card_photo_with_people_file_code):
        """Sets the id_card_photo_with_people_file_code of this QualificationAdminInfoFormDOForAddQualificationInput.


        :param id_card_photo_with_people_file_code: The id_card_photo_with_people_file_code of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501
        :type: str
        """

        self._id_card_photo_with_people_file_code = id_card_photo_with_people_file_code

    @property
    def name(self):
        """Gets the name of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501


        :return: The name of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this QualificationAdminInfoFormDOForAddQualificationInput.


        :param name: The name of this QualificationAdminInfoFormDOForAddQualificationInput.  # noqa: E501
        :type: str
        """

        self._name = name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualificationAdminInfoFormDOForAddQualificationInput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualificationAdminInfoFormDOForAddQualificationInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualificationAdminInfoFormDOForAddQualificationInput):
            return True

        return self.to_dict() != other.to_dict()
