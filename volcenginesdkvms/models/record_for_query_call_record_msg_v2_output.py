# coding: utf-8

"""
    vms

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class RecordForQueryCallRecordMsgV2Output(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_id': 'str',
        'audio_record_flag': 'int',
        'begin_call_time': 'int',
        'business_line_id': 'int',
        'call_display_type': 'int',
        'call_id': 'str',
        'call_result': 'int',
        'call_rounds': 'int',
        'call_slots': 'str',
        'call_times': 'int',
        'call_type': 'int',
        'callee': 'str',
        'callee_answer_time': 'int',
        'callee_calling_time': 'int',
        'callee_city_code': 'str',
        'callee_country_iso_code': 'str',
        'callee_province_code': 'str',
        'callee_ringing_time': 'int',
        'callee_show_number': 'str',
        'callee_show_number_pool_no': 'str',
        'caller': 'str',
        'caller_answer_time': 'int',
        'caller_calling_time': 'int',
        'caller_city_code': 'str',
        'caller_country_iso_code': 'str',
        'caller_duration': 'int',
        'caller_province_code': 'str',
        'caller_ringing_time': 'int',
        'caller_show_number': 'str',
        'caller_show_number_pool_no': 'str',
        'cdr_create_time': 'int',
        'cdr_type': 'int',
        'client_tags': 'list[str]',
        'digits': 'list[str]',
        'effect': 'int',
        'effected_sub_id': 'str',
        'end_time': 'int',
        'ext': 'str',
        'integerention_grading': 'str',
        'integerention_grading_key': 'str',
        'message_type': 'int',
        'number_pool_no': 'str',
        'number_pool_no_y': 'str',
        'out_id': 'str',
        'phone_no_a': 'str',
        'phone_no_b': 'str',
        'phone_no_e': 'str',
        'phone_no_x': 'str',
        'phone_no_x_city_code': 'str',
        'phone_no_x_country_iso_code': 'str',
        'phone_no_x_province_code': 'str',
        'phone_no_y': 'str',
        'phone_no_y_city_code': 'str',
        'phone_no_y_country_iso_code': 'str',
        'phone_no_y_province_code': 'str',
        'receive_time': 'int',
        'release_type': 'int',
        'ring_time': 'int',
        'secret_call_type': 'int',
        'send_time': 'int',
        'service_type': 'int',
        'session_id': 'str',
        'single_open_id': 'str',
        'sms_content': 'str',
        'sms_count': 'int',
        'start_time': 'int',
        'sub_service_type': 'int',
        'subscription_id': 'str',
        'task_open_id': 'str',
        'user_data': 'str',
        'verify_anwser': 'str',
        'verify_correct_anwser': 'str',
        'verify_result': 'int',
        'verify_voice_code': 'str'
    }

    attribute_map = {
        'account_id': 'AccountId',
        'audio_record_flag': 'AudioRecordFlag',
        'begin_call_time': 'BeginCallTime',
        'business_line_id': 'BusinessLineId',
        'call_display_type': 'CallDisplayType',
        'call_id': 'CallId',
        'call_result': 'CallResult',
        'call_rounds': 'CallRounds',
        'call_slots': 'CallSlots',
        'call_times': 'CallTimes',
        'call_type': 'CallType',
        'callee': 'Callee',
        'callee_answer_time': 'CalleeAnswerTime',
        'callee_calling_time': 'CalleeCallingTime',
        'callee_city_code': 'CalleeCityCode',
        'callee_country_iso_code': 'CalleeCountryIsoCode',
        'callee_province_code': 'CalleeProvinceCode',
        'callee_ringing_time': 'CalleeRingingTime',
        'callee_show_number': 'CalleeShowNumber',
        'callee_show_number_pool_no': 'CalleeShowNumberPoolNo',
        'caller': 'Caller',
        'caller_answer_time': 'CallerAnswerTime',
        'caller_calling_time': 'CallerCallingTime',
        'caller_city_code': 'CallerCityCode',
        'caller_country_iso_code': 'CallerCountryIsoCode',
        'caller_duration': 'CallerDuration',
        'caller_province_code': 'CallerProvinceCode',
        'caller_ringing_time': 'CallerRingingTime',
        'caller_show_number': 'CallerShowNumber',
        'caller_show_number_pool_no': 'CallerShowNumberPoolNo',
        'cdr_create_time': 'CdrCreateTime',
        'cdr_type': 'CdrType',
        'client_tags': 'ClientTags',
        'digits': 'Digits',
        'effect': 'Effect',
        'effected_sub_id': 'EffectedSubId',
        'end_time': 'EndTime',
        'ext': 'Ext',
        'integerention_grading': 'IntegerentionGrading',
        'integerention_grading_key': 'IntegerentionGradingKey',
        'message_type': 'MessageType',
        'number_pool_no': 'NumberPoolNo',
        'number_pool_no_y': 'NumberPoolNoY',
        'out_id': 'OutId',
        'phone_no_a': 'PhoneNoA',
        'phone_no_b': 'PhoneNoB',
        'phone_no_e': 'PhoneNoE',
        'phone_no_x': 'PhoneNoX',
        'phone_no_x_city_code': 'PhoneNoXCityCode',
        'phone_no_x_country_iso_code': 'PhoneNoXCountryIsoCode',
        'phone_no_x_province_code': 'PhoneNoXProvinceCode',
        'phone_no_y': 'PhoneNoY',
        'phone_no_y_city_code': 'PhoneNoYCityCode',
        'phone_no_y_country_iso_code': 'PhoneNoYCountryIsoCode',
        'phone_no_y_province_code': 'PhoneNoYProvinceCode',
        'receive_time': 'ReceiveTime',
        'release_type': 'ReleaseType',
        'ring_time': 'RingTime',
        'secret_call_type': 'SecretCallType',
        'send_time': 'SendTime',
        'service_type': 'ServiceType',
        'session_id': 'SessionId',
        'single_open_id': 'SingleOpenId',
        'sms_content': 'SmsContent',
        'sms_count': 'SmsCount',
        'start_time': 'StartTime',
        'sub_service_type': 'SubServiceType',
        'subscription_id': 'SubscriptionId',
        'task_open_id': 'TaskOpenId',
        'user_data': 'UserData',
        'verify_anwser': 'VerifyAnwser',
        'verify_correct_anwser': 'VerifyCorrectAnwser',
        'verify_result': 'VerifyResult',
        'verify_voice_code': 'VerifyVoiceCode'
    }

    def __init__(self, account_id=None, audio_record_flag=None, begin_call_time=None, business_line_id=None, call_display_type=None, call_id=None, call_result=None, call_rounds=None, call_slots=None, call_times=None, call_type=None, callee=None, callee_answer_time=None, callee_calling_time=None, callee_city_code=None, callee_country_iso_code=None, callee_province_code=None, callee_ringing_time=None, callee_show_number=None, callee_show_number_pool_no=None, caller=None, caller_answer_time=None, caller_calling_time=None, caller_city_code=None, caller_country_iso_code=None, caller_duration=None, caller_province_code=None, caller_ringing_time=None, caller_show_number=None, caller_show_number_pool_no=None, cdr_create_time=None, cdr_type=None, client_tags=None, digits=None, effect=None, effected_sub_id=None, end_time=None, ext=None, integerention_grading=None, integerention_grading_key=None, message_type=None, number_pool_no=None, number_pool_no_y=None, out_id=None, phone_no_a=None, phone_no_b=None, phone_no_e=None, phone_no_x=None, phone_no_x_city_code=None, phone_no_x_country_iso_code=None, phone_no_x_province_code=None, phone_no_y=None, phone_no_y_city_code=None, phone_no_y_country_iso_code=None, phone_no_y_province_code=None, receive_time=None, release_type=None, ring_time=None, secret_call_type=None, send_time=None, service_type=None, session_id=None, single_open_id=None, sms_content=None, sms_count=None, start_time=None, sub_service_type=None, subscription_id=None, task_open_id=None, user_data=None, verify_anwser=None, verify_correct_anwser=None, verify_result=None, verify_voice_code=None, _configuration=None):  # noqa: E501
        """RecordForQueryCallRecordMsgV2Output - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._account_id = None
        self._audio_record_flag = None
        self._begin_call_time = None
        self._business_line_id = None
        self._call_display_type = None
        self._call_id = None
        self._call_result = None
        self._call_rounds = None
        self._call_slots = None
        self._call_times = None
        self._call_type = None
        self._callee = None
        self._callee_answer_time = None
        self._callee_calling_time = None
        self._callee_city_code = None
        self._callee_country_iso_code = None
        self._callee_province_code = None
        self._callee_ringing_time = None
        self._callee_show_number = None
        self._callee_show_number_pool_no = None
        self._caller = None
        self._caller_answer_time = None
        self._caller_calling_time = None
        self._caller_city_code = None
        self._caller_country_iso_code = None
        self._caller_duration = None
        self._caller_province_code = None
        self._caller_ringing_time = None
        self._caller_show_number = None
        self._caller_show_number_pool_no = None
        self._cdr_create_time = None
        self._cdr_type = None
        self._client_tags = None
        self._digits = None
        self._effect = None
        self._effected_sub_id = None
        self._end_time = None
        self._ext = None
        self._integerention_grading = None
        self._integerention_grading_key = None
        self._message_type = None
        self._number_pool_no = None
        self._number_pool_no_y = None
        self._out_id = None
        self._phone_no_a = None
        self._phone_no_b = None
        self._phone_no_e = None
        self._phone_no_x = None
        self._phone_no_x_city_code = None
        self._phone_no_x_country_iso_code = None
        self._phone_no_x_province_code = None
        self._phone_no_y = None
        self._phone_no_y_city_code = None
        self._phone_no_y_country_iso_code = None
        self._phone_no_y_province_code = None
        self._receive_time = None
        self._release_type = None
        self._ring_time = None
        self._secret_call_type = None
        self._send_time = None
        self._service_type = None
        self._session_id = None
        self._single_open_id = None
        self._sms_content = None
        self._sms_count = None
        self._start_time = None
        self._sub_service_type = None
        self._subscription_id = None
        self._task_open_id = None
        self._user_data = None
        self._verify_anwser = None
        self._verify_correct_anwser = None
        self._verify_result = None
        self._verify_voice_code = None
        self.discriminator = None

        if account_id is not None:
            self.account_id = account_id
        if audio_record_flag is not None:
            self.audio_record_flag = audio_record_flag
        if begin_call_time is not None:
            self.begin_call_time = begin_call_time
        if business_line_id is not None:
            self.business_line_id = business_line_id
        if call_display_type is not None:
            self.call_display_type = call_display_type
        if call_id is not None:
            self.call_id = call_id
        if call_result is not None:
            self.call_result = call_result
        if call_rounds is not None:
            self.call_rounds = call_rounds
        if call_slots is not None:
            self.call_slots = call_slots
        if call_times is not None:
            self.call_times = call_times
        if call_type is not None:
            self.call_type = call_type
        if callee is not None:
            self.callee = callee
        if callee_answer_time is not None:
            self.callee_answer_time = callee_answer_time
        if callee_calling_time is not None:
            self.callee_calling_time = callee_calling_time
        if callee_city_code is not None:
            self.callee_city_code = callee_city_code
        if callee_country_iso_code is not None:
            self.callee_country_iso_code = callee_country_iso_code
        if callee_province_code is not None:
            self.callee_province_code = callee_province_code
        if callee_ringing_time is not None:
            self.callee_ringing_time = callee_ringing_time
        if callee_show_number is not None:
            self.callee_show_number = callee_show_number
        if callee_show_number_pool_no is not None:
            self.callee_show_number_pool_no = callee_show_number_pool_no
        if caller is not None:
            self.caller = caller
        if caller_answer_time is not None:
            self.caller_answer_time = caller_answer_time
        if caller_calling_time is not None:
            self.caller_calling_time = caller_calling_time
        if caller_city_code is not None:
            self.caller_city_code = caller_city_code
        if caller_country_iso_code is not None:
            self.caller_country_iso_code = caller_country_iso_code
        if caller_duration is not None:
            self.caller_duration = caller_duration
        if caller_province_code is not None:
            self.caller_province_code = caller_province_code
        if caller_ringing_time is not None:
            self.caller_ringing_time = caller_ringing_time
        if caller_show_number is not None:
            self.caller_show_number = caller_show_number
        if caller_show_number_pool_no is not None:
            self.caller_show_number_pool_no = caller_show_number_pool_no
        if cdr_create_time is not None:
            self.cdr_create_time = cdr_create_time
        if cdr_type is not None:
            self.cdr_type = cdr_type
        if client_tags is not None:
            self.client_tags = client_tags
        if digits is not None:
            self.digits = digits
        if effect is not None:
            self.effect = effect
        if effected_sub_id is not None:
            self.effected_sub_id = effected_sub_id
        if end_time is not None:
            self.end_time = end_time
        if ext is not None:
            self.ext = ext
        if integerention_grading is not None:
            self.integerention_grading = integerention_grading
        if integerention_grading_key is not None:
            self.integerention_grading_key = integerention_grading_key
        if message_type is not None:
            self.message_type = message_type
        if number_pool_no is not None:
            self.number_pool_no = number_pool_no
        if number_pool_no_y is not None:
            self.number_pool_no_y = number_pool_no_y
        if out_id is not None:
            self.out_id = out_id
        if phone_no_a is not None:
            self.phone_no_a = phone_no_a
        if phone_no_b is not None:
            self.phone_no_b = phone_no_b
        if phone_no_e is not None:
            self.phone_no_e = phone_no_e
        if phone_no_x is not None:
            self.phone_no_x = phone_no_x
        if phone_no_x_city_code is not None:
            self.phone_no_x_city_code = phone_no_x_city_code
        if phone_no_x_country_iso_code is not None:
            self.phone_no_x_country_iso_code = phone_no_x_country_iso_code
        if phone_no_x_province_code is not None:
            self.phone_no_x_province_code = phone_no_x_province_code
        if phone_no_y is not None:
            self.phone_no_y = phone_no_y
        if phone_no_y_city_code is not None:
            self.phone_no_y_city_code = phone_no_y_city_code
        if phone_no_y_country_iso_code is not None:
            self.phone_no_y_country_iso_code = phone_no_y_country_iso_code
        if phone_no_y_province_code is not None:
            self.phone_no_y_province_code = phone_no_y_province_code
        if receive_time is not None:
            self.receive_time = receive_time
        if release_type is not None:
            self.release_type = release_type
        if ring_time is not None:
            self.ring_time = ring_time
        if secret_call_type is not None:
            self.secret_call_type = secret_call_type
        if send_time is not None:
            self.send_time = send_time
        if service_type is not None:
            self.service_type = service_type
        if session_id is not None:
            self.session_id = session_id
        if single_open_id is not None:
            self.single_open_id = single_open_id
        if sms_content is not None:
            self.sms_content = sms_content
        if sms_count is not None:
            self.sms_count = sms_count
        if start_time is not None:
            self.start_time = start_time
        if sub_service_type is not None:
            self.sub_service_type = sub_service_type
        if subscription_id is not None:
            self.subscription_id = subscription_id
        if task_open_id is not None:
            self.task_open_id = task_open_id
        if user_data is not None:
            self.user_data = user_data
        if verify_anwser is not None:
            self.verify_anwser = verify_anwser
        if verify_correct_anwser is not None:
            self.verify_correct_anwser = verify_correct_anwser
        if verify_result is not None:
            self.verify_result = verify_result
        if verify_voice_code is not None:
            self.verify_voice_code = verify_voice_code

    @property
    def account_id(self):
        """Gets the account_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The account_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this RecordForQueryCallRecordMsgV2Output.


        :param account_id: The account_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def audio_record_flag(self):
        """Gets the audio_record_flag of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The audio_record_flag of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._audio_record_flag

    @audio_record_flag.setter
    def audio_record_flag(self, audio_record_flag):
        """Sets the audio_record_flag of this RecordForQueryCallRecordMsgV2Output.


        :param audio_record_flag: The audio_record_flag of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._audio_record_flag = audio_record_flag

    @property
    def begin_call_time(self):
        """Gets the begin_call_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The begin_call_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._begin_call_time

    @begin_call_time.setter
    def begin_call_time(self, begin_call_time):
        """Sets the begin_call_time of this RecordForQueryCallRecordMsgV2Output.


        :param begin_call_time: The begin_call_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._begin_call_time = begin_call_time

    @property
    def business_line_id(self):
        """Gets the business_line_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The business_line_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._business_line_id

    @business_line_id.setter
    def business_line_id(self, business_line_id):
        """Sets the business_line_id of this RecordForQueryCallRecordMsgV2Output.


        :param business_line_id: The business_line_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._business_line_id = business_line_id

    @property
    def call_display_type(self):
        """Gets the call_display_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The call_display_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._call_display_type

    @call_display_type.setter
    def call_display_type(self, call_display_type):
        """Sets the call_display_type of this RecordForQueryCallRecordMsgV2Output.


        :param call_display_type: The call_display_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._call_display_type = call_display_type

    @property
    def call_id(self):
        """Gets the call_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The call_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._call_id

    @call_id.setter
    def call_id(self, call_id):
        """Sets the call_id of this RecordForQueryCallRecordMsgV2Output.


        :param call_id: The call_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._call_id = call_id

    @property
    def call_result(self):
        """Gets the call_result of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The call_result of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._call_result

    @call_result.setter
    def call_result(self, call_result):
        """Sets the call_result of this RecordForQueryCallRecordMsgV2Output.


        :param call_result: The call_result of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._call_result = call_result

    @property
    def call_rounds(self):
        """Gets the call_rounds of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The call_rounds of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._call_rounds

    @call_rounds.setter
    def call_rounds(self, call_rounds):
        """Sets the call_rounds of this RecordForQueryCallRecordMsgV2Output.


        :param call_rounds: The call_rounds of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._call_rounds = call_rounds

    @property
    def call_slots(self):
        """Gets the call_slots of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The call_slots of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._call_slots

    @call_slots.setter
    def call_slots(self, call_slots):
        """Sets the call_slots of this RecordForQueryCallRecordMsgV2Output.


        :param call_slots: The call_slots of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._call_slots = call_slots

    @property
    def call_times(self):
        """Gets the call_times of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The call_times of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._call_times

    @call_times.setter
    def call_times(self, call_times):
        """Sets the call_times of this RecordForQueryCallRecordMsgV2Output.


        :param call_times: The call_times of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._call_times = call_times

    @property
    def call_type(self):
        """Gets the call_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The call_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._call_type

    @call_type.setter
    def call_type(self, call_type):
        """Sets the call_type of this RecordForQueryCallRecordMsgV2Output.


        :param call_type: The call_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._call_type = call_type

    @property
    def callee(self):
        """Gets the callee of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The callee of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._callee

    @callee.setter
    def callee(self, callee):
        """Sets the callee of this RecordForQueryCallRecordMsgV2Output.


        :param callee: The callee of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._callee = callee

    @property
    def callee_answer_time(self):
        """Gets the callee_answer_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The callee_answer_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._callee_answer_time

    @callee_answer_time.setter
    def callee_answer_time(self, callee_answer_time):
        """Sets the callee_answer_time of this RecordForQueryCallRecordMsgV2Output.


        :param callee_answer_time: The callee_answer_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._callee_answer_time = callee_answer_time

    @property
    def callee_calling_time(self):
        """Gets the callee_calling_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The callee_calling_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._callee_calling_time

    @callee_calling_time.setter
    def callee_calling_time(self, callee_calling_time):
        """Sets the callee_calling_time of this RecordForQueryCallRecordMsgV2Output.


        :param callee_calling_time: The callee_calling_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._callee_calling_time = callee_calling_time

    @property
    def callee_city_code(self):
        """Gets the callee_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The callee_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._callee_city_code

    @callee_city_code.setter
    def callee_city_code(self, callee_city_code):
        """Sets the callee_city_code of this RecordForQueryCallRecordMsgV2Output.


        :param callee_city_code: The callee_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._callee_city_code = callee_city_code

    @property
    def callee_country_iso_code(self):
        """Gets the callee_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The callee_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._callee_country_iso_code

    @callee_country_iso_code.setter
    def callee_country_iso_code(self, callee_country_iso_code):
        """Sets the callee_country_iso_code of this RecordForQueryCallRecordMsgV2Output.


        :param callee_country_iso_code: The callee_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._callee_country_iso_code = callee_country_iso_code

    @property
    def callee_province_code(self):
        """Gets the callee_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The callee_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._callee_province_code

    @callee_province_code.setter
    def callee_province_code(self, callee_province_code):
        """Sets the callee_province_code of this RecordForQueryCallRecordMsgV2Output.


        :param callee_province_code: The callee_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._callee_province_code = callee_province_code

    @property
    def callee_ringing_time(self):
        """Gets the callee_ringing_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The callee_ringing_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._callee_ringing_time

    @callee_ringing_time.setter
    def callee_ringing_time(self, callee_ringing_time):
        """Sets the callee_ringing_time of this RecordForQueryCallRecordMsgV2Output.


        :param callee_ringing_time: The callee_ringing_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._callee_ringing_time = callee_ringing_time

    @property
    def callee_show_number(self):
        """Gets the callee_show_number of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The callee_show_number of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._callee_show_number

    @callee_show_number.setter
    def callee_show_number(self, callee_show_number):
        """Sets the callee_show_number of this RecordForQueryCallRecordMsgV2Output.


        :param callee_show_number: The callee_show_number of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._callee_show_number = callee_show_number

    @property
    def callee_show_number_pool_no(self):
        """Gets the callee_show_number_pool_no of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The callee_show_number_pool_no of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._callee_show_number_pool_no

    @callee_show_number_pool_no.setter
    def callee_show_number_pool_no(self, callee_show_number_pool_no):
        """Sets the callee_show_number_pool_no of this RecordForQueryCallRecordMsgV2Output.


        :param callee_show_number_pool_no: The callee_show_number_pool_no of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._callee_show_number_pool_no = callee_show_number_pool_no

    @property
    def caller(self):
        """Gets the caller of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The caller of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._caller

    @caller.setter
    def caller(self, caller):
        """Sets the caller of this RecordForQueryCallRecordMsgV2Output.


        :param caller: The caller of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._caller = caller

    @property
    def caller_answer_time(self):
        """Gets the caller_answer_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The caller_answer_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._caller_answer_time

    @caller_answer_time.setter
    def caller_answer_time(self, caller_answer_time):
        """Sets the caller_answer_time of this RecordForQueryCallRecordMsgV2Output.


        :param caller_answer_time: The caller_answer_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._caller_answer_time = caller_answer_time

    @property
    def caller_calling_time(self):
        """Gets the caller_calling_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The caller_calling_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._caller_calling_time

    @caller_calling_time.setter
    def caller_calling_time(self, caller_calling_time):
        """Sets the caller_calling_time of this RecordForQueryCallRecordMsgV2Output.


        :param caller_calling_time: The caller_calling_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._caller_calling_time = caller_calling_time

    @property
    def caller_city_code(self):
        """Gets the caller_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The caller_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._caller_city_code

    @caller_city_code.setter
    def caller_city_code(self, caller_city_code):
        """Sets the caller_city_code of this RecordForQueryCallRecordMsgV2Output.


        :param caller_city_code: The caller_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._caller_city_code = caller_city_code

    @property
    def caller_country_iso_code(self):
        """Gets the caller_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The caller_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._caller_country_iso_code

    @caller_country_iso_code.setter
    def caller_country_iso_code(self, caller_country_iso_code):
        """Sets the caller_country_iso_code of this RecordForQueryCallRecordMsgV2Output.


        :param caller_country_iso_code: The caller_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._caller_country_iso_code = caller_country_iso_code

    @property
    def caller_duration(self):
        """Gets the caller_duration of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The caller_duration of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._caller_duration

    @caller_duration.setter
    def caller_duration(self, caller_duration):
        """Sets the caller_duration of this RecordForQueryCallRecordMsgV2Output.


        :param caller_duration: The caller_duration of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._caller_duration = caller_duration

    @property
    def caller_province_code(self):
        """Gets the caller_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The caller_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._caller_province_code

    @caller_province_code.setter
    def caller_province_code(self, caller_province_code):
        """Sets the caller_province_code of this RecordForQueryCallRecordMsgV2Output.


        :param caller_province_code: The caller_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._caller_province_code = caller_province_code

    @property
    def caller_ringing_time(self):
        """Gets the caller_ringing_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The caller_ringing_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._caller_ringing_time

    @caller_ringing_time.setter
    def caller_ringing_time(self, caller_ringing_time):
        """Sets the caller_ringing_time of this RecordForQueryCallRecordMsgV2Output.


        :param caller_ringing_time: The caller_ringing_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._caller_ringing_time = caller_ringing_time

    @property
    def caller_show_number(self):
        """Gets the caller_show_number of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The caller_show_number of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._caller_show_number

    @caller_show_number.setter
    def caller_show_number(self, caller_show_number):
        """Sets the caller_show_number of this RecordForQueryCallRecordMsgV2Output.


        :param caller_show_number: The caller_show_number of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._caller_show_number = caller_show_number

    @property
    def caller_show_number_pool_no(self):
        """Gets the caller_show_number_pool_no of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The caller_show_number_pool_no of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._caller_show_number_pool_no

    @caller_show_number_pool_no.setter
    def caller_show_number_pool_no(self, caller_show_number_pool_no):
        """Sets the caller_show_number_pool_no of this RecordForQueryCallRecordMsgV2Output.


        :param caller_show_number_pool_no: The caller_show_number_pool_no of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._caller_show_number_pool_no = caller_show_number_pool_no

    @property
    def cdr_create_time(self):
        """Gets the cdr_create_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The cdr_create_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._cdr_create_time

    @cdr_create_time.setter
    def cdr_create_time(self, cdr_create_time):
        """Sets the cdr_create_time of this RecordForQueryCallRecordMsgV2Output.


        :param cdr_create_time: The cdr_create_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._cdr_create_time = cdr_create_time

    @property
    def cdr_type(self):
        """Gets the cdr_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The cdr_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._cdr_type

    @cdr_type.setter
    def cdr_type(self, cdr_type):
        """Sets the cdr_type of this RecordForQueryCallRecordMsgV2Output.


        :param cdr_type: The cdr_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._cdr_type = cdr_type

    @property
    def client_tags(self):
        """Gets the client_tags of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The client_tags of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: list[str]
        """
        return self._client_tags

    @client_tags.setter
    def client_tags(self, client_tags):
        """Sets the client_tags of this RecordForQueryCallRecordMsgV2Output.


        :param client_tags: The client_tags of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: list[str]
        """

        self._client_tags = client_tags

    @property
    def digits(self):
        """Gets the digits of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The digits of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: list[str]
        """
        return self._digits

    @digits.setter
    def digits(self, digits):
        """Sets the digits of this RecordForQueryCallRecordMsgV2Output.


        :param digits: The digits of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: list[str]
        """

        self._digits = digits

    @property
    def effect(self):
        """Gets the effect of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The effect of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._effect

    @effect.setter
    def effect(self, effect):
        """Sets the effect of this RecordForQueryCallRecordMsgV2Output.


        :param effect: The effect of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._effect = effect

    @property
    def effected_sub_id(self):
        """Gets the effected_sub_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The effected_sub_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._effected_sub_id

    @effected_sub_id.setter
    def effected_sub_id(self, effected_sub_id):
        """Sets the effected_sub_id of this RecordForQueryCallRecordMsgV2Output.


        :param effected_sub_id: The effected_sub_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._effected_sub_id = effected_sub_id

    @property
    def end_time(self):
        """Gets the end_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The end_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this RecordForQueryCallRecordMsgV2Output.


        :param end_time: The end_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._end_time = end_time

    @property
    def ext(self):
        """Gets the ext of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The ext of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._ext

    @ext.setter
    def ext(self, ext):
        """Sets the ext of this RecordForQueryCallRecordMsgV2Output.


        :param ext: The ext of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._ext = ext

    @property
    def integerention_grading(self):
        """Gets the integerention_grading of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The integerention_grading of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._integerention_grading

    @integerention_grading.setter
    def integerention_grading(self, integerention_grading):
        """Sets the integerention_grading of this RecordForQueryCallRecordMsgV2Output.


        :param integerention_grading: The integerention_grading of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._integerention_grading = integerention_grading

    @property
    def integerention_grading_key(self):
        """Gets the integerention_grading_key of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The integerention_grading_key of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._integerention_grading_key

    @integerention_grading_key.setter
    def integerention_grading_key(self, integerention_grading_key):
        """Sets the integerention_grading_key of this RecordForQueryCallRecordMsgV2Output.


        :param integerention_grading_key: The integerention_grading_key of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._integerention_grading_key = integerention_grading_key

    @property
    def message_type(self):
        """Gets the message_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The message_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._message_type

    @message_type.setter
    def message_type(self, message_type):
        """Sets the message_type of this RecordForQueryCallRecordMsgV2Output.


        :param message_type: The message_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._message_type = message_type

    @property
    def number_pool_no(self):
        """Gets the number_pool_no of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The number_pool_no of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._number_pool_no

    @number_pool_no.setter
    def number_pool_no(self, number_pool_no):
        """Sets the number_pool_no of this RecordForQueryCallRecordMsgV2Output.


        :param number_pool_no: The number_pool_no of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._number_pool_no = number_pool_no

    @property
    def number_pool_no_y(self):
        """Gets the number_pool_no_y of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The number_pool_no_y of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._number_pool_no_y

    @number_pool_no_y.setter
    def number_pool_no_y(self, number_pool_no_y):
        """Sets the number_pool_no_y of this RecordForQueryCallRecordMsgV2Output.


        :param number_pool_no_y: The number_pool_no_y of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._number_pool_no_y = number_pool_no_y

    @property
    def out_id(self):
        """Gets the out_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The out_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._out_id

    @out_id.setter
    def out_id(self, out_id):
        """Sets the out_id of this RecordForQueryCallRecordMsgV2Output.


        :param out_id: The out_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._out_id = out_id

    @property
    def phone_no_a(self):
        """Gets the phone_no_a of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The phone_no_a of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._phone_no_a

    @phone_no_a.setter
    def phone_no_a(self, phone_no_a):
        """Sets the phone_no_a of this RecordForQueryCallRecordMsgV2Output.


        :param phone_no_a: The phone_no_a of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._phone_no_a = phone_no_a

    @property
    def phone_no_b(self):
        """Gets the phone_no_b of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The phone_no_b of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._phone_no_b

    @phone_no_b.setter
    def phone_no_b(self, phone_no_b):
        """Sets the phone_no_b of this RecordForQueryCallRecordMsgV2Output.


        :param phone_no_b: The phone_no_b of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._phone_no_b = phone_no_b

    @property
    def phone_no_e(self):
        """Gets the phone_no_e of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The phone_no_e of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._phone_no_e

    @phone_no_e.setter
    def phone_no_e(self, phone_no_e):
        """Sets the phone_no_e of this RecordForQueryCallRecordMsgV2Output.


        :param phone_no_e: The phone_no_e of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._phone_no_e = phone_no_e

    @property
    def phone_no_x(self):
        """Gets the phone_no_x of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The phone_no_x of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._phone_no_x

    @phone_no_x.setter
    def phone_no_x(self, phone_no_x):
        """Sets the phone_no_x of this RecordForQueryCallRecordMsgV2Output.


        :param phone_no_x: The phone_no_x of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._phone_no_x = phone_no_x

    @property
    def phone_no_x_city_code(self):
        """Gets the phone_no_x_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The phone_no_x_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._phone_no_x_city_code

    @phone_no_x_city_code.setter
    def phone_no_x_city_code(self, phone_no_x_city_code):
        """Sets the phone_no_x_city_code of this RecordForQueryCallRecordMsgV2Output.


        :param phone_no_x_city_code: The phone_no_x_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._phone_no_x_city_code = phone_no_x_city_code

    @property
    def phone_no_x_country_iso_code(self):
        """Gets the phone_no_x_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The phone_no_x_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._phone_no_x_country_iso_code

    @phone_no_x_country_iso_code.setter
    def phone_no_x_country_iso_code(self, phone_no_x_country_iso_code):
        """Sets the phone_no_x_country_iso_code of this RecordForQueryCallRecordMsgV2Output.


        :param phone_no_x_country_iso_code: The phone_no_x_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._phone_no_x_country_iso_code = phone_no_x_country_iso_code

    @property
    def phone_no_x_province_code(self):
        """Gets the phone_no_x_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The phone_no_x_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._phone_no_x_province_code

    @phone_no_x_province_code.setter
    def phone_no_x_province_code(self, phone_no_x_province_code):
        """Sets the phone_no_x_province_code of this RecordForQueryCallRecordMsgV2Output.


        :param phone_no_x_province_code: The phone_no_x_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._phone_no_x_province_code = phone_no_x_province_code

    @property
    def phone_no_y(self):
        """Gets the phone_no_y of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The phone_no_y of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._phone_no_y

    @phone_no_y.setter
    def phone_no_y(self, phone_no_y):
        """Sets the phone_no_y of this RecordForQueryCallRecordMsgV2Output.


        :param phone_no_y: The phone_no_y of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._phone_no_y = phone_no_y

    @property
    def phone_no_y_city_code(self):
        """Gets the phone_no_y_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The phone_no_y_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._phone_no_y_city_code

    @phone_no_y_city_code.setter
    def phone_no_y_city_code(self, phone_no_y_city_code):
        """Sets the phone_no_y_city_code of this RecordForQueryCallRecordMsgV2Output.


        :param phone_no_y_city_code: The phone_no_y_city_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._phone_no_y_city_code = phone_no_y_city_code

    @property
    def phone_no_y_country_iso_code(self):
        """Gets the phone_no_y_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The phone_no_y_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._phone_no_y_country_iso_code

    @phone_no_y_country_iso_code.setter
    def phone_no_y_country_iso_code(self, phone_no_y_country_iso_code):
        """Sets the phone_no_y_country_iso_code of this RecordForQueryCallRecordMsgV2Output.


        :param phone_no_y_country_iso_code: The phone_no_y_country_iso_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._phone_no_y_country_iso_code = phone_no_y_country_iso_code

    @property
    def phone_no_y_province_code(self):
        """Gets the phone_no_y_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The phone_no_y_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._phone_no_y_province_code

    @phone_no_y_province_code.setter
    def phone_no_y_province_code(self, phone_no_y_province_code):
        """Sets the phone_no_y_province_code of this RecordForQueryCallRecordMsgV2Output.


        :param phone_no_y_province_code: The phone_no_y_province_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._phone_no_y_province_code = phone_no_y_province_code

    @property
    def receive_time(self):
        """Gets the receive_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The receive_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._receive_time

    @receive_time.setter
    def receive_time(self, receive_time):
        """Sets the receive_time of this RecordForQueryCallRecordMsgV2Output.


        :param receive_time: The receive_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._receive_time = receive_time

    @property
    def release_type(self):
        """Gets the release_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The release_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._release_type

    @release_type.setter
    def release_type(self, release_type):
        """Sets the release_type of this RecordForQueryCallRecordMsgV2Output.


        :param release_type: The release_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._release_type = release_type

    @property
    def ring_time(self):
        """Gets the ring_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The ring_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._ring_time

    @ring_time.setter
    def ring_time(self, ring_time):
        """Sets the ring_time of this RecordForQueryCallRecordMsgV2Output.


        :param ring_time: The ring_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._ring_time = ring_time

    @property
    def secret_call_type(self):
        """Gets the secret_call_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The secret_call_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._secret_call_type

    @secret_call_type.setter
    def secret_call_type(self, secret_call_type):
        """Sets the secret_call_type of this RecordForQueryCallRecordMsgV2Output.


        :param secret_call_type: The secret_call_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._secret_call_type = secret_call_type

    @property
    def send_time(self):
        """Gets the send_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The send_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._send_time

    @send_time.setter
    def send_time(self, send_time):
        """Sets the send_time of this RecordForQueryCallRecordMsgV2Output.


        :param send_time: The send_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._send_time = send_time

    @property
    def service_type(self):
        """Gets the service_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The service_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._service_type

    @service_type.setter
    def service_type(self, service_type):
        """Sets the service_type of this RecordForQueryCallRecordMsgV2Output.


        :param service_type: The service_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._service_type = service_type

    @property
    def session_id(self):
        """Gets the session_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The session_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this RecordForQueryCallRecordMsgV2Output.


        :param session_id: The session_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._session_id = session_id

    @property
    def single_open_id(self):
        """Gets the single_open_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The single_open_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._single_open_id

    @single_open_id.setter
    def single_open_id(self, single_open_id):
        """Sets the single_open_id of this RecordForQueryCallRecordMsgV2Output.


        :param single_open_id: The single_open_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._single_open_id = single_open_id

    @property
    def sms_content(self):
        """Gets the sms_content of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The sms_content of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._sms_content

    @sms_content.setter
    def sms_content(self, sms_content):
        """Sets the sms_content of this RecordForQueryCallRecordMsgV2Output.


        :param sms_content: The sms_content of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._sms_content = sms_content

    @property
    def sms_count(self):
        """Gets the sms_count of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The sms_count of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._sms_count

    @sms_count.setter
    def sms_count(self, sms_count):
        """Sets the sms_count of this RecordForQueryCallRecordMsgV2Output.


        :param sms_count: The sms_count of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._sms_count = sms_count

    @property
    def start_time(self):
        """Gets the start_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The start_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this RecordForQueryCallRecordMsgV2Output.


        :param start_time: The start_time of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._start_time = start_time

    @property
    def sub_service_type(self):
        """Gets the sub_service_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The sub_service_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._sub_service_type

    @sub_service_type.setter
    def sub_service_type(self, sub_service_type):
        """Sets the sub_service_type of this RecordForQueryCallRecordMsgV2Output.


        :param sub_service_type: The sub_service_type of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._sub_service_type = sub_service_type

    @property
    def subscription_id(self):
        """Gets the subscription_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The subscription_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this RecordForQueryCallRecordMsgV2Output.


        :param subscription_id: The subscription_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._subscription_id = subscription_id

    @property
    def task_open_id(self):
        """Gets the task_open_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The task_open_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._task_open_id

    @task_open_id.setter
    def task_open_id(self, task_open_id):
        """Sets the task_open_id of this RecordForQueryCallRecordMsgV2Output.


        :param task_open_id: The task_open_id of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._task_open_id = task_open_id

    @property
    def user_data(self):
        """Gets the user_data of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The user_data of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._user_data

    @user_data.setter
    def user_data(self, user_data):
        """Sets the user_data of this RecordForQueryCallRecordMsgV2Output.


        :param user_data: The user_data of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._user_data = user_data

    @property
    def verify_anwser(self):
        """Gets the verify_anwser of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The verify_anwser of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._verify_anwser

    @verify_anwser.setter
    def verify_anwser(self, verify_anwser):
        """Sets the verify_anwser of this RecordForQueryCallRecordMsgV2Output.


        :param verify_anwser: The verify_anwser of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._verify_anwser = verify_anwser

    @property
    def verify_correct_anwser(self):
        """Gets the verify_correct_anwser of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The verify_correct_anwser of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._verify_correct_anwser

    @verify_correct_anwser.setter
    def verify_correct_anwser(self, verify_correct_anwser):
        """Sets the verify_correct_anwser of this RecordForQueryCallRecordMsgV2Output.


        :param verify_correct_anwser: The verify_correct_anwser of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._verify_correct_anwser = verify_correct_anwser

    @property
    def verify_result(self):
        """Gets the verify_result of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The verify_result of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: int
        """
        return self._verify_result

    @verify_result.setter
    def verify_result(self, verify_result):
        """Sets the verify_result of this RecordForQueryCallRecordMsgV2Output.


        :param verify_result: The verify_result of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: int
        """

        self._verify_result = verify_result

    @property
    def verify_voice_code(self):
        """Gets the verify_voice_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501


        :return: The verify_voice_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :rtype: str
        """
        return self._verify_voice_code

    @verify_voice_code.setter
    def verify_voice_code(self, verify_voice_code):
        """Sets the verify_voice_code of this RecordForQueryCallRecordMsgV2Output.


        :param verify_voice_code: The verify_voice_code of this RecordForQueryCallRecordMsgV2Output.  # noqa: E501
        :type: str
        """

        self._verify_voice_code = verify_voice_code

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RecordForQueryCallRecordMsgV2Output, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RecordForQueryCallRecordMsgV2Output):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, RecordForQueryCallRecordMsgV2Output):
            return True

        return self.to_dict() != other.to_dict()
