# coding: utf-8

"""
    vms

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class RecordForNumberListOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'current_bind_count': 'int',
        'number': 'str',
        'number_location': 'str',
        'number_pool_name': 'str',
        'number_pool_no': 'str',
        'number_pool_type_code': 'int',
        'number_pool_type_desc': 'str',
        'number_purchase_time': 'str',
        'number_status_code': 'int',
        'number_status_desc': 'str',
        'number_type_code': 'int',
        'number_type_desc': 'str',
        'qualification_no': 'str',
        'service_type_code': 'int',
        'service_type_desc': 'str'
    }

    attribute_map = {
        'current_bind_count': 'CurrentBindCount',
        'number': 'Number',
        'number_location': 'NumberLocation',
        'number_pool_name': 'NumberPoolName',
        'number_pool_no': 'NumberPoolNo',
        'number_pool_type_code': 'NumberPoolTypeCode',
        'number_pool_type_desc': 'NumberPoolTypeDesc',
        'number_purchase_time': 'NumberPurchaseTime',
        'number_status_code': 'NumberStatusCode',
        'number_status_desc': 'NumberStatusDesc',
        'number_type_code': 'NumberTypeCode',
        'number_type_desc': 'NumberTypeDesc',
        'qualification_no': 'QualificationNo',
        'service_type_code': 'ServiceTypeCode',
        'service_type_desc': 'ServiceTypeDesc'
    }

    def __init__(self, current_bind_count=None, number=None, number_location=None, number_pool_name=None, number_pool_no=None, number_pool_type_code=None, number_pool_type_desc=None, number_purchase_time=None, number_status_code=None, number_status_desc=None, number_type_code=None, number_type_desc=None, qualification_no=None, service_type_code=None, service_type_desc=None, _configuration=None):  # noqa: E501
        """RecordForNumberListOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._current_bind_count = None
        self._number = None
        self._number_location = None
        self._number_pool_name = None
        self._number_pool_no = None
        self._number_pool_type_code = None
        self._number_pool_type_desc = None
        self._number_purchase_time = None
        self._number_status_code = None
        self._number_status_desc = None
        self._number_type_code = None
        self._number_type_desc = None
        self._qualification_no = None
        self._service_type_code = None
        self._service_type_desc = None
        self.discriminator = None

        if current_bind_count is not None:
            self.current_bind_count = current_bind_count
        if number is not None:
            self.number = number
        if number_location is not None:
            self.number_location = number_location
        if number_pool_name is not None:
            self.number_pool_name = number_pool_name
        if number_pool_no is not None:
            self.number_pool_no = number_pool_no
        if number_pool_type_code is not None:
            self.number_pool_type_code = number_pool_type_code
        if number_pool_type_desc is not None:
            self.number_pool_type_desc = number_pool_type_desc
        if number_purchase_time is not None:
            self.number_purchase_time = number_purchase_time
        if number_status_code is not None:
            self.number_status_code = number_status_code
        if number_status_desc is not None:
            self.number_status_desc = number_status_desc
        if number_type_code is not None:
            self.number_type_code = number_type_code
        if number_type_desc is not None:
            self.number_type_desc = number_type_desc
        if qualification_no is not None:
            self.qualification_no = qualification_no
        if service_type_code is not None:
            self.service_type_code = service_type_code
        if service_type_desc is not None:
            self.service_type_desc = service_type_desc

    @property
    def current_bind_count(self):
        """Gets the current_bind_count of this RecordForNumberListOutput.  # noqa: E501


        :return: The current_bind_count of this RecordForNumberListOutput.  # noqa: E501
        :rtype: int
        """
        return self._current_bind_count

    @current_bind_count.setter
    def current_bind_count(self, current_bind_count):
        """Sets the current_bind_count of this RecordForNumberListOutput.


        :param current_bind_count: The current_bind_count of this RecordForNumberListOutput.  # noqa: E501
        :type: int
        """

        self._current_bind_count = current_bind_count

    @property
    def number(self):
        """Gets the number of this RecordForNumberListOutput.  # noqa: E501


        :return: The number of this RecordForNumberListOutput.  # noqa: E501
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this RecordForNumberListOutput.


        :param number: The number of this RecordForNumberListOutput.  # noqa: E501
        :type: str
        """

        self._number = number

    @property
    def number_location(self):
        """Gets the number_location of this RecordForNumberListOutput.  # noqa: E501


        :return: The number_location of this RecordForNumberListOutput.  # noqa: E501
        :rtype: str
        """
        return self._number_location

    @number_location.setter
    def number_location(self, number_location):
        """Sets the number_location of this RecordForNumberListOutput.


        :param number_location: The number_location of this RecordForNumberListOutput.  # noqa: E501
        :type: str
        """

        self._number_location = number_location

    @property
    def number_pool_name(self):
        """Gets the number_pool_name of this RecordForNumberListOutput.  # noqa: E501


        :return: The number_pool_name of this RecordForNumberListOutput.  # noqa: E501
        :rtype: str
        """
        return self._number_pool_name

    @number_pool_name.setter
    def number_pool_name(self, number_pool_name):
        """Sets the number_pool_name of this RecordForNumberListOutput.


        :param number_pool_name: The number_pool_name of this RecordForNumberListOutput.  # noqa: E501
        :type: str
        """

        self._number_pool_name = number_pool_name

    @property
    def number_pool_no(self):
        """Gets the number_pool_no of this RecordForNumberListOutput.  # noqa: E501


        :return: The number_pool_no of this RecordForNumberListOutput.  # noqa: E501
        :rtype: str
        """
        return self._number_pool_no

    @number_pool_no.setter
    def number_pool_no(self, number_pool_no):
        """Sets the number_pool_no of this RecordForNumberListOutput.


        :param number_pool_no: The number_pool_no of this RecordForNumberListOutput.  # noqa: E501
        :type: str
        """

        self._number_pool_no = number_pool_no

    @property
    def number_pool_type_code(self):
        """Gets the number_pool_type_code of this RecordForNumberListOutput.  # noqa: E501


        :return: The number_pool_type_code of this RecordForNumberListOutput.  # noqa: E501
        :rtype: int
        """
        return self._number_pool_type_code

    @number_pool_type_code.setter
    def number_pool_type_code(self, number_pool_type_code):
        """Sets the number_pool_type_code of this RecordForNumberListOutput.


        :param number_pool_type_code: The number_pool_type_code of this RecordForNumberListOutput.  # noqa: E501
        :type: int
        """

        self._number_pool_type_code = number_pool_type_code

    @property
    def number_pool_type_desc(self):
        """Gets the number_pool_type_desc of this RecordForNumberListOutput.  # noqa: E501


        :return: The number_pool_type_desc of this RecordForNumberListOutput.  # noqa: E501
        :rtype: str
        """
        return self._number_pool_type_desc

    @number_pool_type_desc.setter
    def number_pool_type_desc(self, number_pool_type_desc):
        """Sets the number_pool_type_desc of this RecordForNumberListOutput.


        :param number_pool_type_desc: The number_pool_type_desc of this RecordForNumberListOutput.  # noqa: E501
        :type: str
        """

        self._number_pool_type_desc = number_pool_type_desc

    @property
    def number_purchase_time(self):
        """Gets the number_purchase_time of this RecordForNumberListOutput.  # noqa: E501


        :return: The number_purchase_time of this RecordForNumberListOutput.  # noqa: E501
        :rtype: str
        """
        return self._number_purchase_time

    @number_purchase_time.setter
    def number_purchase_time(self, number_purchase_time):
        """Sets the number_purchase_time of this RecordForNumberListOutput.


        :param number_purchase_time: The number_purchase_time of this RecordForNumberListOutput.  # noqa: E501
        :type: str
        """

        self._number_purchase_time = number_purchase_time

    @property
    def number_status_code(self):
        """Gets the number_status_code of this RecordForNumberListOutput.  # noqa: E501


        :return: The number_status_code of this RecordForNumberListOutput.  # noqa: E501
        :rtype: int
        """
        return self._number_status_code

    @number_status_code.setter
    def number_status_code(self, number_status_code):
        """Sets the number_status_code of this RecordForNumberListOutput.


        :param number_status_code: The number_status_code of this RecordForNumberListOutput.  # noqa: E501
        :type: int
        """

        self._number_status_code = number_status_code

    @property
    def number_status_desc(self):
        """Gets the number_status_desc of this RecordForNumberListOutput.  # noqa: E501


        :return: The number_status_desc of this RecordForNumberListOutput.  # noqa: E501
        :rtype: str
        """
        return self._number_status_desc

    @number_status_desc.setter
    def number_status_desc(self, number_status_desc):
        """Sets the number_status_desc of this RecordForNumberListOutput.


        :param number_status_desc: The number_status_desc of this RecordForNumberListOutput.  # noqa: E501
        :type: str
        """

        self._number_status_desc = number_status_desc

    @property
    def number_type_code(self):
        """Gets the number_type_code of this RecordForNumberListOutput.  # noqa: E501


        :return: The number_type_code of this RecordForNumberListOutput.  # noqa: E501
        :rtype: int
        """
        return self._number_type_code

    @number_type_code.setter
    def number_type_code(self, number_type_code):
        """Sets the number_type_code of this RecordForNumberListOutput.


        :param number_type_code: The number_type_code of this RecordForNumberListOutput.  # noqa: E501
        :type: int
        """

        self._number_type_code = number_type_code

    @property
    def number_type_desc(self):
        """Gets the number_type_desc of this RecordForNumberListOutput.  # noqa: E501


        :return: The number_type_desc of this RecordForNumberListOutput.  # noqa: E501
        :rtype: str
        """
        return self._number_type_desc

    @number_type_desc.setter
    def number_type_desc(self, number_type_desc):
        """Sets the number_type_desc of this RecordForNumberListOutput.


        :param number_type_desc: The number_type_desc of this RecordForNumberListOutput.  # noqa: E501
        :type: str
        """

        self._number_type_desc = number_type_desc

    @property
    def qualification_no(self):
        """Gets the qualification_no of this RecordForNumberListOutput.  # noqa: E501


        :return: The qualification_no of this RecordForNumberListOutput.  # noqa: E501
        :rtype: str
        """
        return self._qualification_no

    @qualification_no.setter
    def qualification_no(self, qualification_no):
        """Sets the qualification_no of this RecordForNumberListOutput.


        :param qualification_no: The qualification_no of this RecordForNumberListOutput.  # noqa: E501
        :type: str
        """

        self._qualification_no = qualification_no

    @property
    def service_type_code(self):
        """Gets the service_type_code of this RecordForNumberListOutput.  # noqa: E501


        :return: The service_type_code of this RecordForNumberListOutput.  # noqa: E501
        :rtype: int
        """
        return self._service_type_code

    @service_type_code.setter
    def service_type_code(self, service_type_code):
        """Sets the service_type_code of this RecordForNumberListOutput.


        :param service_type_code: The service_type_code of this RecordForNumberListOutput.  # noqa: E501
        :type: int
        """

        self._service_type_code = service_type_code

    @property
    def service_type_desc(self):
        """Gets the service_type_desc of this RecordForNumberListOutput.  # noqa: E501


        :return: The service_type_desc of this RecordForNumberListOutput.  # noqa: E501
        :rtype: str
        """
        return self._service_type_desc

    @service_type_desc.setter
    def service_type_desc(self, service_type_desc):
        """Sets the service_type_desc of this RecordForNumberListOutput.


        :param service_type_desc: The service_type_desc of this RecordForNumberListOutput.  # noqa: E501
        :type: str
        """

        self._service_type_desc = service_type_desc

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RecordForNumberListOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RecordForNumberListOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, RecordForNumberListOutput):
            return True

        return self.to_dict() != other.to_dict()
